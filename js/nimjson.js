/* Generated by the Nim Compiler v2.0.0 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI687865878 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI184549379 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI687865861 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI687865860 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI687865876 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI687865873 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI687865870 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI687865859 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191182490 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1191182341 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1191182340 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182343 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1191182339 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182342 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI973078607 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI973078613 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1258291272 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1258291235 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1258291205 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1258291228 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1258291204 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643075 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1258291221 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1258291218 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1258291215 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1258291229 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1258291207 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI788529221 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068419 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554448 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI1275068420 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI33555835 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555835.node = NNI33555835;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
NTI1275068420.base = NTI33554448;
var NNI1275068419 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1275068419.node = NNI1275068419;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555179.base = NTI33555177;
NTI134217746.base = NTI33555179;
NTI1275068419.base = NTI134217746;
var NNI788529221 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI788529221.node = NNI788529221;
NTI1258291207.base = NTI33554449;
NTI1258291229.base = NTI33554449;
var NNI1258291235 = {kind: 1, offset: "type", len: 0, typ: NTI33554449, name: "type", sons: null};
NTI1258291235.node = NNI1258291235;
NTI1258291205.base = NTI1258291235;
var NNI1258291228 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "description", len: 0, typ: NTI33554449, name: "description", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554449, name: "type", sons: null}, 
{kind: 1, offset: "items", len: 0, typ: NTI1258291205, name: "items", sons: null}, 
{kind: 1, offset: "required", len: 0, typ: NTI1258291229, name: "required", sons: null}, 
{kind: 1, offset: "properties", len: 0, typ: NTI1258291215, name: "properties", sons: null}, 
{kind: 1, offset: "$ref", len: 0, typ: NTI33554449, name: "$ref", sons: null}]};
NTI1258291228.node = NNI1258291228;
NTI1258291204.base = NTI1258291228;
var NNI1258291221 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI704643075, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1258291204, name: "Field3", sons: null}]};
NTI1258291221.node = NNI1258291221;
NTI1258291218.base = NTI1258291221;
var NNI1258291215 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1258291218, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI1258291215.node = NNI1258291215;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
NTI1258291272.base = NTI33554449;
var NNI973078613 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI973078607, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI973078613.node = NNI973078613;
var NNI1191182342 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1191182342.node = NNI1191182342;
NTI1191182342.base = NTI33555179;
var NNI1191182340 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "isPublic", len: 0, typ: NTI33554466, name: "isPublic", sons: null}, 
{kind: 1, offset: "isNormalized", len: 0, typ: NTI33554466, name: "isNormalized", sons: null}, 
{kind: 1, offset: "isBackquoted", len: 0, typ: NTI33554466, name: "isBackquoted", sons: null}, 
{kind: 1, offset: "isSeq", len: 0, typ: NTI33554466, name: "isSeq", sons: null}, 
{kind: 1, offset: "isOption", len: 0, typ: NTI33554466, name: "isOption", sons: null}]};
NTI1191182340.node = NNI1191182340;
NTI1191182343.base = NTI1191182340;
var NNI1191182339 = {kind: 2, len: 9, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "fields", len: 0, typ: NTI1191182343, name: "fields", sons: null}, 
{kind: 1, offset: "isRef", len: 0, typ: NTI33554466, name: "isRef", sons: null}, 
{kind: 1, offset: "isNilType", len: 0, typ: NTI33554466, name: "isNilType", sons: null}, 
{kind: 1, offset: "isPublic", len: 0, typ: NTI33554466, name: "isPublic", sons: null}, 
{kind: 1, offset: "isNormalized", len: 0, typ: NTI33554466, name: "isNormalized", sons: null}, 
{kind: 1, offset: "isBackquoted", len: 0, typ: NTI33554466, name: "isBackquoted", sons: null}, 
{kind: 1, offset: "primitiveType", len: 0, typ: NTI33554449, name: "primitiveType", sons: null}, 
{kind: 1, offset: "isSeq", len: 0, typ: NTI33554466, name: "isSeq", sons: null}]};
NTI1191182339.node = NNI1191182339;
var NNI1191182341 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1191182341.node = NNI1191182341;
NTI1191182341.base = NTI33555179;
NTI1191182490.base = NTI33554449;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555178;
var NNI687865859 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI687865859, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI687865859, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI687865859, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI687865859, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI687865859, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI687865859, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI687865859, name: "JArray", len: 0, sons: null}}};
NTI687865859.node = NNI687865859;
NTI687865878.base = NTI687865860;
var NNI687865861 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isUnquoted", len: 0, typ: NTI33554466, name: "isUnquoted", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI687865859, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI33554449, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI184549379, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI33554445, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI33554466, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI687865870, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI687865878, name: "elems", sons: null}]]}]};
NTI687865861.node = NNI687865861;
NTI687865860.base = NTI687865861;
var NNI687865876 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI704643075, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI687865860, name: "Field3", sons: null}]};
NTI687865876.node = NNI687865876;
NTI687865873.base = NTI687865876;
var NNI687865870 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI687865873, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI687865870.node = NNI687865870;

function mnewString(len_33557003) {
        return new Array(len_33557003);
  

  
}

function arrayConstr(len_33557314, value_33557315, typ_33557316) {
        var result = new Array(len_33557314);
    for (var i = 0; i < len_33557314; ++i) result[i] = nimCopy(null, value_33557315, typ_33557316);
    return result;
  

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    e_33556653.trace = nimCopy(null, rawWriteStackTrace_33556604(), NTI33554449);
    throw e_33556653;

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}
var ConstSet2 = setConstr(32, 10, 9, 13);
            var whiteSpace_1275068427 = nimCopy(null, ConstSet2, NTI1275068420);

function addChar(x_33557415, c_33557416) {
    x_33557415.push(c_33557416);

  
}

function nimMin(a_33557104, b_33557105) {
    var Temporary1;

  var result_33557106 = 0;

  BeforeRet: {
    if ((a_33557104 <= b_33557105)) {
    Temporary1 = a_33557104;
    }
    else {
    Temporary1 = b_33557105;
    }
    
    result_33557106 = Temporary1;
    break BeforeRet;
  };

  return result_33557106;

}
var ConstSet3 = setConstr(120, 88);

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}

function eqStrings(a_33557041, b_33557042) {
        if (a_33557041 == b_33557042) return true;
    if (a_33557041 === null && b_33557042.length == 0) return true;
    if (b_33557042 === null && a_33557041.length == 0) return true;
    if ((!a_33557041) || (!b_33557042)) return false;
    var alen = a_33557041.length;
    if (alen != b_33557042.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557041[i] != b_33557042[i]) return false;
    return true;
  

  
}

function divInt(a_33557062, b_33557063) {
        if (b_33557063 == 0) raiseDivByZero();
    if (b_33557063 == -1 && a_33557062 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557062 / b_33557063);
  

  
}

function mulInt(a_33557058, b_33557059) {
        var result = a_33557058 * b_33557059;
    checkOverflowInt(result);
    return result;
  

  
}

function modInt(a_33557066, b_33557067) {
        if (b_33557067 == 0) raiseDivByZero();
    if (b_33557067 == -1 && a_33557066 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557066 % b_33557067);
  

  
}

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}

function genericReset(x_33557306, ti_33557307) {
  var result_33557308 = null;

    result_33557308 = null;
    switch (ti_33557307.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557259(ti_33557307)) {
              result_33557308 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557308 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557307.kind == 17)) {
      result_33557308 = {m_type: ti_33557307};
      }
      else {
        result_33557308 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557308 = [];
    
      break;
    case 4:
    case 16:
            result_33557308 = new Array(x_33557306.length);
      for (var i = 0; i < x_33557306.length; ++i) {
        result_33557308[i] = genericReset(x_33557306[i], ti_33557307.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557308;

}
var ConstSet4 = setConstr(60, 62, 94);
var ConstSet5 = setConstr(60, 62, 94);
var ConstSet6 = setConstr(45, 43, 32);
var ConstSet7 = setConstr([48, 57]);
var ConstSet8 = setConstr([48, 57]);
var ConstSet9 = setConstr([48, 57]);
var ConstSet10 = setConstr([65, 90], [97, 122]);

function nimMax(a_33557108, b_33557109) {
    var Temporary1;

  var result_33557110 = 0;

  BeforeRet: {
    if ((b_33557109 <= a_33557108)) {
    Temporary1 = a_33557108;
    }
    else {
    Temporary1 = b_33557109;
    }
    
    result_33557110 = Temporary1;
    break BeforeRet;
  };

  return result_33557110;

}
            var needQuoteChars_1191182425 = new Uint8Array([92, 47, 32, 45, 42]);
            var reservedKeyword_1191182426 = [[116,121,112,101], [111,98,106,101,99,116], [101,110,117,109], [108,101,116], [99,111,110,115,116], [118,97,114]];
var ConstSet11 = setConstr([97, 122]);
var ConstSet12 = setConstr(5);

function raiseFieldError2(f_33556854, discVal_33556855) {
    raiseException({message: (f_33556854 || []).concat(discVal_33556855 || [],[39] || []), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_33556438) {
  var result_33556439 = [];

    if (x_33556438) {
    result_33556439 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556439 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556439;

}

function reprDiscriminant(e_33557614, typ_33557615) {
    var Temporary1;

  var result_33557616 = [];

  var F = {procname: "system.reprDiscriminant", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system/repr_impl.nim", line: 0};
  framePtr = F;
    F.line = 12;
    F.filename = "repr_impl.nim";
    F.line = 12;
    switch (typ_33557615.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557614, typ_33557615);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557614 == 0)));
      break;
    default: 
      Temporary1 = HEX24_369098760(e_33557614);
      break;
    }
    result_33557616 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_33557616;

}
var ConstSet13 = setConstr(6);
var ConstSet14 = setConstr(6);
var ConstSet15 = setConstr(6);
var ConstSet16 = setConstr(6);
var ConstSet17 = setConstr(6);
var ConstSet18 = setConstr(5);
var F = {procname: "module jsbigints", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsutils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/private/jsutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsutils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/private/jsutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/hashes.nim", line: 0};
framePtr = F;
F.line = 218;
F.filename = "hashes.nim";
var objectID_704643249 = [0];
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module decode_helpers", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/private/decode_helpers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module decode_helpers", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/private/decode_helpers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/js/jsffi.nim", line: 0};
framePtr = F;
F.line = 45;
F.filename = "jsffi.nim";
F.line = 46;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module utils", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module utils", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objvar", prev: framePtr, filename: "/home/runner/.nimble/pkgs2/jsony-1.1.3-3a1d109f9ac95c708549b976ceab7ace5b7ef558/jsony/objvar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objvar", prev: framePtr, filename: "/home/runner/.nimble/pkgs2/jsony-1.1.3-3a1d109f9ac95c708549b976ceab7ace5b7ef558/jsony/objvar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsony", prev: framePtr, filename: "/home/runner/.nimble/pkgs2/jsony-1.1.3-3a1d109f9ac95c708549b976ceab7ace5b7ef558/jsony.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsony", prev: framePtr, filename: "/home/runner/.nimble/pkgs2/jsony-1.1.3-3a1d109f9ac95c708549b976ceab7ace5b7ef558/jsony.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json_schema_parser", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/json_schema_parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json_schema_parser", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/json_schema_parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimjson", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimjson", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjson.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function auxWriteStackTrace_33556508(f_33556509) {
  var result_33556510 = [[]];

    var it_33556518 = f_33556509;
    var i_33556519 = 0;
    var total_33556520 = 0;
    var tempFrames_33556521 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555835);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556518 == null)) && (i_33556519 <= 63))) break Label2;
          tempFrames_33556521[i_33556519].Field0 = it_33556518.procname;
          tempFrames_33556521[i_33556519].Field1 = it_33556518.line;
          tempFrames_33556521[i_33556519].Field2 = it_33556518.filename;
          i_33556519 += 1;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556518 == null))) break Label4;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    result_33556510[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556520 == i_33556519))) {
    result_33556510[0].push.apply(result_33556510[0], [40]);;
    result_33556510[0].push.apply(result_33556510[0], HEX24_369098760((total_33556520 - i_33556519)));;
    result_33556510[0].push.apply(result_33556510[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556554 = 0;
      var colontmp__536870937 = 0;
      colontmp__536870937 = (i_33556519 - 1);
      var res_536870939 = colontmp__536870937;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_536870939)) break Label7;
            j_33556554 = res_536870939;
            result_33556510[0].push.apply(result_33556510[0], cstrToNimstr(tempFrames_33556521[j_33556554].Field2));;
            if ((0 < tempFrames_33556521[j_33556554].Field1)) {
            result_33556510[0].push.apply(result_33556510[0], [40]);;
            addInt_301990129(result_33556510, 0, tempFrames_33556521[j_33556554].Field1);
            if (false) {
            result_33556510[0].push.apply(result_33556510[0], [44,32]);;
            addInt_301990129(result_33556510, 0, 0);
            }
            
            result_33556510[0].push.apply(result_33556510[0], [41]);;
            }
            
            result_33556510[0].push.apply(result_33556510[0], [32,97,116,32]);;
            add_33556373(result_33556510, 0, tempFrames_33556521[j_33556554].Field0);
            result_33556510[0].push.apply(result_33556510[0], [10]);;
            res_536870939 -= 1;
          }
      };
    };

  return result_33556510[0];

}

function rawWriteStackTrace_33556604() {
  var result_33556605 = [];

    if (!((framePtr == null))) {
    result_33556605 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10] || []).concat(auxWriteStackTrace_33556508(framePtr) || []), NTI33554449);
    }
    else {
      result_33556605 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556605;

}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 635;
    F.filename = "system.nim";
    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }  framePtr = F.prev;

  return result_33556922;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    buf_33556650[0].push.apply(buf_33556650[0], rawWriteStackTrace_33556604());;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 43;
    F.filename = "digitsutils.nim";
    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    F.line = 44;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      F.line = 46;
      var iHEX60gensym4_301990110 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_536870932 = 0;
      Label3: {
        F.line = 120;
          Label4: while (true) {
          if (!(i_536870932 < n_301990095)) break Label4;
            F.line = 49;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990110 = i_536870932;
            F.line = 49;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_536870932 = addInt(i_536870932, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 55;
    F.filename = "digitsutils.nim";
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));
  framePtr = F.prev;

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 111;
    F.filename = "digitsutils.nim";
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));
  framePtr = F.prev;

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 115;
    F.filename = "digitsutils.nim";
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));
  framePtr = F.prev;

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "dollars.nim";
    addInt_301990129(result_369098762, 0, x_369098761);
  framePtr = F.prev;

  return result_369098762[0];

}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556813) || [],[32,46,46,32] || [],HEX24_369098760(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function parseHex_939525091(s_939525093, number_939525094, number_939525094_Idx, maxLen_939525095) {
    var Temporary1;

  var result_939525096 = 0;

  var F = {procname: "parseHex.parseHex", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 186;
    F.filename = "parseutils.nim";
    var i_939525097 = 0;
    F.line = 187;
    var output_939525098 = 0;
    F.line = 188;
    var foundDigit_939525099 = false;
    F.line = 189;
    if ((maxLen_939525095 == 0)) {
    Temporary1 = (s_939525093).length;
    }
    else {
    Temporary1 = addInt(i_939525097, maxLen_939525095);
    }
    
    var last_939525106 = nimMin((s_939525093).length, Temporary1);
    if ((((addInt(i_939525097, 1) < last_939525106) && (s_939525093[chckIndx(i_939525097, 0, (s_939525093).length - 1)] == 48)) && (ConstSet3[s_939525093[chckIndx(addInt(i_939525097, 1), 0, (s_939525093).length - 1)]] != undefined))) {
    F.line = 190;
    i_939525097 = addInt(i_939525097, 2);
    }
    else {
    if (((i_939525097 < last_939525106) && (s_939525093[chckIndx(i_939525097, 0, (s_939525093).length - 1)] == 35))) {
    F.line = 191;
    i_939525097 = addInt(i_939525097, 1);
    }
    }
    Label2: {
      F.line = 192;
        Label3: while (true) {
        if (!(i_939525097 < last_939525106)) break Label3;
          F.line = 193;
          switch (s_939525093[chckIndx(i_939525097, 0, (s_939525093).length - 1)]) {
          case 95:
            break;
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            F.line = 196;
            output_939525098 = (((output_939525098 << 4) << 0 >> 0) | subInt(s_939525093[chckIndx(i_939525097, 0, (s_939525093).length - 1)], 48));
            F.line = 197;
            foundDigit_939525099 = true;
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
            F.line = 199;
            output_939525098 = (((output_939525098 << 4) << 0 >> 0) | addInt(subInt(s_939525093[chckIndx(i_939525097, 0, (s_939525093).length - 1)], 97), 10));
            F.line = 200;
            foundDigit_939525099 = true;
            break;
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
            F.line = 202;
            output_939525098 = (((output_939525098 << 4) << 0 >> 0) | addInt(subInt(s_939525093[chckIndx(i_939525097, 0, (s_939525093).length - 1)], 65), 10));
            F.line = 203;
            foundDigit_939525099 = true;
            break;
          default: 
            F.line = 204;
            break Label2;
            break;
          }
          F.line = 205;
          i_939525097 = addInt(i_939525097, 1);
        }
    };
    if (foundDigit_939525099) {
    F.line = 207;
    number_939525094[number_939525094_Idx] = output_939525098;
    F.line = 208;
    result_939525096 = i_939525097;
    }
    
  framePtr = F.prev;

  return result_939525096;

}

function parseHex_939525084(s_939525086, number_939525087, number_939525087_Idx, start_939525088, maxLen_939525089) {
  var result_939525090 = 0;

  var F = {procname: "parseHex.parseHex", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 798;
    F.filename = "parseutils.nim";
    result_939525090 = parseHex_939525091((s_939525086.slice(start_939525088, (s_939525086).length - 1 + 1)), number_939525087, number_939525087_Idx, maxLen_939525089);
  framePtr = F.prev;

  return result_939525090;

}

function nsuParseHexInt(s_939525082) {
  var result_939525083 = [0];

  var F = {procname: "strutils.parseHexInt", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1216;
    F.filename = "strutils.nim";
    result_939525083[0] = 0;
    F.line = 1217;
    var L_939525156 = parseHex_939525084(s_939525082, result_939525083, 0, 0, 0);
    if ((!((L_939525156 == (s_939525082).length)) || (L_939525156 == 0))) {
    F.line = 1219;
    raiseException({message: ([105,110,118,97,108,105,100,32,104,101,120,32,105,110,116,101,103,101,114,58,32] || []).concat(s_939525082 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_939525083[0];

}

function HEX5BHEX5D_939525375(s_939525378, x_939525379) {
  var result_939525380 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 83;
    F.filename = "indices.nim";
    var a_939525382 = x_939525379.a;
    F.line = 84;
    var L_939525384 = addInt(subInt(x_939525379.b, a_939525382), 1);
    F.line = 85;
    result_939525380 = nimCopy(null, mnewString(chckRange(L_939525384, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 86;
      var i_939525389 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_536870954 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_536870954 < L_939525384)) break Label3;
            F.line = 86;
            F.filename = "indices.nim";
            i_939525389 = i_536870954;
            F.line = 86;
            result_939525380[chckIndx(i_939525389, 0, (result_939525380).length - 1)] = s_939525378[chckIndx(addInt(i_939525389, a_939525382), 0, (s_939525378).length - 1)];
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_536870954 = addInt(i_536870954, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_939525380;

}

function HEX2EHEX2E_1023410224(a_1023410227, b_1023410228) {
  var result_1023410229 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 416;
    F.filename = "system.nim";
    result_1023410229 = nimCopy(result_1023410229, {a: a_1023410227, b: b_1023410228}, NTI788529221);
  framePtr = F.prev;

  return result_1023410229;

}

function HEX3CHEX3DHEX25_33555507(x_33555508, y_33555509) {
  var result_33555510 = false;

  var F = {procname: "system.<=%", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system/comparisons.nim", line: 0};
  framePtr = F;
    F.line = 185;
    F.filename = "comparisons.nim";
    result_33555510 = (Number(BigInt.asUintN(32, BigInt(x_33555508))) <= Number(BigInt.asUintN(32, BigInt(y_33555509))));
  framePtr = F.prev;

  return result_33555510;

}

function nuctoUTF8(c_1006633367) {
  var result_1006633368 = [];

  var F = {procname: "unicode.toUTF8", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 276;
    F.filename = "unicode.nim";
    result_1006633368 = nimCopy(null, [], NTI33554449);
    F.line = 221;
    var iHEX60gensym21_1006633370 = c_1006633367;
    if (HEX3CHEX3DHEX25_33555507(iHEX60gensym21_1006633370, 127)) {
    F.line = 223;
    if (result_1006633368.length < 1) { for (var i = result_1006633368.length; i < 1; ++i) result_1006633368.push(0); }
         else {result_1006633368.length = 1; };
    F.line = 224;
    result_1006633368[chckIndx(0, 0, (result_1006633368).length - 1)] = chckRange(iHEX60gensym21_1006633370, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555507(iHEX60gensym21_1006633370, 2047)) {
    F.line = 227;
    if (result_1006633368.length < 2) { for (var i = result_1006633368.length; i < 2; ++i) result_1006633368.push(0); }
         else {result_1006633368.length = 2; };
    F.line = 228;
    result_1006633368[chckIndx(0, 0, (result_1006633368).length - 1)] = chckRange(((iHEX60gensym21_1006633370 >> 6) | 192), 0, 255);
    F.line = 229;
    result_1006633368[chckIndx(1, 0, (result_1006633368).length - 1)] = chckRange(((iHEX60gensym21_1006633370 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555507(iHEX60gensym21_1006633370, 65535)) {
    F.line = 232;
    if (result_1006633368.length < 3) { for (var i = result_1006633368.length; i < 3; ++i) result_1006633368.push(0); }
         else {result_1006633368.length = 3; };
    F.line = 233;
    result_1006633368[chckIndx(0, 0, (result_1006633368).length - 1)] = chckRange(((iHEX60gensym21_1006633370 >> 12) | 224), 0, 255);
    F.line = 234;
    result_1006633368[chckIndx(1, 0, (result_1006633368).length - 1)] = chckRange((((iHEX60gensym21_1006633370 >> 6) & 63) | 128), 0, 255);
    F.line = 235;
    result_1006633368[chckIndx(2, 0, (result_1006633368).length - 1)] = chckRange(((iHEX60gensym21_1006633370 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555507(iHEX60gensym21_1006633370, 2097151)) {
    F.line = 238;
    if (result_1006633368.length < 4) { for (var i = result_1006633368.length; i < 4; ++i) result_1006633368.push(0); }
         else {result_1006633368.length = 4; };
    F.line = 239;
    result_1006633368[chckIndx(0, 0, (result_1006633368).length - 1)] = chckRange(((iHEX60gensym21_1006633370 >> 18) | 240), 0, 255);
    F.line = 240;
    result_1006633368[chckIndx(1, 0, (result_1006633368).length - 1)] = chckRange((((iHEX60gensym21_1006633370 >> 12) & 63) | 128), 0, 255);
    F.line = 241;
    result_1006633368[chckIndx(2, 0, (result_1006633368).length - 1)] = chckRange((((iHEX60gensym21_1006633370 >> 6) & 63) | 128), 0, 255);
    F.line = 242;
    result_1006633368[chckIndx(3, 0, (result_1006633368).length - 1)] = chckRange(((iHEX60gensym21_1006633370 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555507(iHEX60gensym21_1006633370, 67108863)) {
    F.line = 245;
    if (result_1006633368.length < 5) { for (var i = result_1006633368.length; i < 5; ++i) result_1006633368.push(0); }
         else {result_1006633368.length = 5; };
    F.line = 246;
    result_1006633368[chckIndx(0, 0, (result_1006633368).length - 1)] = chckRange(((iHEX60gensym21_1006633370 >> 24) | 248), 0, 255);
    F.line = 247;
    result_1006633368[chckIndx(1, 0, (result_1006633368).length - 1)] = chckRange((((iHEX60gensym21_1006633370 >> 18) & 63) | 128), 0, 255);
    F.line = 248;
    result_1006633368[chckIndx(2, 0, (result_1006633368).length - 1)] = chckRange((((iHEX60gensym21_1006633370 >> 12) & 63) | 128), 0, 255);
    F.line = 249;
    result_1006633368[chckIndx(3, 0, (result_1006633368).length - 1)] = chckRange((((iHEX60gensym21_1006633370 >> 6) & 63) | 128), 0, 255);
    F.line = 250;
    result_1006633368[chckIndx(4, 0, (result_1006633368).length - 1)] = chckRange(((iHEX60gensym21_1006633370 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555507(iHEX60gensym21_1006633370, 2147483647)) {
    F.line = 253;
    if (result_1006633368.length < 6) { for (var i = result_1006633368.length; i < 6; ++i) result_1006633368.push(0); }
         else {result_1006633368.length = 6; };
    F.line = 254;
    result_1006633368[chckIndx(0, 0, (result_1006633368).length - 1)] = chckRange(((iHEX60gensym21_1006633370 >> 30) | 252), 0, 255);
    F.line = 255;
    result_1006633368[chckIndx(1, 0, (result_1006633368).length - 1)] = chckRange((((iHEX60gensym21_1006633370 >> 24) & 63) | 128), 0, 255);
    F.line = 256;
    result_1006633368[chckIndx(2, 0, (result_1006633368).length - 1)] = chckRange((((iHEX60gensym21_1006633370 >> 18) & 63) | 128), 0, 255);
    F.line = 257;
    result_1006633368[chckIndx(3, 0, (result_1006633368).length - 1)] = chckRange((((iHEX60gensym21_1006633370 >> 12) & 63) | 128), 0, 255);
    F.line = 258;
    result_1006633368[chckIndx(4, 0, (result_1006633368).length - 1)] = chckRange((((iHEX60gensym21_1006633370 >> 6) & 63) | 128), 0, 255);
    F.line = 259;
    result_1006633368[chckIndx(5, 0, (result_1006633368).length - 1)] = chckRange(((iHEX60gensym21_1006633370 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}
  framePtr = F.prev;

  return result_1006633368;

}

function parseStringSlow_1275068623(s_1275068624, i_1275068625, i_1275068625_Idx, v_1275068626, v_1275068626_Idx) {
  var F = {procname: "jsony.parseStringSlow", prev: framePtr, filename: "/home/runner/.nimble/pkgs2/jsony-1.1.3-3a1d109f9ac95c708549b976ceab7ace5b7ef558/jsony.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 133;
      F.filename = "jsony.nim";
        Label2: while (true) {
        if (!(i_1275068625[i_1275068625_Idx] < (s_1275068624).length)) break Label2;
          F.line = 134;
          var c_1275068627 = s_1275068624[chckIndx(i_1275068625[i_1275068625_Idx], 0, (s_1275068624).length - 1)];
          F.line = 135;
          switch (c_1275068627) {
          case 34:
            F.line = 137;
            break Label1;
            break;
          case 92:
            F.line = 139;
            i_1275068625[i_1275068625_Idx] = addInt(i_1275068625[i_1275068625_Idx], 1);
            F.line = 140;
            var c_1275068633 = s_1275068624[chckIndx(i_1275068625[i_1275068625_Idx], 0, (s_1275068624).length - 1)];
            F.line = 141;
            switch (c_1275068633) {
            case 34:
            case 92:
            case 47:
              F.line = 142;
              addChar(v_1275068626[v_1275068626_Idx], c_1275068633);;
              break;
            case 98:
              F.line = 143;
              addChar(v_1275068626[v_1275068626_Idx], 8);;
              break;
            case 102:
              F.line = 144;
              addChar(v_1275068626[v_1275068626_Idx], 12);;
              break;
            case 110:
              F.line = 145;
              addChar(v_1275068626[v_1275068626_Idx], 10);;
              break;
            case 114:
              F.line = 146;
              addChar(v_1275068626[v_1275068626_Idx], 13);;
              break;
            case 116:
              F.line = 147;
              addChar(v_1275068626[v_1275068626_Idx], 9);;
              break;
            case 117:
              F.line = 149;
              i_1275068625[i_1275068625_Idx] = addInt(i_1275068625[i_1275068625_Idx], 1);
              F.line = 150;
              var u_1275068663 = nsuParseHexInt(HEX5BHEX5D_939525375(s_1275068624, HEX2EHEX2E_1023410224(i_1275068625[i_1275068625_Idx], subInt(addInt(i_1275068625[i_1275068625_Idx], 4), 1))));
              F.line = 151;
              i_1275068625[i_1275068625_Idx] = addInt(i_1275068625[i_1275068625_Idx], 3);
              F.line = 152;
              v_1275068626[v_1275068626_Idx].push.apply(v_1275068626[v_1275068626_Idx], nuctoUTF8(((u_1275068663) | 0)));;
              break;
            default: 
              F.line = 154;
              addChar(v_1275068626[v_1275068626_Idx], c_1275068633);;
              break;
            }
            break;
          default: 
            F.line = 156;
            addChar(v_1275068626[v_1275068626_Idx], c_1275068627);;
            break;
          }
          F.line = 157;
          i_1275068625[i_1275068625_Idx] = addInt(i_1275068625[i_1275068625_Idx], 1);
        }
    };
    Label3: {
      F.line = 41;
        Label4: while (true) {
        if (!(i_1275068625[i_1275068625_Idx] < (s_1275068624).length)) break Label4;
          F.line = 33;
          var cHEX60gensym14_1275068674 = s_1275068624[chckIndx(i_1275068625[i_1275068625_Idx], 0, (s_1275068624).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym14_1275068674] != undefined))) {
          F.line = 35;
          break Label3;
          }
          
          F.line = 36;
          i_1275068625[i_1275068625_Idx] = addInt(i_1275068625[i_1275068625_Idx], 1);
        }
    };
    if (((s_1275068624).length <= i_1275068625[i_1275068625_Idx])) {
    F.line = 43;
    raiseException({message: ([69,120,112,101,99,116,101,100,32,34,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1275068625[i_1275068625_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    if ((s_1275068624[chckIndx(i_1275068625[i_1275068625_Idx], 0, (s_1275068624).length - 1)] == 34)) {
    F.line = 45;
    i_1275068625[i_1275068625_Idx] = addInt(i_1275068625[i_1275068625_Idx], 1);
    }
    else {
      F.line = 47;
      raiseException({message: ([69,120,112,101,99,116,101,100,32,34,32,98,117,116,32,103,111,116,32] || []).concat([s_1275068624[chckIndx(i_1275068625[i_1275068625_Idx], 0, (s_1275068624).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1275068625[i_1275068625_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
  framePtr = F.prev;

  
}

function parseHook_1275068888(s_1275068889, i_1275068890, i_1275068890_Idx, v_1275068891, v_1275068891_Idx) {
  var F = {procname: "jsony.parseHook", prev: framePtr, filename: "/home/runner/.nimble/pkgs2/jsony-1.1.3-3a1d109f9ac95c708549b976ceab7ace5b7ef558/jsony.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    Label1: {
      F.line = 225;
      F.filename = "jsony.nim";
        Label2: while (true) {
        if (!(i_1275068890[i_1275068890_Idx] < (s_1275068889).length)) break Label2;
          F.line = 33;
          var cHEX60gensym47_1275068893 = s_1275068889[chckIndx(i_1275068890[i_1275068890_Idx], 0, (s_1275068889).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym47_1275068893] != undefined))) {
          F.line = 35;
          break Label1;
          }
          
          F.line = 36;
          i_1275068890[i_1275068890_Idx] = addInt(i_1275068890[i_1275068890_Idx], 1);
        }
    };
    if ((((((addInt(i_1275068890[i_1275068890_Idx], 3) < (s_1275068889).length) && (s_1275068889[chckIndx(addInt(i_1275068890[i_1275068890_Idx], 0), 0, (s_1275068889).length - 1)] == 110)) && (s_1275068889[chckIndx(addInt(i_1275068890[i_1275068890_Idx], 1), 0, (s_1275068889).length - 1)] == 117)) && (s_1275068889[chckIndx(addInt(i_1275068890[i_1275068890_Idx], 2), 0, (s_1275068889).length - 1)] == 108)) && (s_1275068889[chckIndx(addInt(i_1275068890[i_1275068890_Idx], 3), 0, (s_1275068889).length - 1)] == 108))) {
    F.line = 227;
    i_1275068890[i_1275068890_Idx] = addInt(i_1275068890[i_1275068890_Idx], 4);
    F.line = 228;
    break BeforeRet;
    }
    
    Label3: {
      F.line = 41;
        Label4: while (true) {
        if (!(i_1275068890[i_1275068890_Idx] < (s_1275068889).length)) break Label4;
          F.line = 33;
          var cHEX60gensym51_1275068908 = s_1275068889[chckIndx(i_1275068890[i_1275068890_Idx], 0, (s_1275068889).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym51_1275068908] != undefined))) {
          F.line = 35;
          break Label3;
          }
          
          F.line = 36;
          i_1275068890[i_1275068890_Idx] = addInt(i_1275068890[i_1275068890_Idx], 1);
        }
    };
    if (((s_1275068889).length <= i_1275068890[i_1275068890_Idx])) {
    F.line = 43;
    raiseException({message: ([69,120,112,101,99,116,101,100,32,34,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1275068890[i_1275068890_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    if ((s_1275068889[chckIndx(i_1275068890[i_1275068890_Idx], 0, (s_1275068889).length - 1)] == 34)) {
    F.line = 45;
    i_1275068890[i_1275068890_Idx] = addInt(i_1275068890[i_1275068890_Idx], 1);
    }
    else {
      F.line = 47;
      raiseException({message: ([69,120,112,101,99,116,101,100,32,34,32,98,117,116,32,103,111,116,32] || []).concat([s_1275068889[chckIndx(i_1275068890[i_1275068890_Idx], 0, (s_1275068889).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1275068890[i_1275068890_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    F.line = 235;
    parseStringSlow_1275068623(s_1275068889, i_1275068890, i_1275068890_Idx, v_1275068891, v_1275068891_Idx);
  };
  framePtr = F.prev;

  
}

function parseHook_1258291930(s_1258291932, i_1258291933, i_1258291933_Idx, v_1258291934, v_1258291934_Idx) {
  var F = {procname: "parseHook.parseHook", prev: framePtr, filename: "/home/runner/.nimble/pkgs2/jsony-1.1.3-3a1d109f9ac95c708549b976ceab7ace5b7ef558/jsony.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 41;
      F.filename = "jsony.nim";
        Label2: while (true) {
        if (!(i_1258291933[i_1258291933_Idx] < (s_1258291932).length)) break Label2;
          F.line = 33;
          var cHEX60gensym49_1258291936 = s_1258291932[chckIndx(i_1258291933[i_1258291933_Idx], 0, (s_1258291932).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym49_1258291936] != undefined))) {
          F.line = 35;
          break Label1;
          }
          
          F.line = 36;
          i_1258291933[i_1258291933_Idx] = addInt(i_1258291933[i_1258291933_Idx], 1);
        }
    };
    if (((s_1258291932).length <= i_1258291933[i_1258291933_Idx])) {
    F.line = 43;
    raiseException({message: ([69,120,112,101,99,116,101,100,32,91,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1258291933[i_1258291933_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    if ((s_1258291932[chckIndx(i_1258291933[i_1258291933_Idx], 0, (s_1258291932).length - 1)] == 91)) {
    F.line = 45;
    i_1258291933[i_1258291933_Idx] = addInt(i_1258291933[i_1258291933_Idx], 1);
    }
    else {
      F.line = 47;
      raiseException({message: ([69,120,112,101,99,116,101,100,32,91,32,98,117,116,32,103,111,116,32] || []).concat([s_1258291932[chckIndx(i_1258291933[i_1258291933_Idx], 0, (s_1258291932).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1258291933[i_1258291933_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    Label3: {
      F.line = 249;
        Label4: while (true) {
        if (!(i_1258291933[i_1258291933_Idx] < (s_1258291932).length)) break Label4;
          Label5: {
            F.line = 250;
              Label6: while (true) {
              if (!(i_1258291933[i_1258291933_Idx] < (s_1258291932).length)) break Label6;
                F.line = 33;
                var cHEX60gensym59_1258291954 = s_1258291932[chckIndx(i_1258291933[i_1258291933_Idx], 0, (s_1258291932).length - 1)];
                if (!((whiteSpace_1275068427[cHEX60gensym59_1258291954] != undefined))) {
                F.line = 35;
                break Label5;
                }
                
                F.line = 36;
                i_1258291933[i_1258291933_Idx] = addInt(i_1258291933[i_1258291933_Idx], 1);
              }
          };
          if (((i_1258291933[i_1258291933_Idx] < (s_1258291932).length) && (s_1258291932[chckIndx(i_1258291933[i_1258291933_Idx], 0, (s_1258291932).length - 1)] == 93))) {
          F.line = 252;
          break Label3;
          }
          
          F.line = 253;
          var element_1258291964 = [[]];
          F.line = 254;
          parseHook_1275068888(s_1258291932, i_1258291933, i_1258291933_Idx, element_1258291964, 0);
          F.line = 255;
          var Temporary7 = nimCopy(null, element_1258291964[0], NTI33554449);
          v_1258291934[v_1258291934_Idx].push(Temporary7);;
          Label8: {
            F.line = 256;
              Label9: while (true) {
              if (!(i_1258291933[i_1258291933_Idx] < (s_1258291932).length)) break Label9;
                F.line = 33;
                var cHEX60gensym63_1258291970 = s_1258291932[chckIndx(i_1258291933[i_1258291933_Idx], 0, (s_1258291932).length - 1)];
                if (!((whiteSpace_1275068427[cHEX60gensym63_1258291970] != undefined))) {
                F.line = 35;
                break Label8;
                }
                
                F.line = 36;
                i_1258291933[i_1258291933_Idx] = addInt(i_1258291933[i_1258291933_Idx], 1);
              }
          };
          if (((i_1258291933[i_1258291933_Idx] < (s_1258291932).length) && (s_1258291932[chckIndx(i_1258291933[i_1258291933_Idx], 0, (s_1258291932).length - 1)] == 44))) {
          F.line = 258;
          i_1258291933[i_1258291933_Idx] = addInt(i_1258291933[i_1258291933_Idx], 1);
          }
          else {
            F.line = 260;
            break Label3;
          }
          
        }
    };
    Label10: {
      F.line = 41;
        Label11: while (true) {
        if (!(i_1258291933[i_1258291933_Idx] < (s_1258291932).length)) break Label11;
          F.line = 33;
          var cHEX60gensym68_1258291986 = s_1258291932[chckIndx(i_1258291933[i_1258291933_Idx], 0, (s_1258291932).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym68_1258291986] != undefined))) {
          F.line = 35;
          break Label10;
          }
          
          F.line = 36;
          i_1258291933[i_1258291933_Idx] = addInt(i_1258291933[i_1258291933_Idx], 1);
        }
    };
    if (((s_1258291932).length <= i_1258291933[i_1258291933_Idx])) {
    F.line = 43;
    raiseException({message: ([69,120,112,101,99,116,101,100,32,93,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1258291933[i_1258291933_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    if ((s_1258291932[chckIndx(i_1258291933[i_1258291933_Idx], 0, (s_1258291932).length - 1)] == 93)) {
    F.line = 45;
    i_1258291933[i_1258291933_Idx] = addInt(i_1258291933[i_1258291933_Idx], 1);
    }
    else {
      F.line = 47;
      raiseException({message: ([69,120,112,101,99,116,101,100,32,93,32,98,117,116,32,103,111,116,32] || []).concat([s_1258291932[chckIndx(i_1258291933[i_1258291933_Idx], 0, (s_1258291932).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1258291933[i_1258291933_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
  framePtr = F.prev;

  
}

function parseHook_1275068541(s_1275068542, i_1275068543, i_1275068543_Idx, v_1275068544, v_1275068544_Idx) {
  var F = {procname: "jsony.parseHook", prev: framePtr, filename: "/home/runner/.nimble/pkgs2/jsony-1.1.3-3a1d109f9ac95c708549b976ceab7ace5b7ef558/jsony.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 75;
      F.filename = "jsony.nim";
        Label2: while (true) {
        if (!(i_1275068543[i_1275068543_Idx] < (s_1275068542).length)) break Label2;
          F.line = 33;
          var cHEX60gensym6_1275068547 = s_1275068542[chckIndx(i_1275068543[i_1275068543_Idx], 0, (s_1275068542).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym6_1275068547] != undefined))) {
          F.line = 35;
          break Label1;
          }
          
          F.line = 36;
          i_1275068543[i_1275068543_Idx] = addInt(i_1275068543[i_1275068543_Idx], 1);
        }
    };
    if ((((((addInt(i_1275068543[i_1275068543_Idx], 3) < (s_1275068542).length) && (s_1275068542[chckIndx(addInt(i_1275068543[i_1275068543_Idx], 0), 0, (s_1275068542).length - 1)] == 116)) && (s_1275068542[chckIndx(addInt(i_1275068543[i_1275068543_Idx], 1), 0, (s_1275068542).length - 1)] == 114)) && (s_1275068542[chckIndx(addInt(i_1275068543[i_1275068543_Idx], 2), 0, (s_1275068542).length - 1)] == 117)) && (s_1275068542[chckIndx(addInt(i_1275068543[i_1275068543_Idx], 3), 0, (s_1275068542).length - 1)] == 101))) {
    F.line = 77;
    i_1275068543[i_1275068543_Idx] = addInt(i_1275068543[i_1275068543_Idx], 4);
    F.line = 78;
    v_1275068544[v_1275068544_Idx] = true;
    }
    else {
    if (((((((addInt(i_1275068543[i_1275068543_Idx], 4) < (s_1275068542).length) && (s_1275068542[chckIndx(addInt(i_1275068543[i_1275068543_Idx], 0), 0, (s_1275068542).length - 1)] == 102)) && (s_1275068542[chckIndx(addInt(i_1275068543[i_1275068543_Idx], 1), 0, (s_1275068542).length - 1)] == 97)) && (s_1275068542[chckIndx(addInt(i_1275068543[i_1275068543_Idx], 2), 0, (s_1275068542).length - 1)] == 108)) && (s_1275068542[chckIndx(addInt(i_1275068543[i_1275068543_Idx], 3), 0, (s_1275068542).length - 1)] == 115)) && (s_1275068542[chckIndx(addInt(i_1275068543[i_1275068543_Idx], 4), 0, (s_1275068542).length - 1)] == 101))) {
    F.line = 80;
    i_1275068543[i_1275068543_Idx] = addInt(i_1275068543[i_1275068543_Idx], 5);
    F.line = 81;
    v_1275068544[v_1275068544_Idx] = false;
    }
    else {
      F.line = 83;
      raiseException({message: ([66,111,111,108,101,97,110,32,116,114,117,101,32,111,114,32,102,97,108,115,101,32,101,120,112,101,99,116,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1275068543[i_1275068543_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    }
  framePtr = F.prev;

  
}

function parseSymbol_1275068496(s_1275068497, i_1275068498, i_1275068498_Idx) {
  var result_1275068499 = [];

  var F = {procname: "jsony.parseSymbol", prev: framePtr, filename: "/home/runner/.nimble/pkgs2/jsony-1.1.3-3a1d109f9ac95c708549b976ceab7ace5b7ef558/jsony.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    Label1: {
      F.line = 52;
      F.filename = "jsony.nim";
        Label2: while (true) {
        if (!(i_1275068498[i_1275068498_Idx] < (s_1275068497).length)) break Label2;
          F.line = 33;
          var cHEX60gensym0_1275068501 = s_1275068497[chckIndx(i_1275068498[i_1275068498_Idx], 0, (s_1275068497).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym0_1275068501] != undefined))) {
          F.line = 35;
          break Label1;
          }
          
          F.line = 36;
          i_1275068498[i_1275068498_Idx] = addInt(i_1275068498[i_1275068498_Idx], 1);
        }
    };
    F.line = 53;
    var j_1275068511 = i_1275068498[i_1275068498_Idx];
    Label3: {
      F.line = 54;
        Label4: while (true) {
        if (!(i_1275068498[i_1275068498_Idx] < (s_1275068497).length)) break Label4;
          F.line = 55;
          switch (s_1275068497[chckIndx(i_1275068498[i_1275068498_Idx], 0, (s_1275068497).length - 1)]) {
          case 44:
          case 125:
          case 93:
          case 9:
          case 10:
          case 13:
          case 32:
            F.line = 57;
            break Label3;
            break;
          default: 
            break;
          }
          F.line = 60;
          i_1275068498[i_1275068498_Idx] = addInt(i_1275068498[i_1275068498_Idx], 1);
        }
    };
    F.line = 61;
    result_1275068499 = nimCopy(null, HEX5BHEX5D_939525375(s_1275068497, HEX2EHEX2E_1023410224(j_1275068511, subInt(i_1275068498[i_1275068498_Idx], 1))), NTI33554449);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1275068499;

}

function skipValue_1275068948(s_1275068949, i_1275068950, i_1275068950_Idx) {
  var F = {procname: "jsony.skipValue", prev: framePtr, filename: "/home/runner/.nimble/pkgs2/jsony-1.1.3-3a1d109f9ac95c708549b976ceab7ace5b7ef558/jsony.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 284;
      F.filename = "jsony.nim";
        Label2: while (true) {
        if (!(i_1275068950[i_1275068950_Idx] < (s_1275068949).length)) break Label2;
          F.line = 33;
          var cHEX60gensym64_1275068952 = s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym64_1275068952] != undefined))) {
          F.line = 35;
          break Label1;
          }
          
          F.line = 36;
          i_1275068950[i_1275068950_Idx] = addInt(i_1275068950[i_1275068950_Idx], 1);
        }
    };
    if (((i_1275068950[i_1275068950_Idx] < (s_1275068949).length) && (s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)] == 123))) {
    Label3: {
      F.line = 41;
        Label4: while (true) {
        if (!(i_1275068950[i_1275068950_Idx] < (s_1275068949).length)) break Label4;
          F.line = 33;
          var cHEX60gensym68_1275068963 = s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym68_1275068963] != undefined))) {
          F.line = 35;
          break Label3;
          }
          
          F.line = 36;
          i_1275068950[i_1275068950_Idx] = addInt(i_1275068950[i_1275068950_Idx], 1);
        }
    };
    if (((s_1275068949).length <= i_1275068950[i_1275068950_Idx])) {
    F.line = 43;
    raiseException({message: ([69,120,112,101,99,116,101,100,32,123,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1275068950[i_1275068950_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    if ((s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)] == 123)) {
    F.line = 45;
    i_1275068950[i_1275068950_Idx] = addInt(i_1275068950[i_1275068950_Idx], 1);
    }
    else {
      F.line = 47;
      raiseException({message: ([69,120,112,101,99,116,101,100,32,123,32,98,117,116,32,103,111,116,32] || []).concat([s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1275068950[i_1275068950_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    Label5: {
      F.line = 287;
        Label6: while (true) {
        if (!(i_1275068950[i_1275068950_Idx] < (s_1275068949).length)) break Label6;
          Label7: {
            F.line = 288;
              Label8: while (true) {
              if (!(i_1275068950[i_1275068950_Idx] < (s_1275068949).length)) break Label8;
                F.line = 33;
                var cHEX60gensym78_1275068981 = s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)];
                if (!((whiteSpace_1275068427[cHEX60gensym78_1275068981] != undefined))) {
                F.line = 35;
                break Label7;
                }
                
                F.line = 36;
                i_1275068950[i_1275068950_Idx] = addInt(i_1275068950[i_1275068950_Idx], 1);
              }
          };
          if (((i_1275068950[i_1275068950_Idx] < (s_1275068949).length) && (s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)] == 125))) {
          F.line = 290;
          break Label5;
          }
          
          F.line = 291;
          skipValue_1275068948(s_1275068949, i_1275068950, i_1275068950_Idx);
          Label9: {
            F.line = 41;
              Label10: while (true) {
              if (!(i_1275068950[i_1275068950_Idx] < (s_1275068949).length)) break Label10;
                F.line = 33;
                var cHEX60gensym82_1275068992 = s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)];
                if (!((whiteSpace_1275068427[cHEX60gensym82_1275068992] != undefined))) {
                F.line = 35;
                break Label9;
                }
                
                F.line = 36;
                i_1275068950[i_1275068950_Idx] = addInt(i_1275068950[i_1275068950_Idx], 1);
              }
          };
          if (((s_1275068949).length <= i_1275068950[i_1275068950_Idx])) {
          F.line = 43;
          raiseException({message: ([69,120,112,101,99,116,101,100,32,58,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1275068950[i_1275068950_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
          }
          
          if ((s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)] == 58)) {
          F.line = 45;
          i_1275068950[i_1275068950_Idx] = addInt(i_1275068950[i_1275068950_Idx], 1);
          }
          else {
            F.line = 47;
            raiseException({message: ([69,120,112,101,99,116,101,100,32,58,32,98,117,116,32,103,111,116,32] || []).concat([s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1275068950[i_1275068950_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
          }
          
          F.line = 293;
          skipValue_1275068948(s_1275068949, i_1275068950, i_1275068950_Idx);
          Label11: {
            F.line = 294;
              Label12: while (true) {
              if (!(i_1275068950[i_1275068950_Idx] < (s_1275068949).length)) break Label12;
                F.line = 33;
                var cHEX60gensym92_1275069010 = s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)];
                if (!((whiteSpace_1275068427[cHEX60gensym92_1275069010] != undefined))) {
                F.line = 35;
                break Label11;
                }
                
                F.line = 36;
                i_1275068950[i_1275068950_Idx] = addInt(i_1275068950[i_1275068950_Idx], 1);
              }
          };
          if (((i_1275068950[i_1275068950_Idx] < (s_1275068949).length) && (s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)] == 44))) {
          F.line = 296;
          i_1275068950[i_1275068950_Idx] = addInt(i_1275068950[i_1275068950_Idx], 1);
          }
          
        }
    };
    Label13: {
      F.line = 41;
        Label14: while (true) {
        if (!(i_1275068950[i_1275068950_Idx] < (s_1275068949).length)) break Label14;
          F.line = 33;
          var cHEX60gensym96_1275069026 = s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym96_1275069026] != undefined))) {
          F.line = 35;
          break Label13;
          }
          
          F.line = 36;
          i_1275068950[i_1275068950_Idx] = addInt(i_1275068950[i_1275068950_Idx], 1);
        }
    };
    if (((s_1275068949).length <= i_1275068950[i_1275068950_Idx])) {
    F.line = 43;
    raiseException({message: ([69,120,112,101,99,116,101,100,32,125,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1275068950[i_1275068950_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    if ((s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)] == 125)) {
    F.line = 45;
    i_1275068950[i_1275068950_Idx] = addInt(i_1275068950[i_1275068950_Idx], 1);
    }
    else {
      F.line = 47;
      raiseException({message: ([69,120,112,101,99,116,101,100,32,125,32,98,117,116,32,103,111,116,32] || []).concat([s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1275068950[i_1275068950_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    }
    else {
    if (((i_1275068950[i_1275068950_Idx] < (s_1275068949).length) && (s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)] == 91))) {
    Label15: {
      F.line = 41;
        Label16: while (true) {
        if (!(i_1275068950[i_1275068950_Idx] < (s_1275068949).length)) break Label16;
          F.line = 33;
          var cHEX60gensym107_1275069044 = s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym107_1275069044] != undefined))) {
          F.line = 35;
          break Label15;
          }
          
          F.line = 36;
          i_1275068950[i_1275068950_Idx] = addInt(i_1275068950[i_1275068950_Idx], 1);
        }
    };
    if (((s_1275068949).length <= i_1275068950[i_1275068950_Idx])) {
    F.line = 43;
    raiseException({message: ([69,120,112,101,99,116,101,100,32,91,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1275068950[i_1275068950_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    if ((s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)] == 91)) {
    F.line = 45;
    i_1275068950[i_1275068950_Idx] = addInt(i_1275068950[i_1275068950_Idx], 1);
    }
    else {
      F.line = 47;
      raiseException({message: ([69,120,112,101,99,116,101,100,32,91,32,98,117,116,32,103,111,116,32] || []).concat([s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1275068950[i_1275068950_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    Label17: {
      F.line = 300;
        Label18: while (true) {
        if (!(i_1275068950[i_1275068950_Idx] < (s_1275068949).length)) break Label18;
          Label19: {
            F.line = 301;
              Label20: while (true) {
              if (!(i_1275068950[i_1275068950_Idx] < (s_1275068949).length)) break Label20;
                F.line = 33;
                var cHEX60gensym117_1275069062 = s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)];
                if (!((whiteSpace_1275068427[cHEX60gensym117_1275069062] != undefined))) {
                F.line = 35;
                break Label19;
                }
                
                F.line = 36;
                i_1275068950[i_1275068950_Idx] = addInt(i_1275068950[i_1275068950_Idx], 1);
              }
          };
          if (((i_1275068950[i_1275068950_Idx] < (s_1275068949).length) && (s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)] == 93))) {
          F.line = 303;
          break Label17;
          }
          
          F.line = 304;
          skipValue_1275068948(s_1275068949, i_1275068950, i_1275068950_Idx);
          Label21: {
            F.line = 305;
              Label22: while (true) {
              if (!(i_1275068950[i_1275068950_Idx] < (s_1275068949).length)) break Label22;
                F.line = 33;
                var cHEX60gensym120_1275069073 = s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)];
                if (!((whiteSpace_1275068427[cHEX60gensym120_1275069073] != undefined))) {
                F.line = 35;
                break Label21;
                }
                
                F.line = 36;
                i_1275068950[i_1275068950_Idx] = addInt(i_1275068950[i_1275068950_Idx], 1);
              }
          };
          if (((i_1275068950[i_1275068950_Idx] < (s_1275068949).length) && (s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)] == 44))) {
          F.line = 307;
          i_1275068950[i_1275068950_Idx] = addInt(i_1275068950[i_1275068950_Idx], 1);
          }
          
        }
    };
    Label23: {
      F.line = 41;
        Label24: while (true) {
        if (!(i_1275068950[i_1275068950_Idx] < (s_1275068949).length)) break Label24;
          F.line = 33;
          var cHEX60gensym124_1275069089 = s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym124_1275069089] != undefined))) {
          F.line = 35;
          break Label23;
          }
          
          F.line = 36;
          i_1275068950[i_1275068950_Idx] = addInt(i_1275068950[i_1275068950_Idx], 1);
        }
    };
    if (((s_1275068949).length <= i_1275068950[i_1275068950_Idx])) {
    F.line = 43;
    raiseException({message: ([69,120,112,101,99,116,101,100,32,93,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1275068950[i_1275068950_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    if ((s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)] == 93)) {
    F.line = 45;
    i_1275068950[i_1275068950_Idx] = addInt(i_1275068950[i_1275068950_Idx], 1);
    }
    else {
      F.line = 47;
      raiseException({message: ([69,120,112,101,99,116,101,100,32,93,32,98,117,116,32,103,111,116,32] || []).concat([s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1275068950[i_1275068950_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    }
    else {
    if (((i_1275068950[i_1275068950_Idx] < (s_1275068949).length) && (s_1275068949[chckIndx(i_1275068950[i_1275068950_Idx], 0, (s_1275068949).length - 1)] == 34))) {
    F.line = 310;
    var str_1275069106 = [[]];
    F.line = 311;
    parseHook_1275068888(s_1275068949, i_1275068950, i_1275068950_Idx, str_1275069106, 0);
    }
    else {
      F.line = 313;
    var _ = parseSymbol_1275068496(s_1275068949, i_1275068950, i_1275068950_Idx);
    }
    }}
  framePtr = F.prev;

  
}

function parseObjectInner_1258292273(s_1258292275, i_1258292276, i_1258292276_Idx, v_1258292277, v_1258292277_Idx) {
                    var Temporary10;

  var F = {procname: "parseObjectInner.parseObjectInner", prev: framePtr, filename: "/home/runner/.nimble/pkgs2/jsony-1.1.3-3a1d109f9ac95c708549b976ceab7ace5b7ef558/jsony.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 334;
      F.filename = "jsony.nim";
        Label2: while (true) {
        if (!(i_1258292276[i_1258292276_Idx] < (s_1258292275).length)) break Label2;
          Label3: {
            F.line = 335;
              Label4: while (true) {
              if (!(i_1258292276[i_1258292276_Idx] < (s_1258292275).length)) break Label4;
                F.line = 33;
                var cHEX60gensym161_1258292279 = s_1258292275[chckIndx(i_1258292276[i_1258292276_Idx], 0, (s_1258292275).length - 1)];
                if (!((whiteSpace_1275068427[cHEX60gensym161_1258292279] != undefined))) {
                F.line = 35;
                break Label3;
                }
                
                F.line = 36;
                i_1258292276[i_1258292276_Idx] = addInt(i_1258292276[i_1258292276_Idx], 1);
              }
          };
          if (((i_1258292276[i_1258292276_Idx] < (s_1258292275).length) && (s_1258292275[chckIndx(i_1258292276[i_1258292276_Idx], 0, (s_1258292275).length - 1)] == 125))) {
          F.line = 337;
          break Label1;
          }
          
          F.line = 338;
          var key_1258292289 = [[]];
          F.line = 339;
          parseHook_1275068888(s_1258292275, i_1258292276, i_1258292276_Idx, key_1258292289, 0);
          Label5: {
            F.line = 41;
              Label6: while (true) {
              if (!(i_1258292276[i_1258292276_Idx] < (s_1258292275).length)) break Label6;
                F.line = 33;
                var cHEX60gensym166_1258292291 = s_1258292275[chckIndx(i_1258292276[i_1258292276_Idx], 0, (s_1258292275).length - 1)];
                if (!((whiteSpace_1275068427[cHEX60gensym166_1258292291] != undefined))) {
                F.line = 35;
                break Label5;
                }
                
                F.line = 36;
                i_1258292276[i_1258292276_Idx] = addInt(i_1258292276[i_1258292276_Idx], 1);
              }
          };
          if (((s_1258292275).length <= i_1258292276[i_1258292276_Idx])) {
          F.line = 43;
          raiseException({message: ([69,120,112,101,99,116,101,100,32,58,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1258292276[i_1258292276_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
          }
          
          if ((s_1258292275[chckIndx(i_1258292276[i_1258292276_Idx], 0, (s_1258292275).length - 1)] == 58)) {
          F.line = 45;
          i_1258292276[i_1258292276_Idx] = addInt(i_1258292276[i_1258292276_Idx], 1);
          }
          else {
            F.line = 47;
            raiseException({message: ([69,120,112,101,99,116,101,100,32,58,32,98,117,116,32,103,111,116,32] || []).concat([s_1258292275[chckIndx(i_1258292276[i_1258292276_Idx], 0, (s_1258292275).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1258292276[i_1258292276_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
          }
          
          Label7: {
            Label8: {
              F.line = 344;
                Label9: while (true) {
                if (!true) break Label9;
                    if (eqStrings([116,121,112,101], key_1258292289[0])) Temporary10 = true; else {                      Temporary10 = eqStrings([116,121,112,101], key_1258292289[0]);                    }                  if (Temporary10) {
                  F.line = 346;
                  var v2_1258292317 = [[]];
                  F.line = 347;
                  parseHook_1275068888(s_1258292275, i_1258292276, i_1258292276_Idx, v2_1258292317, 0);
                  F.line = 348;
                  v_1258292277[v_1258292277_Idx].type = nimCopy(null, v2_1258292317[0], NTI33554449);
                  F.line = 349;
                  break Label7;
                  }
                  
                  F.line = 344;
                  break Label8;
                }
            };
            F.line = 350;
            skipValue_1275068948(s_1258292275, i_1258292276, i_1258292276_Idx);
          };
          Label11: {
            F.line = 351;
              Label12: while (true) {
              if (!(i_1258292276[i_1258292276_Idx] < (s_1258292275).length)) break Label12;
                F.line = 33;
                var cHEX60gensym178_1258292319 = s_1258292275[chckIndx(i_1258292276[i_1258292276_Idx], 0, (s_1258292275).length - 1)];
                if (!((whiteSpace_1275068427[cHEX60gensym178_1258292319] != undefined))) {
                F.line = 35;
                break Label11;
                }
                
                F.line = 36;
                i_1258292276[i_1258292276_Idx] = addInt(i_1258292276[i_1258292276_Idx], 1);
              }
          };
          if (((i_1258292276[i_1258292276_Idx] < (s_1258292275).length) && (s_1258292275[chckIndx(i_1258292276[i_1258292276_Idx], 0, (s_1258292275).length - 1)] == 44))) {
          F.line = 353;
          i_1258292276[i_1258292276_Idx] = addInt(i_1258292276[i_1258292276_Idx], 1);
          }
          else {
            F.line = 355;
            break Label1;
          }
          
        }
    };
  framePtr = F.prev;

  
}

function parseHook_1258292195(s_1258292197, i_1258292198, i_1258292198_Idx, v_1258292199, v_1258292199_Idx) {
  var F = {procname: "parseHook.parseHook", prev: framePtr, filename: "/home/runner/.nimble/pkgs2/jsony-1.1.3-3a1d109f9ac95c708549b976ceab7ace5b7ef558/jsony.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    Label1: {
      F.line = 397;
      F.filename = "jsony.nim";
        Label2: while (true) {
        if (!(i_1258292198[i_1258292198_Idx] < (s_1258292197).length)) break Label2;
          F.line = 33;
          var cHEX60gensym143_1258292201 = s_1258292197[chckIndx(i_1258292198[i_1258292198_Idx], 0, (s_1258292197).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym143_1258292201] != undefined))) {
          F.line = 35;
          break Label1;
          }
          
          F.line = 36;
          i_1258292198[i_1258292198_Idx] = addInt(i_1258292198[i_1258292198_Idx], 1);
        }
    };
    if ((((((addInt(i_1258292198[i_1258292198_Idx], 3) < (s_1258292197).length) && (s_1258292197[chckIndx(addInt(i_1258292198[i_1258292198_Idx], 0), 0, (s_1258292197).length - 1)] == 110)) && (s_1258292197[chckIndx(addInt(i_1258292198[i_1258292198_Idx], 1), 0, (s_1258292197).length - 1)] == 117)) && (s_1258292197[chckIndx(addInt(i_1258292198[i_1258292198_Idx], 2), 0, (s_1258292197).length - 1)] == 108)) && (s_1258292197[chckIndx(addInt(i_1258292198[i_1258292198_Idx], 3), 0, (s_1258292197).length - 1)] == 108))) {
    F.line = 399;
    i_1258292198[i_1258292198_Idx] = addInt(i_1258292198[i_1258292198_Idx], 4);
    F.line = 400;
    break BeforeRet;
    }
    
    Label3: {
      F.line = 41;
        Label4: while (true) {
        if (!(i_1258292198[i_1258292198_Idx] < (s_1258292197).length)) break Label4;
          F.line = 33;
          var cHEX60gensym151_1258292216 = s_1258292197[chckIndx(i_1258292198[i_1258292198_Idx], 0, (s_1258292197).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym151_1258292216] != undefined))) {
          F.line = 35;
          break Label3;
          }
          
          F.line = 36;
          i_1258292198[i_1258292198_Idx] = addInt(i_1258292198[i_1258292198_Idx], 1);
        }
    };
    if (((s_1258292197).length <= i_1258292198[i_1258292198_Idx])) {
    F.line = 43;
    raiseException({message: ([69,120,112,101,99,116,101,100,32,123,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1258292198[i_1258292198_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    if ((s_1258292197[chckIndx(i_1258292198[i_1258292198_Idx], 0, (s_1258292197).length - 1)] == 123)) {
    F.line = 45;
    i_1258292198[i_1258292198_Idx] = addInt(i_1258292198[i_1258292198_Idx], 1);
    }
    else {
      F.line = 47;
      raiseException({message: ([69,120,112,101,99,116,101,100,32,123,32,98,117,116,32,103,111,116,32] || []).concat([s_1258292197[chckIndx(i_1258292198[i_1258292198_Idx], 0, (s_1258292197).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1258292198[i_1258292198_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    F.line = 406;
    v_1258292199[v_1258292199_Idx] = ({type: []});
    F.line = 429;
    parseObjectInner_1258292273(s_1258292197, i_1258292198, i_1258292198_Idx, v_1258292199, v_1258292199_Idx);
    Label5: {
      F.line = 41;
        Label6: while (true) {
        if (!(i_1258292198[i_1258292198_Idx] < (s_1258292197).length)) break Label6;
          F.line = 33;
          var cHEX60gensym183_1258292337 = s_1258292197[chckIndx(i_1258292198[i_1258292198_Idx], 0, (s_1258292197).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym183_1258292337] != undefined))) {
          F.line = 35;
          break Label5;
          }
          
          F.line = 36;
          i_1258292198[i_1258292198_Idx] = addInt(i_1258292198[i_1258292198_Idx], 1);
        }
    };
    if (((s_1258292197).length <= i_1258292198[i_1258292198_Idx])) {
    F.line = 43;
    raiseException({message: ([69,120,112,101,99,116,101,100,32,125,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1258292198[i_1258292198_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    if ((s_1258292197[chckIndx(i_1258292198[i_1258292198_Idx], 0, (s_1258292197).length - 1)] == 125)) {
    F.line = 45;
    i_1258292198[i_1258292198_Idx] = addInt(i_1258292198[i_1258292198_Idx], 1);
    }
    else {
      F.line = 47;
      raiseException({message: ([69,120,112,101,99,116,101,100,32,125,32,98,117,116,32,103,111,116,32] || []).concat([s_1258292197[chckIndx(i_1258292198[i_1258292198_Idx], 0, (s_1258292197).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1258292198[i_1258292198_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
  };
  framePtr = F.prev;

  
}

function parseObjectInner_1258292144(s_1258292146, i_1258292147, i_1258292147_Idx, v_1258292148, v_1258292148_Idx) {
                    var Temporary10;
                    var Temporary11;
                    var Temporary12;
                    var Temporary13;
                    var Temporary14;
                    var Temporary15;

  var F = {procname: "parseObjectInner.parseObjectInner", prev: framePtr, filename: "/home/runner/.nimble/pkgs2/jsony-1.1.3-3a1d109f9ac95c708549b976ceab7ace5b7ef558/jsony.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 334;
      F.filename = "jsony.nim";
        Label2: while (true) {
        if (!(i_1258292147[i_1258292147_Idx] < (s_1258292146).length)) break Label2;
          Label3: {
            F.line = 335;
              Label4: while (true) {
              if (!(i_1258292147[i_1258292147_Idx] < (s_1258292146).length)) break Label4;
                F.line = 33;
                var cHEX60gensym124_1258292150 = s_1258292146[chckIndx(i_1258292147[i_1258292147_Idx], 0, (s_1258292146).length - 1)];
                if (!((whiteSpace_1275068427[cHEX60gensym124_1258292150] != undefined))) {
                F.line = 35;
                break Label3;
                }
                
                F.line = 36;
                i_1258292147[i_1258292147_Idx] = addInt(i_1258292147[i_1258292147_Idx], 1);
              }
          };
          if (((i_1258292147[i_1258292147_Idx] < (s_1258292146).length) && (s_1258292146[chckIndx(i_1258292147[i_1258292147_Idx], 0, (s_1258292146).length - 1)] == 125))) {
          F.line = 337;
          break Label1;
          }
          
          F.line = 338;
          var key_1258292160 = [[]];
          F.line = 339;
          parseHook_1275068888(s_1258292146, i_1258292147, i_1258292147_Idx, key_1258292160, 0);
          Label5: {
            F.line = 41;
              Label6: while (true) {
              if (!(i_1258292147[i_1258292147_Idx] < (s_1258292146).length)) break Label6;
                F.line = 33;
                var cHEX60gensym129_1258292162 = s_1258292146[chckIndx(i_1258292147[i_1258292147_Idx], 0, (s_1258292146).length - 1)];
                if (!((whiteSpace_1275068427[cHEX60gensym129_1258292162] != undefined))) {
                F.line = 35;
                break Label5;
                }
                
                F.line = 36;
                i_1258292147[i_1258292147_Idx] = addInt(i_1258292147[i_1258292147_Idx], 1);
              }
          };
          if (((s_1258292146).length <= i_1258292147[i_1258292147_Idx])) {
          F.line = 43;
          raiseException({message: ([69,120,112,101,99,116,101,100,32,58,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1258292147[i_1258292147_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
          }
          
          if ((s_1258292146[chckIndx(i_1258292147[i_1258292147_Idx], 0, (s_1258292146).length - 1)] == 58)) {
          F.line = 45;
          i_1258292147[i_1258292147_Idx] = addInt(i_1258292147[i_1258292147_Idx], 1);
          }
          else {
            F.line = 47;
            raiseException({message: ([69,120,112,101,99,116,101,100,32,58,32,98,117,116,32,103,111,116,32] || []).concat([s_1258292146[chckIndx(i_1258292147[i_1258292147_Idx], 0, (s_1258292146).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1258292147[i_1258292147_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
          }
          
          Label7: {
            Label8: {
              F.line = 344;
                Label9: while (true) {
                if (!true) break Label9;
                    if (eqStrings([100,101,115,99,114,105,112,116,105,111,110], key_1258292160[0])) Temporary10 = true; else {                      Temporary10 = eqStrings([100,101,115,99,114,105,112,116,105,111,110], key_1258292160[0]);                    }                  if (Temporary10) {
                  F.line = 346;
                  var v2_1258292188 = [[]];
                  F.line = 347;
                  parseHook_1275068888(s_1258292146, i_1258292147, i_1258292147_Idx, v2_1258292188, 0);
                  F.line = 348;
                  v_1258292148[v_1258292148_Idx].description = nimCopy(null, v2_1258292188[0], NTI33554449);
                  F.line = 349;
                  break Label7;
                  }
                  
                    if (eqStrings([116,121,112,101], key_1258292160[0])) Temporary11 = true; else {                      Temporary11 = eqStrings([116,121,112,101], key_1258292160[0]);                    }                  if (Temporary11) {
                  F.line = 346;
                  var v2_1258292191 = [[]];
                  F.line = 347;
                  parseHook_1275068888(s_1258292146, i_1258292147, i_1258292147_Idx, v2_1258292191, 0);
                  F.line = 348;
                  v_1258292148[v_1258292148_Idx].type = nimCopy(null, v2_1258292191[0], NTI33554449);
                  F.line = 349;
                  break Label7;
                  }
                  
                    if (eqStrings([105,116,101,109,115], key_1258292160[0])) Temporary12 = true; else {                      Temporary12 = eqStrings([105,116,101,109,115], key_1258292160[0]);                    }                  if (Temporary12) {
                  F.line = 346;
                  var v2_1258292194 = [null];
                  F.line = 347;
                  parseHook_1258292195(s_1258292146, i_1258292147, i_1258292147_Idx, v2_1258292194, 0);
                  F.line = 348;
                  v_1258292148[v_1258292148_Idx].items = v2_1258292194[0];
                  F.line = 349;
                  break Label7;
                  }
                  
                    if (eqStrings([114,101,113,117,105,114,101,100], key_1258292160[0])) Temporary13 = true; else {                      Temporary13 = eqStrings([114,101,113,117,105,114,101,100], key_1258292160[0]);                    }                  if (Temporary13) {
                  F.line = 346;
                  var v2_1258292356 = [[]];
                  F.line = 347;
                  parseHook_1258291930(s_1258292146, i_1258292147, i_1258292147_Idx, v2_1258292356, 0);
                  F.line = 348;
                  v_1258292148[v_1258292148_Idx].required = nimCopy(null, v2_1258292356[0], NTI1258291229);
                  F.line = 349;
                  break Label7;
                  }
                  
                    if (eqStrings([112,114,111,112,101,114,116,105,101,115], key_1258292160[0])) Temporary14 = true; else {                      Temporary14 = eqStrings([112,114,111,112,101,114,116,105,101,115], key_1258292160[0]);                    }                  if (Temporary14) {
                  F.line = 346;
                  var v2_1258292364 = [({data: [], counter: 0, first: 0, last: 0})];
                  F.line = 347;
                  parseHook_1258292043(s_1258292146, i_1258292147, i_1258292147_Idx, v2_1258292364[0]);
                  F.line = 348;
                  v_1258292148[v_1258292148_Idx].properties = nimCopy(v_1258292148[v_1258292148_Idx].properties, v2_1258292364[0], NTI1258291215);
                  F.line = 349;
                  break Label7;
                  }
                  
                    if (eqStrings([36,114,101,102], key_1258292160[0])) Temporary15 = true; else {                      Temporary15 = eqStrings([36,114,101,102], key_1258292160[0]);                    }                  if (Temporary15) {
                  F.line = 346;
                  var v2_1258292406 = [[]];
                  F.line = 347;
                  parseHook_1275068888(s_1258292146, i_1258292147, i_1258292147_Idx, v2_1258292406, 0);
                  F.line = 348;
                  v_1258292148[v_1258292148_Idx].$ref = nimCopy(null, v2_1258292406[0], NTI33554449);
                  F.line = 349;
                  break Label7;
                  }
                  
                  F.line = 344;
                  break Label8;
                }
            };
            F.line = 350;
            skipValue_1275068948(s_1258292146, i_1258292147, i_1258292147_Idx);
          };
          Label16: {
            F.line = 351;
              Label17: while (true) {
              if (!(i_1258292147[i_1258292147_Idx] < (s_1258292146).length)) break Label17;
                F.line = 33;
                var cHEX60gensym196_1258292408 = s_1258292146[chckIndx(i_1258292147[i_1258292147_Idx], 0, (s_1258292146).length - 1)];
                if (!((whiteSpace_1275068427[cHEX60gensym196_1258292408] != undefined))) {
                F.line = 35;
                break Label16;
                }
                
                F.line = 36;
                i_1258292147[i_1258292147_Idx] = addInt(i_1258292147[i_1258292147_Idx], 1);
              }
          };
          if (((i_1258292147[i_1258292147_Idx] < (s_1258292146).length) && (s_1258292146[chckIndx(i_1258292147[i_1258292147_Idx], 0, (s_1258292146).length - 1)] == 44))) {
          F.line = 353;
          i_1258292147[i_1258292147_Idx] = addInt(i_1258292147[i_1258292147_Idx], 1);
          }
          else {
            F.line = 355;
            break Label1;
          }
          
        }
    };
  framePtr = F.prev;

  
}

function parseHook_1258292097(s_1258292099, i_1258292100, i_1258292100_Idx, v_1258292101, v_1258292101_Idx) {
  var F = {procname: "parseHook.parseHook", prev: framePtr, filename: "/home/runner/.nimble/pkgs2/jsony-1.1.3-3a1d109f9ac95c708549b976ceab7ace5b7ef558/jsony.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    Label1: {
      F.line = 397;
      F.filename = "jsony.nim";
        Label2: while (true) {
        if (!(i_1258292100[i_1258292100_Idx] < (s_1258292099).length)) break Label2;
          F.line = 33;
          var cHEX60gensym106_1258292103 = s_1258292099[chckIndx(i_1258292100[i_1258292100_Idx], 0, (s_1258292099).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym106_1258292103] != undefined))) {
          F.line = 35;
          break Label1;
          }
          
          F.line = 36;
          i_1258292100[i_1258292100_Idx] = addInt(i_1258292100[i_1258292100_Idx], 1);
        }
    };
    if ((((((addInt(i_1258292100[i_1258292100_Idx], 3) < (s_1258292099).length) && (s_1258292099[chckIndx(addInt(i_1258292100[i_1258292100_Idx], 0), 0, (s_1258292099).length - 1)] == 110)) && (s_1258292099[chckIndx(addInt(i_1258292100[i_1258292100_Idx], 1), 0, (s_1258292099).length - 1)] == 117)) && (s_1258292099[chckIndx(addInt(i_1258292100[i_1258292100_Idx], 2), 0, (s_1258292099).length - 1)] == 108)) && (s_1258292099[chckIndx(addInt(i_1258292100[i_1258292100_Idx], 3), 0, (s_1258292099).length - 1)] == 108))) {
    F.line = 399;
    i_1258292100[i_1258292100_Idx] = addInt(i_1258292100[i_1258292100_Idx], 4);
    F.line = 400;
    break BeforeRet;
    }
    
    Label3: {
      F.line = 41;
        Label4: while (true) {
        if (!(i_1258292100[i_1258292100_Idx] < (s_1258292099).length)) break Label4;
          F.line = 33;
          var cHEX60gensym114_1258292118 = s_1258292099[chckIndx(i_1258292100[i_1258292100_Idx], 0, (s_1258292099).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym114_1258292118] != undefined))) {
          F.line = 35;
          break Label3;
          }
          
          F.line = 36;
          i_1258292100[i_1258292100_Idx] = addInt(i_1258292100[i_1258292100_Idx], 1);
        }
    };
    if (((s_1258292099).length <= i_1258292100[i_1258292100_Idx])) {
    F.line = 43;
    raiseException({message: ([69,120,112,101,99,116,101,100,32,123,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1258292100[i_1258292100_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    if ((s_1258292099[chckIndx(i_1258292100[i_1258292100_Idx], 0, (s_1258292099).length - 1)] == 123)) {
    F.line = 45;
    i_1258292100[i_1258292100_Idx] = addInt(i_1258292100[i_1258292100_Idx], 1);
    }
    else {
      F.line = 47;
      raiseException({message: ([69,120,112,101,99,116,101,100,32,123,32,98,117,116,32,103,111,116,32] || []).concat([s_1258292099[chckIndx(i_1258292100[i_1258292100_Idx], 0, (s_1258292099).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1258292100[i_1258292100_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    F.line = 406;
    v_1258292101[v_1258292101_Idx] = ({description: [], type: [], items: null, required: [], properties: ({data: [], counter: 0, first: 0, last: 0}), $ref: []});
    F.line = 429;
    parseObjectInner_1258292144(s_1258292099, i_1258292100, i_1258292100_Idx, v_1258292101, v_1258292101_Idx);
    Label5: {
      F.line = 41;
        Label6: while (true) {
        if (!(i_1258292100[i_1258292100_Idx] < (s_1258292099).length)) break Label6;
          F.line = 33;
          var cHEX60gensym201_1258292426 = s_1258292099[chckIndx(i_1258292100[i_1258292100_Idx], 0, (s_1258292099).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym201_1258292426] != undefined))) {
          F.line = 35;
          break Label5;
          }
          
          F.line = 36;
          i_1258292100[i_1258292100_Idx] = addInt(i_1258292100[i_1258292100_Idx], 1);
        }
    };
    if (((s_1258292099).length <= i_1258292100[i_1258292100_Idx])) {
    F.line = 43;
    raiseException({message: ([69,120,112,101,99,116,101,100,32,125,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1258292100[i_1258292100_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    if ((s_1258292099[chckIndx(i_1258292100[i_1258292100_Idx], 0, (s_1258292099).length - 1)] == 125)) {
    F.line = 45;
    i_1258292100[i_1258292100_Idx] = addInt(i_1258292100[i_1258292100_Idx], 1);
    }
    else {
      F.line = 47;
      raiseException({message: ([69,120,112,101,99,116,101,100,32,125,32,98,117,116,32,103,111,116,32] || []).concat([s_1258292099[chckIndx(i_1258292100[i_1258292100_Idx], 0, (s_1258292099).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1258292100[i_1258292100_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
  };
  framePtr = F.prev;

  
}

function nextPowerOfTwo_771752135(x_771752136) {
  var result_771752137 = 0;

    result_771752137 = (x_771752136 - 1);
    result_771752137 = (result_771752137 | (result_771752137 >> 16));
    result_771752137 = (result_771752137 | (result_771752137 >> 8));
    result_771752137 = (result_771752137 | (result_771752137 >> 4));
    result_771752137 = (result_771752137 | (result_771752137 >> 2));
    result_771752137 = (result_771752137 | (result_771752137 >> 1));
    result_771752137 += (1 + ((x_771752136 <= 0) ? 1 : 0));

  return result_771752137;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function slotsNeeded_754974762(count_754974763) {
  var result_754974764 = 0;

  var F = {procname: "tables.slotsNeeded", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 39;
    F.filename = "hashcommon.nim";
    result_754974764 = nextPowerOfTwo_771752135(addInt(divInt(mulInt(count_754974763, 3), 2), 4));
  framePtr = F.prev;

  return result_754974764;

}

function imul_704643432(a_704643433, b_704643434) {
  var result_704643435 = 0;

  var F = {procname: "hashes.imul", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 293;
    F.filename = "hashes.nim";
    var mask_704643436 = 65535;
    F.line = 295;
    var aHi_704643441 = (((a_704643433 >>> 16) & mask_704643436) >>> 0);
    F.line = 296;
    var aLo_704643442 = ((a_704643433 & mask_704643436) >>> 0);
    F.line = 297;
    var bHi_704643447 = (((b_704643434 >>> 16) & mask_704643436) >>> 0);
    F.line = 298;
    var bLo_704643448 = ((b_704643434 & mask_704643436) >>> 0);
    F.line = 299;
    result_704643435 = ((((aLo_704643442 * bLo_704643448) >>> 0) + ((((((aHi_704643441 * bLo_704643448) >>> 0) + ((aLo_704643442 * bHi_704643447) >>> 0)) >>> 0) << 16) >>> 0)) >>> 0);
  framePtr = F.prev;

  return result_704643435;

}

function rotl32_704643453(x_704643454, r_704643455) {
  var result_704643456 = 0;

  var F = {procname: "hashes.rotl32", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 304;
    F.filename = "hashes.nim";
    result_704643456 = ((((x_704643454 << r_704643455) >>> 0) | (x_704643454 >>> subInt(32, r_704643455))) >>> 0);
  framePtr = F.prev;

  return result_704643456;

}

function murmurHash_704643465(x_704643466) {
  var result_704643467 = 0;

  var F = {procname: "hashes.murmurHash", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/hashes.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 315;
    F.filename = "hashes.nim";
    var size_704643476 = (x_704643466).length;
    F.line = 316;
    var stepSize_704643477 = 4;
    F.line = 317;
    var n_704643478 = divInt(size_704643476, stepSize_704643477);
    F.line = 319;
    var h1_704643479 = 0;
    F.line = 320;
    var i_704643480 = 0;
    Label1: {
      F.line = 323;
        Label2: while (true) {
        if (!(i_704643480 < mulInt(n_704643478, stepSize_704643477))) break Label2;
          F.line = 324;
          var k1_704643481 = 0;
          F.line = 326;
          var j_704643482 = stepSize_704643477;
          Label3: {
            F.line = 327;
              Label4: while (true) {
              if (!(0 < j_704643482)) break Label4;
                F.line = 328;
                j_704643482 = subInt(j_704643482, 1);
                F.line = 329;
                k1_704643481 = ((((k1_704643481 << 8) >>> 0) | x_704643466[chckIndx(addInt(i_704643480, j_704643482), 0, (x_704643466).length - 1)]) >>> 0);
              }
          };
          F.line = 332;
          i_704643480 = addInt(i_704643480, stepSize_704643477);
          F.line = 334;
          k1_704643481 = imul_704643432(k1_704643481, 3432918353);
          F.line = 335;
          k1_704643481 = rotl32_704643453(k1_704643481, 15);
          F.line = 336;
          k1_704643481 = imul_704643432(k1_704643481, 461845907);
          F.line = 338;
          h1_704643479 = ((h1_704643479 ^ k1_704643481) >>> 0);
          F.line = 339;
          h1_704643479 = rotl32_704643453(h1_704643479, 13);
          F.line = 340;
          h1_704643479 = ((((h1_704643479 * 5) >>> 0) + 3864292196) >>> 0);
        }
    };
    F.line = 343;
    var k1_704643501 = 0;
    F.line = 344;
    var rem_704643502 = modInt(size_704643476, stepSize_704643477);
    Label5: {
      F.line = 345;
        Label6: while (true) {
        if (!(0 < rem_704643502)) break Label6;
          F.line = 346;
          rem_704643502 = subInt(rem_704643502, 1);
          F.line = 347;
          k1_704643501 = ((((k1_704643501 << 8) >>> 0) | x_704643466[chckIndx(addInt(i_704643480, rem_704643502), 0, (x_704643466).length - 1)]) >>> 0);
        }
    };
    F.line = 348;
    k1_704643501 = imul_704643432(k1_704643501, 3432918353);
    F.line = 349;
    k1_704643501 = rotl32_704643453(k1_704643501, 15);
    F.line = 350;
    k1_704643501 = imul_704643432(k1_704643501, 461845907);
    F.line = 351;
    h1_704643479 = ((h1_704643479 ^ k1_704643501) >>> 0);
    F.line = 354;
    h1_704643479 = ((h1_704643479 ^ size_704643476) >>> 0);
    F.line = 355;
    h1_704643479 = ((h1_704643479 ^ (h1_704643479 >>> 16)) >>> 0);
    F.line = 356;
    h1_704643479 = imul_704643432(h1_704643479, 2246822507);
    F.line = 357;
    h1_704643479 = ((h1_704643479 ^ (h1_704643479 >>> 13)) >>> 0);
    F.line = 358;
    h1_704643479 = imul_704643432(h1_704643479, 3266489909);
    F.line = 359;
    h1_704643479 = ((h1_704643479 ^ (h1_704643479 >>> 16)) >>> 0);
    F.line = 360;
    result_704643467 = Number(BigInt.asIntN(32, BigInt(h1_704643479)));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_704643467;

}

function hash_704643567(x_704643568) {
  var result_704643569 = 0;

  var F = {procname: "hashes.hash", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 386;
    F.filename = "hashes.nim";
    result_704643569 = murmurHash_704643465((x_704643568.slice(0, (x_704643568).length - 1 + 1)));
  framePtr = F.prev;

  return result_704643569;

}

function isFilled_754974751(hcode_754974752) {
  var result_754974753 = false;

  var F = {procname: "tables.isFilled", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 27;
    F.filename = "hashcommon.nim";
    result_754974753 = !((hcode_754974752 == 0));
  framePtr = F.prev;

  return result_754974753;

}

function nextTry_754974754(h_754974755, maxHash_754974756) {
  var result_754974757 = 0;

  var F = {procname: "tables.nextTry", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "hashcommon.nim";
    result_754974757 = (addInt(h_754974755, 1) & maxHash_754974756);
  framePtr = F.prev;

  return result_754974757;

}

function rawGet_1258292552(t_1258292555, key_1258292556, hc_1258292557, hc_1258292557_Idx) {
  var result_1258292558 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 59;
    F.filename = "hashcommon.nim";
    hc_1258292557[hc_1258292557_Idx] = hash_704643567(key_1258292556);
    if ((hc_1258292557[hc_1258292557_Idx] == 0)) {
    F.line = 61;
    hc_1258292557[hc_1258292557_Idx] = 314159265;
    }
    
    if (((t_1258292555.data).length == 0)) {
    F.line = 43;
    result_1258292558 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_1258292609 = (hc_1258292557[hc_1258292557_Idx] & (t_1258292555.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_754974751(t_1258292555.data[chckIndx(h_1258292609, 0, (t_1258292555.data).length - 1)].Field0)) break Label2;
          if (((t_1258292555.data[chckIndx(h_1258292609, 0, (t_1258292555.data).length - 1)].Field0 == hc_1258292557[hc_1258292557_Idx]) && eqStrings(t_1258292555.data[chckIndx(h_1258292609, 0, (t_1258292555.data).length - 1)].Field2, key_1258292556))) {
          F.line = 51;
          result_1258292558 = h_1258292609;
          break BeforeRet;
          }
          
          F.line = 52;
          h_1258292609 = nextTry_754974754(h_1258292609, (t_1258292555.data).length - 1);
        }
    };
    F.line = 53;
    result_1258292558 = subInt((-1), h_1258292609);
  };
  framePtr = F.prev;

  return result_1258292558;

}

function sysFatal_268435501(message_268435504) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert_268435499(msg_268435500) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "assertions.nim";
    sysFatal_268435501(msg_268435500);
  framePtr = F.prev;

  
}

function failedAssertImpl_268435541(msg_268435542) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "assertions.nim";
    raiseAssert_268435499(msg_268435542);
  framePtr = F.prev;

  
}

function mustRehash_1258292910(t_1258292912) {
  var result_1258292913 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_1258292912.counter < (t_1258292912.data).length))) {
    F.line = 34;
    F.filename = "hashcommon.nim";
    failedAssertImpl_268435541(makeNimstrLit("/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 35;
    result_1258292913 = ((mulInt((t_1258292912.data).length, 2) < mulInt(t_1258292912.counter, 3)) || (subInt((t_1258292912.data).length, t_1258292912.counter) < 4));
  framePtr = F.prev;

  return result_1258292913;

}

function rawInsert_1258293484(t_1258293487, data_1258293488, data_1258293488_Idx, key_1258293489, val_1258293490, hc_1258293491, h_1258293492) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "tableimpl.nim";
    data_1258293488[data_1258293488_Idx][chckIndx(h_1258293492, 0, (data_1258293488[data_1258293488_Idx]).length - 1)].Field2 = nimCopy(null, key_1258293489, NTI33554449);
    F.line = 26;
    data_1258293488[data_1258293488_Idx][chckIndx(h_1258293492, 0, (data_1258293488[data_1258293488_Idx]).length - 1)].Field3 = val_1258293490;
    F.line = 27;
    data_1258293488[data_1258293488_Idx][chckIndx(h_1258293492, 0, (data_1258293488[data_1258293488_Idx]).length - 1)].Field0 = hc_1258293491;
    F.line = 1279;
    F.filename = "tables.nim";
    data_1258293488[data_1258293488_Idx][chckIndx(h_1258293492, 0, (data_1258293488[data_1258293488_Idx]).length - 1)].Field1 = (-1);
    if ((t_1258293487.first < 0)) {
    F.line = 1280;
    t_1258293487.first = h_1258293492;
    }
    
    if ((0 <= t_1258293487.last)) {
    F.line = 1281;
    data_1258293488[data_1258293488_Idx][chckIndx(t_1258293487.last, 0, (data_1258293488[data_1258293488_Idx]).length - 1)].Field1 = h_1258293492;
    }
    
    F.line = 1282;
    t_1258293487.last = h_1258293492;
  framePtr = F.prev;

  
}

function enlarge_1258293073(t_1258293076) {
          var Temporary6;
          var Temporary7;

  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 1285;
    F.filename = "tables.nim";
    var n_1258293079 = [];
    F.line = 1286;
    n_1258293079 = new Array(chckRange(mulInt((t_1258293076.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1258293076.data).length, 2), 0, 2147483647) ; ++i) { n_1258293079[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    F.line = 1287;
    var h_1258293131 = t_1258293076.first;
    F.line = 1288;
    t_1258293076.first = (-1);
    F.line = 1289;
    t_1258293076.last = (-1);
    F.line = 1290;
    var Temporary1 = t_1258293076.data; t_1258293076.data = n_1258293079; n_1258293079 = Temporary1;    Label2: {
      F.line = 1291;
        Label3: while (true) {
        if (!(0 <= h_1258293131)) break Label3;
          F.line = 1292;
          var nxt_1258293189 = n_1258293079[chckIndx(h_1258293131, 0, (n_1258293079).length - 1)].Field1;
          F.line = 1293;
          var eh_1258293243 = n_1258293079[chckIndx(h_1258293131, 0, (n_1258293079).length - 1)].Field0;
          if (isFilled_754974751(eh_1258293243)) {
          F.line = 1295;
          var j_1258293247 = (eh_1258293243 & (t_1258293076.data).length - 1);
          Label4: {
            F.line = 1296;
              Label5: while (true) {
              if (!isFilled_754974751(t_1258293076.data[chckIndx(j_1258293247, 0, (t_1258293076.data).length - 1)].Field0)) break Label5;
                F.line = 1297;
                j_1258293247 = nextTry_754974754(j_1258293247, (t_1258293076.data).length - 1);
              }
          };
          F.line = 1298;
          Temporary6 = n_1258293079[chckIndx(h_1258293131, 0, (n_1258293079).length - 1)].Field2;
          n_1258293079[chckIndx(h_1258293131, 0, (n_1258293079).length - 1)].Field2 = genericReset(n_1258293079[chckIndx(h_1258293131, 0, (n_1258293079).length - 1)].Field2, NTI33554449);
          Temporary7 = n_1258293079[chckIndx(h_1258293131, 0, (n_1258293079).length - 1)].Field3;
          n_1258293079[chckIndx(h_1258293131, 0, (n_1258293079).length - 1)].Field3 = genericReset(n_1258293079[chckIndx(h_1258293131, 0, (n_1258293079).length - 1)].Field3, NTI1258291204);
          rawInsert_1258293484(t_1258293076, t_1258293076, "data", Temporary6, Temporary7, n_1258293079[chckIndx(h_1258293131, 0, (n_1258293079).length - 1)].Field0, j_1258293247);
          }
          
          F.line = 1299;
          h_1258293131 = nxt_1258293189;
        }
    };
  framePtr = F.prev;

  
}

function rawGetKnownHC_1258293766(t_1258293769, key_1258293770, hc_1258293771) {
  var result_1258293772 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((t_1258293769.data).length == 0)) {
    F.line = 43;
    F.filename = "hashcommon.nim";
    result_1258293772 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_1258293823 = (hc_1258293771 & (t_1258293769.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_754974751(t_1258293769.data[chckIndx(h_1258293823, 0, (t_1258293769.data).length - 1)].Field0)) break Label2;
          if (((t_1258293769.data[chckIndx(h_1258293823, 0, (t_1258293769.data).length - 1)].Field0 == hc_1258293771) && eqStrings(t_1258293769.data[chckIndx(h_1258293823, 0, (t_1258293769.data).length - 1)].Field2, key_1258293770))) {
          F.line = 51;
          result_1258293772 = h_1258293823;
          break BeforeRet;
          }
          
          F.line = 52;
          h_1258293823 = nextTry_754974754(h_1258293823, (t_1258293769.data).length - 1);
        }
    };
    F.line = 53;
    result_1258293772 = subInt((-1), h_1258293823);
  };
  framePtr = F.prev;

  return result_1258293772;

}

function HEX5BHEX5DHEX3D_1258292483(t_1258292486, key_1258292487, val_1258292488) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_1258292486.data).length == 0)) {
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym212_1258292538 = slotsNeeded_754974762(32);
    F.line = 169;
    t_1258292486.counter = 0;
    F.line = 170;
    t_1258292486.data = new Array(chckRange(correctSizeHEX60gensym212_1258292538, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym212_1258292538, 0, 2147483647) ; ++i) { t_1258292486.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    F.line = 172;
    t_1258292486.first = (-1);
    F.line = 173;
    t_1258292486.last = (-1);
    }
    
    F.line = 59;
    var hc_1258292543 = [0];
    F.line = 60;
    var index_1258292803 = rawGet_1258292552(t_1258292486, key_1258292487, hc_1258292543, 0);
    if ((0 <= index_1258292803)) {
    F.line = 61;
    t_1258292486.data[chckIndx(index_1258292803, 0, (t_1258292486.data).length - 1)].Field3 = val_1258292488;
    }
    else {
      if (((t_1258292486.data).length == 0)) {
      F.line = 165;
      var correctSizeHEX60gensym217_1258292905 = slotsNeeded_754974762(32);
      F.line = 169;
      t_1258292486.counter = 0;
      F.line = 170;
      t_1258292486.data = new Array(chckRange(correctSizeHEX60gensym217_1258292905, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym217_1258292905, 0, 2147483647) ; ++i) { t_1258292486.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }      F.line = 172;
      t_1258292486.first = (-1);
      F.line = 173;
      t_1258292486.last = (-1);
      }
      
      if (mustRehash_1258292910(t_1258292486)) {
      F.line = 51;
      enlarge_1258293073(t_1258292486);
      F.line = 52;
      index_1258292803 = rawGetKnownHC_1258293766(t_1258292486, key_1258292487, hc_1258292543[0]);
      }
      
      F.line = 53;
      index_1258292803 = subInt((-1), index_1258292803);
      F.line = 54;
      rawInsert_1258293484(t_1258292486, t_1258292486, "data", key_1258292487, val_1258292488, hc_1258292543[0], index_1258292803);
      F.line = 62;
      t_1258292486.counter = addInt(t_1258292486.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function parseHook_1258292043(s_1258292045, i_1258292046, i_1258292046_Idx, v_1258292047) {
  var F = {procname: "parseHook.parseHook", prev: framePtr, filename: "/home/runner/.nimble/pkgs2/jsony-1.1.3-3a1d109f9ac95c708549b976ceab7ace5b7ef558/jsony.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 41;
      F.filename = "jsony.nim";
        Label2: while (true) {
        if (!(i_1258292046[i_1258292046_Idx] < (s_1258292045).length)) break Label2;
          F.line = 33;
          var cHEX60gensym81_1258292049 = s_1258292045[chckIndx(i_1258292046[i_1258292046_Idx], 0, (s_1258292045).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym81_1258292049] != undefined))) {
          F.line = 35;
          break Label1;
          }
          
          F.line = 36;
          i_1258292046[i_1258292046_Idx] = addInt(i_1258292046[i_1258292046_Idx], 1);
        }
    };
    if (((s_1258292045).length <= i_1258292046[i_1258292046_Idx])) {
    F.line = 43;
    raiseException({message: ([69,120,112,101,99,116,101,100,32,123,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1258292046[i_1258292046_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    if ((s_1258292045[chckIndx(i_1258292046[i_1258292046_Idx], 0, (s_1258292045).length - 1)] == 123)) {
    F.line = 45;
    i_1258292046[i_1258292046_Idx] = addInt(i_1258292046[i_1258292046_Idx], 1);
    }
    else {
      F.line = 47;
      raiseException({message: ([69,120,112,101,99,116,101,100,32,123,32,98,117,116,32,103,111,116,32] || []).concat([s_1258292045[chckIndx(i_1258292046[i_1258292046_Idx], 0, (s_1258292045).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1258292046[i_1258292046_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    Label3: {
      F.line = 447;
        Label4: while (true) {
        if (!(i_1258292046[i_1258292046_Idx] < (s_1258292045).length)) break Label4;
          Label5: {
            F.line = 448;
              Label6: while (true) {
              if (!(i_1258292046[i_1258292046_Idx] < (s_1258292045).length)) break Label6;
                F.line = 33;
                var cHEX60gensym91_1258292067 = s_1258292045[chckIndx(i_1258292046[i_1258292046_Idx], 0, (s_1258292045).length - 1)];
                if (!((whiteSpace_1275068427[cHEX60gensym91_1258292067] != undefined))) {
                F.line = 35;
                break Label5;
                }
                
                F.line = 36;
                i_1258292046[i_1258292046_Idx] = addInt(i_1258292046[i_1258292046_Idx], 1);
              }
          };
          if (((i_1258292046[i_1258292046_Idx] < (s_1258292045).length) && (s_1258292045[chckIndx(i_1258292046[i_1258292046_Idx], 0, (s_1258292045).length - 1)] == 125))) {
          F.line = 450;
          break Label3;
          }
          
          F.line = 451;
          var key_1258292077 = [[]];
          F.line = 452;
          parseHook_1275068888(s_1258292045, i_1258292046, i_1258292046_Idx, key_1258292077, 0);
          Label7: {
            F.line = 41;
              Label8: while (true) {
              if (!(i_1258292046[i_1258292046_Idx] < (s_1258292045).length)) break Label8;
                F.line = 33;
                var cHEX60gensym96_1258292079 = s_1258292045[chckIndx(i_1258292046[i_1258292046_Idx], 0, (s_1258292045).length - 1)];
                if (!((whiteSpace_1275068427[cHEX60gensym96_1258292079] != undefined))) {
                F.line = 35;
                break Label7;
                }
                
                F.line = 36;
                i_1258292046[i_1258292046_Idx] = addInt(i_1258292046[i_1258292046_Idx], 1);
              }
          };
          if (((s_1258292045).length <= i_1258292046[i_1258292046_Idx])) {
          F.line = 43;
          raiseException({message: ([69,120,112,101,99,116,101,100,32,58,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1258292046[i_1258292046_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
          }
          
          if ((s_1258292045[chckIndx(i_1258292046[i_1258292046_Idx], 0, (s_1258292045).length - 1)] == 58)) {
          F.line = 45;
          i_1258292046[i_1258292046_Idx] = addInt(i_1258292046[i_1258292046_Idx], 1);
          }
          else {
            F.line = 47;
            raiseException({message: ([69,120,112,101,99,116,101,100,32,58,32,98,117,116,32,103,111,116,32] || []).concat([s_1258292045[chckIndx(i_1258292046[i_1258292046_Idx], 0, (s_1258292045).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1258292046[i_1258292046_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
          }
          
          F.line = 454;
          var element_1258292096 = [null];
          F.line = 455;
          parseHook_1258292097(s_1258292045, i_1258292046, i_1258292046_Idx, element_1258292096, 0);
          F.line = 456;
          HEX5BHEX5DHEX3D_1258292483(v_1258292047, key_1258292077[0], element_1258292096[0]);
          if (((i_1258292046[i_1258292046_Idx] < (s_1258292045).length) && (s_1258292045[chckIndx(i_1258292046[i_1258292046_Idx], 0, (s_1258292045).length - 1)] == 44))) {
          F.line = 458;
          i_1258292046[i_1258292046_Idx] = addInt(i_1258292046[i_1258292046_Idx], 1);
          }
          else {
            F.line = 460;
            break Label3;
          }
          
        }
    };
    Label9: {
      F.line = 41;
        Label10: while (true) {
        if (!(i_1258292046[i_1258292046_Idx] < (s_1258292045).length)) break Label10;
          F.line = 33;
          var cHEX60gensym227_1258294017 = s_1258292045[chckIndx(i_1258292046[i_1258292046_Idx], 0, (s_1258292045).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym227_1258294017] != undefined))) {
          F.line = 35;
          break Label9;
          }
          
          F.line = 36;
          i_1258292046[i_1258292046_Idx] = addInt(i_1258292046[i_1258292046_Idx], 1);
        }
    };
    if (((s_1258292045).length <= i_1258292046[i_1258292046_Idx])) {
    F.line = 43;
    raiseException({message: ([69,120,112,101,99,116,101,100,32,125,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1258292046[i_1258292046_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    if ((s_1258292045[chckIndx(i_1258292046[i_1258292046_Idx], 0, (s_1258292045).length - 1)] == 125)) {
    F.line = 45;
    i_1258292046[i_1258292046_Idx] = addInt(i_1258292046[i_1258292046_Idx], 1);
    }
    else {
      F.line = 47;
      raiseException({message: ([69,120,112,101,99,116,101,100,32,125,32,98,117,116,32,103,111,116,32] || []).concat([s_1258292045[chckIndx(i_1258292046[i_1258292046_Idx], 0, (s_1258292045).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1258292046[i_1258292046_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
  framePtr = F.prev;

  
}

function parseObjectInner_1258291872(s_1258291874, i_1258291875, i_1258291875_Idx, v_1258291876) {
                    var Temporary10;
                    var Temporary11;
                    var Temporary12;
                    var Temporary13;
                    var Temporary14;
                    var Temporary15;
                    var Temporary16;

  var F = {procname: "parseObjectInner.parseObjectInner", prev: framePtr, filename: "/home/runner/.nimble/pkgs2/jsony-1.1.3-3a1d109f9ac95c708549b976ceab7ace5b7ef558/jsony.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 334;
      F.filename = "jsony.nim";
        Label2: while (true) {
        if (!(i_1258291875[i_1258291875_Idx] < (s_1258291874).length)) break Label2;
          Label3: {
            F.line = 335;
              Label4: while (true) {
              if (!(i_1258291875[i_1258291875_Idx] < (s_1258291874).length)) break Label4;
                F.line = 33;
                var cHEX60gensym29_1258291878 = s_1258291874[chckIndx(i_1258291875[i_1258291875_Idx], 0, (s_1258291874).length - 1)];
                if (!((whiteSpace_1275068427[cHEX60gensym29_1258291878] != undefined))) {
                F.line = 35;
                break Label3;
                }
                
                F.line = 36;
                i_1258291875[i_1258291875_Idx] = addInt(i_1258291875[i_1258291875_Idx], 1);
              }
          };
          if (((i_1258291875[i_1258291875_Idx] < (s_1258291874).length) && (s_1258291874[chckIndx(i_1258291875[i_1258291875_Idx], 0, (s_1258291874).length - 1)] == 125))) {
          F.line = 337;
          break Label1;
          }
          
          F.line = 338;
          var key_1258291888 = [[]];
          F.line = 339;
          parseHook_1275068888(s_1258291874, i_1258291875, i_1258291875_Idx, key_1258291888, 0);
          Label5: {
            F.line = 41;
              Label6: while (true) {
              if (!(i_1258291875[i_1258291875_Idx] < (s_1258291874).length)) break Label6;
                F.line = 33;
                var cHEX60gensym34_1258291890 = s_1258291874[chckIndx(i_1258291875[i_1258291875_Idx], 0, (s_1258291874).length - 1)];
                if (!((whiteSpace_1275068427[cHEX60gensym34_1258291890] != undefined))) {
                F.line = 35;
                break Label5;
                }
                
                F.line = 36;
                i_1258291875[i_1258291875_Idx] = addInt(i_1258291875[i_1258291875_Idx], 1);
              }
          };
          if (((s_1258291874).length <= i_1258291875[i_1258291875_Idx])) {
          F.line = 43;
          raiseException({message: ([69,120,112,101,99,116,101,100,32,58,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1258291875[i_1258291875_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
          }
          
          if ((s_1258291874[chckIndx(i_1258291875[i_1258291875_Idx], 0, (s_1258291874).length - 1)] == 58)) {
          F.line = 45;
          i_1258291875[i_1258291875_Idx] = addInt(i_1258291875[i_1258291875_Idx], 1);
          }
          else {
            F.line = 47;
            raiseException({message: ([69,120,112,101,99,116,101,100,32,58,32,98,117,116,32,103,111,116,32] || []).concat([s_1258291874[chckIndx(i_1258291875[i_1258291875_Idx], 0, (s_1258291874).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1258291875[i_1258291875_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
          }
          
          Label7: {
            Label8: {
              F.line = 344;
                Label9: while (true) {
                if (!true) break Label9;
                    if (eqStrings([116,105,116,108,101], key_1258291888[0])) Temporary10 = true; else {                      Temporary10 = eqStrings([116,105,116,108,101], key_1258291888[0]);                    }                  if (Temporary10) {
                  F.line = 346;
                  var v2_1258291920 = [[]];
                  F.line = 347;
                  parseHook_1275068888(s_1258291874, i_1258291875, i_1258291875_Idx, v2_1258291920, 0);
                  F.line = 348;
                  v_1258291876.title = nimCopy(null, v2_1258291920[0], NTI33554449);
                  F.line = 349;
                  break Label7;
                  }
                  
                    if (eqStrings([100,101,115,99,114,105,112,116,105,111,110], key_1258291888[0])) Temporary11 = true; else {                      Temporary11 = eqStrings([100,101,115,99,114,105,112,116,105,111,110], key_1258291888[0]);                    }                  if (Temporary11) {
                  F.line = 346;
                  var v2_1258291923 = [[]];
                  F.line = 347;
                  parseHook_1275068888(s_1258291874, i_1258291875, i_1258291875_Idx, v2_1258291923, 0);
                  F.line = 348;
                  v_1258291876.description = nimCopy(null, v2_1258291923[0], NTI33554449);
                  F.line = 349;
                  break Label7;
                  }
                  
                    if (eqStrings([116,121,112,101], key_1258291888[0])) Temporary12 = true; else {                      Temporary12 = eqStrings([116,121,112,101], key_1258291888[0]);                    }                  if (Temporary12) {
                  F.line = 346;
                  var v2_1258291926 = [[]];
                  F.line = 347;
                  parseHook_1275068888(s_1258291874, i_1258291875, i_1258291875_Idx, v2_1258291926, 0);
                  F.line = 348;
                  v_1258291876.type = nimCopy(null, v2_1258291926[0], NTI33554449);
                  F.line = 349;
                  break Label7;
                  }
                  
                    if (eqStrings([114,101,113,117,105,114,101,100], key_1258291888[0])) Temporary13 = true; else {                      Temporary13 = eqStrings([114,101,113,117,105,114,101,100], key_1258291888[0]);                    }                  if (Temporary13) {
                  F.line = 346;
                  var v2_1258291929 = [[]];
                  F.line = 347;
                  parseHook_1258291930(s_1258291874, i_1258291875, i_1258291875_Idx, v2_1258291929, 0);
                  F.line = 348;
                  v_1258291876.required = nimCopy(null, v2_1258291929[0], NTI1258291207);
                  F.line = 349;
                  break Label7;
                  }
                  
                    if (eqStrings([97,100,100,105,116,105,111,110,97,108,80,114,111,112,101,114,116,105,101,115], key_1258291888[0])) Temporary14 = true; else {                      Temporary14 = eqStrings([97,100,100,105,116,105,111,110,97,108,95,112,114,111,112,101,114,116,105,101,115], key_1258291888[0]);                    }                  if (Temporary14) {
                  F.line = 346;
                  var v2_1258292005 = [false];
                  F.line = 347;
                  parseHook_1275068541(s_1258291874, i_1258291875, i_1258291875_Idx, v2_1258292005, 0);
                  F.line = 348;
                  v_1258291876.additionalProperties = v2_1258292005[0];
                  F.line = 349;
                  break Label7;
                  }
                  
                    if (eqStrings([112,114,111,112,101,114,116,105,101,115], key_1258291888[0])) Temporary15 = true; else {                      Temporary15 = eqStrings([112,114,111,112,101,114,116,105,101,115], key_1258291888[0]);                    }                  if (Temporary15) {
                  F.line = 346;
                  var v2_1258292008 = [({data: [], counter: 0, first: 0, last: 0})];
                  F.line = 347;
                  parseHook_1258292043(s_1258291874, i_1258291875, i_1258291875_Idx, v2_1258292008[0]);
                  F.line = 348;
                  v_1258291876.properties = nimCopy(v_1258291876.properties, v2_1258292008[0], NTI1258291215);
                  F.line = 349;
                  break Label7;
                  }
                  
                    if (eqStrings([36,100,101,102,115], key_1258291888[0])) Temporary16 = true; else {                      Temporary16 = eqStrings([36,100,101,102,115], key_1258291888[0]);                    }                  if (Temporary16) {
                  F.line = 346;
                  var v2_1258294036 = [({data: [], counter: 0, first: 0, last: 0})];
                  F.line = 347;
                  parseHook_1258292043(s_1258291874, i_1258291875, i_1258291875_Idx, v2_1258294036[0]);
                  F.line = 348;
                  v_1258291876.$defs = nimCopy(v_1258291876.$defs, v2_1258294036[0], NTI1258291215);
                  F.line = 349;
                  break Label7;
                  }
                  
                  F.line = 344;
                  break Label8;
                }
            };
            F.line = 350;
            skipValue_1275068948(s_1258291874, i_1258291875, i_1258291875_Idx);
          };
          Label17: {
            F.line = 351;
              Label18: while (true) {
              if (!(i_1258291875[i_1258291875_Idx] < (s_1258291874).length)) break Label18;
                F.line = 33;
                var cHEX60gensym238_1258294077 = s_1258291874[chckIndx(i_1258291875[i_1258291875_Idx], 0, (s_1258291874).length - 1)];
                if (!((whiteSpace_1275068427[cHEX60gensym238_1258294077] != undefined))) {
                F.line = 35;
                break Label17;
                }
                
                F.line = 36;
                i_1258291875[i_1258291875_Idx] = addInt(i_1258291875[i_1258291875_Idx], 1);
              }
          };
          if (((i_1258291875[i_1258291875_Idx] < (s_1258291874).length) && (s_1258291874[chckIndx(i_1258291875[i_1258291875_Idx], 0, (s_1258291874).length - 1)] == 44))) {
          F.line = 353;
          i_1258291875[i_1258291875_Idx] = addInt(i_1258291875[i_1258291875_Idx], 1);
          }
          else {
            F.line = 355;
            break Label1;
          }
          
        }
    };
  framePtr = F.prev;

  
}

function parseHook_1258291820(s_1258291822, i_1258291823, i_1258291823_Idx, v_1258291824) {
  var F = {procname: "parseHook.parseHook", prev: framePtr, filename: "/home/runner/.nimble/pkgs2/jsony-1.1.3-3a1d109f9ac95c708549b976ceab7ace5b7ef558/jsony.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    Label1: {
      F.line = 397;
      F.filename = "jsony.nim";
        Label2: while (true) {
        if (!(i_1258291823[i_1258291823_Idx] < (s_1258291822).length)) break Label2;
          F.line = 33;
          var cHEX60gensym11_1258291826 = s_1258291822[chckIndx(i_1258291823[i_1258291823_Idx], 0, (s_1258291822).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym11_1258291826] != undefined))) {
          F.line = 35;
          break Label1;
          }
          
          F.line = 36;
          i_1258291823[i_1258291823_Idx] = addInt(i_1258291823[i_1258291823_Idx], 1);
        }
    };
    if ((((((addInt(i_1258291823[i_1258291823_Idx], 3) < (s_1258291822).length) && (s_1258291822[chckIndx(addInt(i_1258291823[i_1258291823_Idx], 0), 0, (s_1258291822).length - 1)] == 110)) && (s_1258291822[chckIndx(addInt(i_1258291823[i_1258291823_Idx], 1), 0, (s_1258291822).length - 1)] == 117)) && (s_1258291822[chckIndx(addInt(i_1258291823[i_1258291823_Idx], 2), 0, (s_1258291822).length - 1)] == 108)) && (s_1258291822[chckIndx(addInt(i_1258291823[i_1258291823_Idx], 3), 0, (s_1258291822).length - 1)] == 108))) {
    F.line = 399;
    i_1258291823[i_1258291823_Idx] = addInt(i_1258291823[i_1258291823_Idx], 4);
    F.line = 400;
    break BeforeRet;
    }
    
    Label3: {
      F.line = 41;
        Label4: while (true) {
        if (!(i_1258291823[i_1258291823_Idx] < (s_1258291822).length)) break Label4;
          F.line = 33;
          var cHEX60gensym19_1258291841 = s_1258291822[chckIndx(i_1258291823[i_1258291823_Idx], 0, (s_1258291822).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym19_1258291841] != undefined))) {
          F.line = 35;
          break Label3;
          }
          
          F.line = 36;
          i_1258291823[i_1258291823_Idx] = addInt(i_1258291823[i_1258291823_Idx], 1);
        }
    };
    if (((s_1258291822).length <= i_1258291823[i_1258291823_Idx])) {
    F.line = 43;
    raiseException({message: ([69,120,112,101,99,116,101,100,32,123,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1258291823[i_1258291823_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    if ((s_1258291822[chckIndx(i_1258291823[i_1258291823_Idx], 0, (s_1258291822).length - 1)] == 123)) {
    F.line = 45;
    i_1258291823[i_1258291823_Idx] = addInt(i_1258291823[i_1258291823_Idx], 1);
    }
    else {
      F.line = 47;
      raiseException({message: ([69,120,112,101,99,116,101,100,32,123,32,98,117,116,32,103,111,116,32] || []).concat([s_1258291822[chckIndx(i_1258291823[i_1258291823_Idx], 0, (s_1258291822).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1258291823[i_1258291823_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    F.line = 429;
    parseObjectInner_1258291872(s_1258291822, i_1258291823, i_1258291823_Idx, v_1258291824);
    Label5: {
      F.line = 41;
        Label6: while (true) {
        if (!(i_1258291823[i_1258291823_Idx] < (s_1258291822).length)) break Label6;
          F.line = 33;
          var cHEX60gensym243_1258294095 = s_1258291822[chckIndx(i_1258291823[i_1258291823_Idx], 0, (s_1258291822).length - 1)];
          if (!((whiteSpace_1275068427[cHEX60gensym243_1258294095] != undefined))) {
          F.line = 35;
          break Label5;
          }
          
          F.line = 36;
          i_1258291823[i_1258291823_Idx] = addInt(i_1258291823[i_1258291823_Idx], 1);
        }
    };
    if (((s_1258291822).length <= i_1258291823[i_1258291823_Idx])) {
    F.line = 43;
    raiseException({message: ([69,120,112,101,99,116,101,100,32,125,32,98,117,116,32,101,110,100,32,114,101,97,99,104,101,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || []).concat(HEX24_369098760(i_1258291823[i_1258291823_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
    if ((s_1258291822[chckIndx(i_1258291823[i_1258291823_Idx], 0, (s_1258291822).length - 1)] == 125)) {
    F.line = 45;
    i_1258291823[i_1258291823_Idx] = addInt(i_1258291823[i_1258291823_Idx], 1);
    }
    else {
      F.line = 47;
      raiseException({message: ([69,120,112,101,99,116,101,100,32,125,32,98,117,116,32,103,111,116,32] || []).concat([s_1258291822[chckIndx(i_1258291823[i_1258291823_Idx], 0, (s_1258291822).length - 1)]],[32,105,110,115,116,101,97,100,46,32,65,116,32,111,102,102,115,101,116,58,32] || [],HEX24_369098760(i_1258291823[i_1258291823_Idx]) || []), parent: null, m_type: NTI1275068419, name: null, trace: [], up: null}, "JsonError");
    }
    
  };
  framePtr = F.prev;

  
}

function fromJson_1258291813(s_1258291816) {
  var result_1258291818 = [({title: [], description: [], type: [], required: [], additionalProperties: false, properties: ({data: [], counter: 0, first: 0, last: 0}), $defs: ({data: [], counter: 0, first: 0, last: 0})})];

  var F = {procname: "fromJson.fromJson", prev: framePtr, filename: "/home/runner/.nimble/pkgs2/jsony-1.1.3-3a1d109f9ac95c708549b976ceab7ace5b7ef558/jsony.nim", line: 0};
  framePtr = F;
    F.line = 546;
    F.filename = "jsony.nim";
    var i_1258291819 = [0];
    F.line = 547;
    parseHook_1258291820(s_1258291816, i_1258291819, 0, result_1258291818[0]);
  framePtr = F.prev;

  return result_1258291818[0];

}

function nsuStartsWith(s_939525550, prefix_939525551) {
  var result_939525552 = false;

  var F = {procname: "strutils.startsWith", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 56;
    F.filename = "strimpl.nim";
    var prefixLenHEX60gensym146_939525557 = (prefix_939525551).length;
    F.line = 57;
    var sLenHEX60gensym146_939525558 = (s_939525550).length;
    F.line = 58;
    var iHEX60gensym146_939525559 = 0;
    Label1: {
      F.line = 1624;
      F.filename = "strutils.nim";
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_939525557 <= iHEX60gensym146_939525559)) {
          F.line = 60;
          F.filename = "strimpl.nim";
          result_939525552 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_939525558 <= iHEX60gensym146_939525559) || !((s_939525550[chckIndx(iHEX60gensym146_939525559, 0, (s_939525550).length - 1)] == prefix_939525551[chckIndx(iHEX60gensym146_939525559, 0, (prefix_939525551).length - 1)])))) {
          F.line = 61;
          result_939525552 = false;
          break BeforeRet;
          }
          
          F.line = 62;
          iHEX60gensym146_939525559 = addInt(iHEX60gensym146_939525559, 1);
        }
    };
  };
  framePtr = F.prev;

  return result_939525552;

}

function parseSaturatedNatural_956301718(s_956301719, b_956301720, b_956301720_Idx) {
      var Temporary1;
          var Temporary4;

  var result_956301721 = 0;

  var F = {procname: "parseutils.parseSaturatedNatural", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 500;
    F.filename = "parseutils.nim";
    var i_956301722 = 0;
    if (((i_956301722 < (s_956301719).length) && (s_956301719[chckIndx(i_956301722, 0, (s_956301719).length - 1)] == 43))) {
    F.line = 501;
    i_956301722 = addInt(i_956301722, 1);
    }
    
      if (!(i_956301722 < (s_956301719).length)) Temporary1 = false; else {        Temporary1 = (ConstSet8[s_956301719[chckIndx(i_956301722, 0, (s_956301719).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 503;
    b_956301720[b_956301720_Idx] = 0;
    Label2: {
      F.line = 504;
        Label3: while (true) {
          if (!(i_956301722 < (s_956301719).length)) Temporary4 = false; else {            Temporary4 = (ConstSet9[s_956301719[chckIndx(i_956301722, 0, (s_956301719).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          F.line = 505;
          var c_956301751 = subInt(s_956301719[chckIndx(i_956301722, 0, (s_956301719).length - 1)], 48);
          if ((b_956301720[b_956301720_Idx] <= divInt(subInt(2147483647, c_956301751), 10))) {
          F.line = 507;
          b_956301720[b_956301720_Idx] = addInt(mulInt(b_956301720[b_956301720_Idx], 10), c_956301751);
          }
          else {
            F.line = 509;
            b_956301720[b_956301720_Idx] = 2147483647;
          }
          
          F.line = 510;
          i_956301722 = addInt(i_956301722, 1);
          Label5: {
            F.line = 511;
              Label6: while (true) {
              if (!((i_956301722 < (s_956301719).length) && (s_956301719[chckIndx(i_956301722, 0, (s_956301719).length - 1)] == 95))) break Label6;
                F.line = 511;
                i_956301722 = addInt(i_956301722, 1);
              }
          };
        }
    };
    F.line = 512;
    result_956301721 = i_956301722;
    }
    
  framePtr = F.prev;

  return result_956301721;

}

function parseSaturatedNatural_956302224(s_956302225, b_956302226, b_956302226_Idx, start_956302227) {
  var result_956302228 = 0;

  var F = {procname: "parseutils.parseSaturatedNatural", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 1013;
    F.filename = "parseutils.nim";
    result_956302228 = parseSaturatedNatural_956301718((s_956302225.slice(start_956302227, (s_956302225).length - 1 + 1)), b_956302226, b_956302226_Idx);
  framePtr = F.prev;

  return result_956302228;

}

function HEX5BHEX5D_939525403(s_939525406, x_939525407) {
  var result_939525408 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 83;
    F.filename = "indices.nim";
    var a_939525410 = x_939525407.a;
    F.line = 84;
    var L_939525412 = addInt(subInt(subInt((s_939525406).length, x_939525407.b), a_939525410), 1);
    F.line = 85;
    result_939525408 = nimCopy(null, mnewString(chckRange(L_939525412, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 86;
      var i_939525417 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_536871009 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_536871009 < L_939525412)) break Label3;
            F.line = 86;
            F.filename = "indices.nim";
            i_939525417 = i_536871009;
            F.line = 86;
            result_939525408[chckIndx(i_939525417, 0, (result_939525408).length - 1)] = s_939525406[chckIndx(addInt(i_939525417, a_939525410), 0, (s_939525406).length - 1)];
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_536871009 = addInt(i_536871009, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_939525408;

}

function HEX2EHEX2E_973078632(a_973078635, b_973078636) {
  var result_973078639 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 416;
    F.filename = "system.nim";
    result_973078639 = nimCopy(result_973078639, {a: a_973078635, b: b_973078636}, NTI973078613);
  framePtr = F.prev;

  return result_973078639;

}

function parseStandardFormatSpecifier_1207959610(s_1207959611, start_1207959612, ignoreUnknownSuffix_1207959613) {
      var Temporary1;
      var Temporary2;

  var result_1207959614 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

  var F = {procname: "strformat.parseStandardFormatSpecifier", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 434;
    F.filename = "strformat.nim";
    result_1207959614.fill = 32;
    F.line = 435;
    result_1207959614.align = 0;
    F.line = 436;
    result_1207959614.sign = 45;
    F.line = 437;
    var i_1207959616 = start_1207959612;
    if (((addInt(i_1207959616, 1) < (s_1207959611).length) && (ConstSet4[s_1207959611[chckIndx(addInt(i_1207959616, 1), 0, (s_1207959611).length - 1)]] != undefined))) {
    F.line = 439;
    result_1207959614.fill = s_1207959611[chckIndx(i_1207959616, 0, (s_1207959611).length - 1)];
    F.line = 440;
    result_1207959614.align = s_1207959611[chckIndx(addInt(i_1207959616, 1), 0, (s_1207959611).length - 1)];
    F.line = 441;
    i_1207959616 = addInt(i_1207959616, 2);
    }
    else {
    if (((i_1207959616 < (s_1207959611).length) && (ConstSet5[s_1207959611[chckIndx(i_1207959616, 0, (s_1207959611).length - 1)]] != undefined))) {
    F.line = 443;
    result_1207959614.align = s_1207959611[chckIndx(i_1207959616, 0, (s_1207959611).length - 1)];
    F.line = 444;
    i_1207959616 = addInt(i_1207959616, 1);
    }
    }
    if (((i_1207959616 < (s_1207959611).length) && (ConstSet6[s_1207959611[chckIndx(i_1207959616, 0, (s_1207959611).length - 1)]] != undefined))) {
    F.line = 447;
    result_1207959614.sign = s_1207959611[chckIndx(i_1207959616, 0, (s_1207959611).length - 1)];
    F.line = 448;
    i_1207959616 = addInt(i_1207959616, 1);
    }
    
    if (((i_1207959616 < (s_1207959611).length) && (s_1207959611[chckIndx(i_1207959616, 0, (s_1207959611).length - 1)] == 35))) {
    F.line = 451;
    result_1207959614.alternateForm = true;
    F.line = 452;
    i_1207959616 = addInt(i_1207959616, 1);
    }
    
      if (!((addInt(i_1207959616, 1) < (s_1207959611).length) && (s_1207959611[chckIndx(i_1207959616, 0, (s_1207959611).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet7[s_1207959611[chckIndx(addInt(i_1207959616, 1), 0, (s_1207959611).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 455;
    result_1207959614.padWithZero = true;
    F.line = 456;
    i_1207959616 = addInt(i_1207959616, 1);
    }
    
    F.line = 458;
    var parsedLength_1207959658 = parseSaturatedNatural_956302224(s_1207959611, result_1207959614, "minimumWidth", i_1207959616);
    F.line = 459;
    i_1207959616 = addInt(i_1207959616, parsedLength_1207959658);
    if (((i_1207959616 < (s_1207959611).length) && (s_1207959611[chckIndx(i_1207959616, 0, (s_1207959611).length - 1)] == 46))) {
    F.line = 461;
    i_1207959616 = addInt(i_1207959616, 1);
    F.line = 462;
    var parsedLengthB_1207959669 = parseSaturatedNatural_956302224(s_1207959611, result_1207959614, "precision", i_1207959616);
    F.line = 463;
    i_1207959616 = addInt(i_1207959616, parsedLengthB_1207959669);
    }
    else {
      F.line = 465;
      result_1207959614.precision = (-1);
    }
    
      if (!(i_1207959616 < (s_1207959611).length)) Temporary2 = false; else {        Temporary2 = (ConstSet10[s_1207959611[chckIndx(i_1207959616, 0, (s_1207959611).length - 1)]] != undefined);      }    if (Temporary2) {
    F.line = 468;
    result_1207959614.typ = s_1207959611[chckIndx(i_1207959616, 0, (s_1207959611).length - 1)];
    F.line = 469;
    i_1207959616 = addInt(i_1207959616, 1);
    }
    
    F.line = 470;
    result_1207959614.endPosition = i_1207959616;
    if ((!((i_1207959616 == (s_1207959611).length)) && !(ignoreUnknownSuffix_1207959613))) {
    F.line = 472;
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,44,32,99,97,110,110,111,116,32,112,97,114,115,101,58,32] || []).concat(HEX5BHEX5D_939525403(s_1207959611, HEX2EHEX2E_973078632(i_1207959616, 1)) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_1207959614;

}

function nucruneLen(s_1006632988) {
  var result_1006632989 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 52;
    F.filename = "unicode.nim";
    result_1006632989 = 0;
    F.line = 53;
    var i_1006632990 = 0;
    Label1: {
      F.line = 54;
        Label2: while (true) {
        if (!(i_1006632990 < (s_1006632988).length)) break Label2;
          if ((s_1006632988[chckIndx(i_1006632990, 0, (s_1006632988).length - 1)] <= 127)) {
          F.line = 55;
          i_1006632990 = addInt(i_1006632990, 1);
          }
          else {
          if (((s_1006632988[chckIndx(i_1006632990, 0, (s_1006632988).length - 1)] >>> 5) == 6)) {
          F.line = 56;
          i_1006632990 = addInt(i_1006632990, 2);
          }
          else {
          if (((s_1006632988[chckIndx(i_1006632990, 0, (s_1006632988).length - 1)] >>> 4) == 14)) {
          F.line = 57;
          i_1006632990 = addInt(i_1006632990, 3);
          }
          else {
          if (((s_1006632988[chckIndx(i_1006632990, 0, (s_1006632988).length - 1)] >>> 3) == 30)) {
          F.line = 58;
          i_1006632990 = addInt(i_1006632990, 4);
          }
          else {
          if (((s_1006632988[chckIndx(i_1006632990, 0, (s_1006632988).length - 1)] >>> 2) == 62)) {
          F.line = 59;
          i_1006632990 = addInt(i_1006632990, 5);
          }
          else {
          if (((s_1006632988[chckIndx(i_1006632990, 0, (s_1006632988).length - 1)] >>> 1) == 126)) {
          F.line = 60;
          i_1006632990 = addInt(i_1006632990, 6);
          }
          else {
            F.line = 61;
          i_1006632990 = addInt(i_1006632990, 1);
          }
          }}}}}
          F.line = 62;
          result_1006632989 = addInt(result_1006632989, 1);
        }
    };
  framePtr = F.prev;

  return result_1006632989;

}

function runeLen_1006640149(s_1006640150) {
  var result_1006640151 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1153;
    F.filename = "unicode.nim";
    result_1006640151 = nucruneLen((s_1006640150.slice(0, (s_1006640150).length - 1 + 1)));
  framePtr = F.prev;

  return result_1006640151;

}

function runeLenAt_1006633054(s_1006633055, i_1006633056) {
  var result_1006633057 = 0;

  var F = {procname: "unicode.runeLenAt", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    if ((s_1006633055[chckIndx(i_1006633056, 0, (s_1006633055).length - 1)] <= 127)) {
    F.line = 74;
    F.filename = "unicode.nim";
    result_1006633057 = 1;
    }
    else {
    if (((s_1006633055[chckIndx(i_1006633056, 0, (s_1006633055).length - 1)] >>> 5) == 6)) {
    F.line = 75;
    result_1006633057 = 2;
    }
    else {
    if (((s_1006633055[chckIndx(i_1006633056, 0, (s_1006633055).length - 1)] >>> 4) == 14)) {
    F.line = 76;
    result_1006633057 = 3;
    }
    else {
    if (((s_1006633055[chckIndx(i_1006633056, 0, (s_1006633055).length - 1)] >>> 3) == 30)) {
    F.line = 77;
    result_1006633057 = 4;
    }
    else {
    if (((s_1006633055[chckIndx(i_1006633056, 0, (s_1006633055).length - 1)] >>> 2) == 62)) {
    F.line = 78;
    result_1006633057 = 5;
    }
    else {
    if (((s_1006633055[chckIndx(i_1006633056, 0, (s_1006633055).length - 1)] >>> 1) == 126)) {
    F.line = 79;
    result_1006633057 = 6;
    }
    else {
      F.line = 80;
      result_1006633057 = 1;
    }
    }}}}}
  framePtr = F.prev;

  return result_1006633057;

}

function runeOffset_1006633678(s_1006633679, pos_1006633680, start_1006633681) {
  var result_1006633682 = 0;

  var F = {procname: "unicode.runeOffset", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 331;
    F.filename = "unicode.nim";
    var i_1006633683 = 0;
    F.line = 332;
    var o_1006633684 = start_1006633681;
    Label1: {
      F.line = 333;
        Label2: while (true) {
        if (!(i_1006633683 < pos_1006633680)) break Label2;
          F.line = 334;
          o_1006633684 = addInt(o_1006633684, chckRange(runeLenAt_1006633054(s_1006633679, o_1006633684), 0, 2147483647));
          if (((s_1006633679).length <= o_1006633684)) {
          F.line = 336;
          result_1006633682 = (-1);
          break BeforeRet;
          }
          
          F.line = 337;
          i_1006633683 = addInt(i_1006633683, 1);
        }
    };
    F.line = 338;
    result_1006633682 = o_1006633684;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1006633682;

}

function runeOffset_1006640324(s_1006640325, pos_1006640326, start_1006640327) {
  var result_1006640328 = 0;

  var F = {procname: "unicode.runeOffset", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1196;
    F.filename = "unicode.nim";
    result_1006640328 = runeOffset_1006633678((s_1006640325.slice(0, (s_1006640325).length - 1 + 1)), pos_1006640326, start_1006640327);
  framePtr = F.prev;

  return result_1006640328;

}

function validateUtf8_1006633296(s_1006633297) {
  var result_1006633298 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 184;
    F.filename = "unicode.nim";
    var i_1006633299 = 0;
    F.line = 185;
    var L_1006633303 = (s_1006633297).length;
    Label1: {
      F.line = 186;
        Label2: while (true) {
        if (!(i_1006633299 < L_1006633303)) break Label2;
          if ((s_1006633297[chckIndx(i_1006633299, 0, (s_1006633297).length - 1)] <= 127)) {
          F.line = 188;
          i_1006633299 = addInt(i_1006633299, 1);
          }
          else {
          if (((s_1006633297[chckIndx(i_1006633299, 0, (s_1006633297).length - 1)] >>> 5) == 6)) {
          if ((s_1006633297[chckIndx(i_1006633299, 0, (s_1006633297).length - 1)] < 194)) {
          F.line = 190;
          result_1006633298 = i_1006633299;
          break BeforeRet;
          }
          
          if (((addInt(i_1006633299, 1) < L_1006633303) && ((s_1006633297[chckIndx(addInt(i_1006633299, 1), 0, (s_1006633297).length - 1)] >>> 6) == 2))) {
          F.line = 191;
          i_1006633299 = addInt(i_1006633299, 2);
          }
          else {
            F.line = 192;
            result_1006633298 = i_1006633299;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1006633297[chckIndx(i_1006633299, 0, (s_1006633297).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_1006633299, 2) < L_1006633303) && ((s_1006633297[chckIndx(addInt(i_1006633299, 1), 0, (s_1006633297).length - 1)] >>> 6) == 2)) && ((s_1006633297[chckIndx(addInt(i_1006633299, 2), 0, (s_1006633297).length - 1)] >>> 6) == 2))) {
          F.line = 195;
          i_1006633299 = addInt(i_1006633299, 3);
          }
          else {
            F.line = 196;
            result_1006633298 = i_1006633299;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1006633297[chckIndx(i_1006633299, 0, (s_1006633297).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_1006633299, 3) < L_1006633303) && ((s_1006633297[chckIndx(addInt(i_1006633299, 1), 0, (s_1006633297).length - 1)] >>> 6) == 2)) && ((s_1006633297[chckIndx(addInt(i_1006633299, 2), 0, (s_1006633297).length - 1)] >>> 6) == 2)) && ((s_1006633297[chckIndx(addInt(i_1006633299, 3), 0, (s_1006633297).length - 1)] >>> 6) == 2))) {
          F.line = 201;
          i_1006633299 = addInt(i_1006633299, 4);
          }
          else {
            F.line = 202;
            result_1006633298 = i_1006633299;
            break BeforeRet;
          }
          
          }
          else {
            F.line = 204;
            result_1006633298 = i_1006633299;
            break BeforeRet;
          }
          }}}
        }
    };
    F.line = 205;
    result_1006633298 = (-1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1006633298;

}

function validateUtf8_1006640321(s_1006640322) {
  var result_1006640323 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1186;
    F.filename = "unicode.nim";
    result_1006640323 = validateUtf8_1006633296((s_1006640322.slice(0, (s_1006640322).length - 1 + 1)));
  framePtr = F.prev;

  return result_1006640323;

}

function nsuRepeatChar(c_939525217, count_939525218) {
  var result_939525219 = [];

  var F = {procname: "strutils.repeat", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1328;
    F.filename = "strutils.nim";
    result_939525219 = nimCopy(null, mnewString(count_939525218), NTI33554449);
    Label1: {
      F.line = 1329;
      var i_939525224 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536871015 = 0;
      F.line = 1329;
      F.filename = "strutils.nim";
      colontmp__536871015 = subInt(count_939525218, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536871016 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_536871016 <= colontmp__536871015)) break Label3;
            F.line = 1329;
            F.filename = "strutils.nim";
            i_939525224 = res_536871016;
            F.line = 1329;
            result_939525219[chckIndx(i_939525224, 0, (result_939525219).length - 1)] = c_939525217;
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536871016 = addInt(res_536871016, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_939525219;

}

function alignString_1207959572(s_1207959573, minimumWidth_1207959574, align_1207959575, fill_1207959576) {
      var Temporary1;

  var result_1207959577 = [];

  var F = {procname: "strformat.alignString", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    if ((minimumWidth_1207959574 == 0)) {
    F.line = 335;
    F.filename = "strformat.nim";
    result_1207959577 = nimCopy(null, s_1207959573, NTI33554449);
    }
    else {
      F.line = 337;
      if ((validateUtf8_1006640321(s_1207959573) == (-1))) {
      Temporary1 = runeLen_1006640149(s_1207959573);
      }
      else {
      Temporary1 = (s_1207959573).length;
      }
      
      var sRuneLen_1207959578 = Temporary1;
      F.line = 338;
      var toFill_1207959579 = subInt(minimumWidth_1207959574, sRuneLen_1207959578);
      if ((toFill_1207959579 <= 0)) {
      F.line = 340;
      result_1207959577 = nimCopy(null, s_1207959573, NTI33554449);
      }
      else {
      if (((align_1207959575 == 60) || (align_1207959575 == 0))) {
      F.line = 342;
      result_1207959577 = nimCopy(null, (s_1207959573 || []).concat(nsuRepeatChar(fill_1207959576, chckRange(toFill_1207959579, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_1207959575 == 94)) {
      F.line = 344;
      var half_1207959580 = divInt(toFill_1207959579, 2);
      F.line = 345;
      result_1207959577 = nimCopy(null, (nsuRepeatChar(fill_1207959576, chckRange(half_1207959580, 0, 2147483647)) || []).concat(s_1207959573 || [],nsuRepeatChar(fill_1207959576, chckRange(subInt(toFill_1207959579, half_1207959580), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        F.line = 347;
        result_1207959577 = nimCopy(null, (nsuRepeatChar(fill_1207959576, chckRange(toFill_1207959579, 0, 2147483647)) || []).concat(s_1207959573 || []), NTI33554449);
      }
      }}
    }
    
  framePtr = F.prev;

  return result_1207959577;

}

function formatValue_1207959723(result_1207959724, result_1207959724_Idx, value_1207959725, specifier_1207959726) {
    var Temporary1;

  var F = {procname: "strformat.formatValue", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 557;
    F.filename = "strformat.nim";
    var spec_1207959727 = parseStandardFormatSpecifier_1207959610(specifier_1207959726, 0, false);
    F.line = 558;
    var value_1207959728 = nimCopy(null, value_1207959725, NTI33554449);
    F.line = 559;
    switch (spec_1207959727.typ) {
    case 115:
    case 0:
      break;
    default: 
      F.line = 562;
      raiseException({message: ([105,110,118,97,108,105,100,32,116,121,112,101,32,105,110,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,102,111,114,32,115,116,114,105,110,103,44,32,101,120,112,101,99,116,101,100,32,39,115,39,44,32,98,117,116,32,103,111,116,32] || []).concat([spec_1207959727.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_1207959727.precision == (-1)))) {
    if ((spec_1207959727.precision < runeLen_1006640149(value_1207959728))) {
    F.line = 567;
    if (value_1207959728.length < (Temporary1 = chckRange(runeOffset_1006640324(value_1207959728, chckRange(spec_1207959727.precision, 0, 2147483647), 0), 0, 2147483647), Temporary1)) { for (var i = value_1207959728.length; i < Temporary1; ++i) value_1207959728.push(0); }
         else {value_1207959728.length = Temporary1; };
    }
    
    }
    
    F.line = 568;
    result_1207959724[result_1207959724_Idx].push.apply(result_1207959724[result_1207959724_Idx], alignString_1207959572(value_1207959728, spec_1207959727.minimumWidth, spec_1207959727.align, spec_1207959727.fill));;
  framePtr = F.prev;

  
}

function validateRef_1258291245(prop_1258291246) {
  var F = {procname: "json_schema_parser.validateRef", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/json_schema_parser.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 38;
    F.filename = "json_schema_parser.nim";
    var s_1258291247 = nimCopy(null, prop_1258291246.$ref, NTI33554449);
    if (((eqStrings(s_1258291247, []) || eqStrings(s_1258291247, [35])) || nsuStartsWith(s_1258291247, [35,47,36,100,101,102,115,47]))) {
    F.line = 40;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 42;
      var fmtRes_1258291251 = [mnewString(0)];
      F.line = 42;
      fmtRes_1258291251[0].push.apply(fmtRes_1258291251[0], [110,105,109,106,115,111,110,32,115,117,112,112,111,114,116,115,32,111,110,108,121,32,108,111,99,97,108,32,114,101,102,32,39,35,47,36,100,101,102,115,47,60,110,97,109,101,62,39,46,32,36,114,101,102,32,61,32]);;
      F.line = 42;
      formatValue_1207959723(fmtRes_1258291251, 0, s_1258291247, []);
    };
    F.line = 41;
    raiseException({message: nimCopy(null, fmtRes_1258291251[0], NTI33554449), parent: null, m_type: NTI1191182342, name: null, trace: [], up: null}, "UnsupportedRefError");
  };
  framePtr = F.prev;

  
}

function newProperty_1258291289(description_1258291290, typ_1258291291, required_1258291292, properties_1258291295, re_1258291296) {
  var result_1258291297 = null;

  var F = {procname: "json_schema_parser.newProperty", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/json_schema_parser.nim", line: 0};
  framePtr = F;
    F.line = 46;
    F.filename = "json_schema_parser.nim";
    result_1258291297 = {description: nimCopy(null, description_1258291290, NTI33554449), type: nimCopy(null, typ_1258291291, NTI33554449), required: nimCopy(null, required_1258291292, NTI1258291272), properties: nimCopy(null, properties_1258291295, NTI1258291215), $ref: nimCopy(null, re_1258291296, NTI33554449), items: null};
    F.line = 53;
    validateRef_1258291245(result_1258291297);
  framePtr = F.prev;

  return result_1258291297;

}

function isTypeObject_1258291357(prop_1258291358) {
  var result_1258291359 = false;

  var F = {procname: "json_schema_parser.isTypeObject", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/json_schema_parser.nim", line: 0};
  framePtr = F;
    F.line = 56;
    F.filename = "json_schema_parser.nim";
    result_1258291359 = eqStrings(prop_1258291358.type, [111,98,106,101,99,116]);
  framePtr = F.prev;

  return result_1258291359;

}

function isTypeArray_1258291360(prop_1258291361) {
  var result_1258291362 = false;

  var F = {procname: "json_schema_parser.isTypeArray", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/json_schema_parser.nim", line: 0};
  framePtr = F;
    F.line = 59;
    F.filename = "json_schema_parser.nim";
    result_1258291362 = eqStrings(prop_1258291361.type, [97,114,114,97,121]);
  framePtr = F.prev;

  return result_1258291362;

}

function nsuFindChar(s_939525780, sub_939525781, start_939525782, last_939525783) {
    var Temporary1;

  var result_939525784 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1945;
    F.filename = "strutils.nim";
    result_939525784 = (-1);
    F.line = 1946;
    if ((last_939525783 < 0)) {
    Temporary1 = (s_939525780).length - 1;
    }
    else {
    Temporary1 = last_939525783;
    }
    
    var last_939525785 = Temporary1;
    Label2: {
      F.line = 1949;
      var iHEX60gensym176_939525799 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536871030 = 0;
      F.line = 1949;
      F.filename = "strutils.nim";
      colontmp__536871030 = start_939525782;
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536871031 = colontmp__536871030;
      Label3: {
        F.line = 91;
          Label4: while (true) {
          if (!(res_536871031 <= last_939525785)) break Label4;
            F.line = 1963;
            F.filename = "strutils.nim";
            iHEX60gensym176_939525799 = res_536871031;
            if ((s_939525780[chckIndx(iHEX60gensym176_939525799, 0, (s_939525780).length - 1)] == sub_939525781)) {
            F.line = 1951;
            result_939525784 = iHEX60gensym176_939525799;
            break BeforeRet;
            }
            
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536871031 = addInt(res_536871031, 1);
          }
      };
    };
  };
  framePtr = F.prev;

  return result_939525784;

}

function substr_33558079(s_33558080, first_33558081, last_33558082) {
  var result_33558083 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2658;
    F.filename = "system.nim";
    var first_33558084 = nimMax(first_33558081, 0);
    F.line = 2659;
    var L_33558085 = nimMax(addInt(subInt(nimMin(last_33558082, (s_33558080).length - 1), first_33558084), 1), 0);
    F.line = 2660;
    result_33558083 = nimCopy(null, mnewString(chckRange(L_33558085, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 2661;
      var i_33558090 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536871034 = 0;
      F.line = 2661;
      F.filename = "system.nim";
      colontmp__536871034 = subInt(L_33558085, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536871035 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_536871035 <= colontmp__536871034)) break Label3;
            F.line = 2661;
            F.filename = "system.nim";
            i_33558090 = res_536871035;
            F.line = 2661;
            result_33558083[chckIndx(i_33558090, 0, (result_33558083).length - 1)] = s_33558080[chckIndx(addInt(i_33558090, first_33558084), 0, (s_33558080).length - 1)];
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536871035 = addInt(res_536871035, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_33558083;

}

function substr_33558091(s_33558092, first_33558093) {
  var result_33558094 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2665;
    F.filename = "system.nim";
    result_33558094 = nimCopy(null, substr_33558079(s_33558092, first_33558093, (s_33558092).length - 1), NTI33554449);
  framePtr = F.prev;

  return result_33558094;

}

function fill_939525718(a_939525720, value_939525721) {
  var F = {procname: "fill.fill", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 72;
    F.filename = "algorithm.nim";
    var xHEX60gensym172_939525727 = 0;
    Label1: {
      F.line = 98;
        Label2: while (true) {
        if (!(xHEX60gensym172_939525727 <= (a_939525720).length - 1)) break Label2;
          F.line = 98;
          a_939525720[chckIndx(xHEX60gensym172_939525727, 0, (a_939525720).length - 1)] = value_939525721;
          F.line = 75;
          xHEX60gensym172_939525727 = addInt(xHEX60gensym172_939525727, 1);
        }
    };
  framePtr = F.prev;

  
}

function nsuInitSkipTable(a_939525715, sub_939525716) {
  var F = {procname: "strutils.initSkipTable", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1878;
    F.filename = "strutils.nim";
    var m_939525717 = (sub_939525716).length;
    F.line = 1879;
    fill_939525718(a_939525715, m_939525717);
    Label1: {
      F.line = 1881;
      var i_939525737 = 0;
      F.line = 117;
      F.filename = "iterators_1.nim";
      var colontmp__536871038 = 0;
      F.line = 1881;
      F.filename = "strutils.nim";
      colontmp__536871038 = subInt(m_939525717, 1);
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_536871039 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_536871039 < colontmp__536871038)) break Label3;
            F.line = 1881;
            F.filename = "strutils.nim";
            i_939525737 = i_536871039;
            F.line = 1881;
            a_939525715[chckIndx(sub_939525716[chckIndx(i_939525737, 0, (sub_939525716).length - 1)], 0, (a_939525715).length - 1)] = subInt(subInt(m_939525717, 1), i_939525737);
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_536871039 = addInt(i_536871039, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function nsuInitNewSkipTable(sub_939525755) {
  var result_939525756 = [new Int32Array(256)];

  var F = {procname: "strutils.initSkipTable", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1891;
    F.filename = "strutils.nim";
    nsuInitSkipTable(result_939525756[0], sub_939525755);
  framePtr = F.prev;

  return result_939525756[0];

}

function nsuFindStrA(a_939525758, s_939525759, sub_939525760, start_939525761, last_939525762) {
    var Temporary1;

  var result_939525763 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1905;
    F.filename = "strutils.nim";
    if ((last_939525762 < 0)) {
    Temporary1 = (s_939525759).length - 1;
    }
    else {
    Temporary1 = last_939525762;
    }
    
    var last_939525764 = Temporary1;
    F.line = 1906;
    var subLast_939525765 = subInt((sub_939525760).length, 1);
    if ((subLast_939525765 == (-1))) {
    F.line = 1911;
    result_939525763 = start_939525761;
    break BeforeRet;
    }
    
    F.line = 1915;
    result_939525763 = (-1);
    F.line = 1916;
    var skip_939525766 = start_939525761;
    Label2: {
      F.line = 1918;
        Label3: while (true) {
        if (!(subLast_939525765 <= subInt(last_939525764, skip_939525766))) break Label3;
          F.line = 1919;
          var i_939525767 = subLast_939525765;
          Label4: {
            F.line = 1920;
              Label5: while (true) {
              if (!(s_939525759[chckIndx(addInt(skip_939525766, i_939525767), 0, (s_939525759).length - 1)] == sub_939525760[chckIndx(i_939525767, 0, (sub_939525760).length - 1)])) break Label5;
                if ((i_939525767 == 0)) {
                F.line = 1922;
                result_939525763 = skip_939525766;
                break BeforeRet;
                }
                
                F.line = 1923;
                i_939525767 = subInt(i_939525767, 1);
              }
          };
          F.line = 1924;
          skip_939525766 = addInt(skip_939525766, a_939525758[chckIndx(s_939525759[chckIndx(addInt(skip_939525766, subLast_939525765), 0, (s_939525759).length - 1)], 0, (a_939525758).length - 1)]);
        }
    };
  };
  framePtr = F.prev;

  return result_939525763;

}

function nsuReplaceStr(s_939525968, sub_939525969, by_939525970) {
  var result_939525971 = [];

  var F = {procname: "strutils.replace", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2180;
    F.filename = "strutils.nim";
    result_939525971 = nimCopy(null, [], NTI33554449);
    F.line = 2181;
    var subLen_939525972 = (sub_939525969).length;
    if ((subLen_939525972 == 0)) {
    F.line = 2183;
    result_939525971 = nimCopy(null, s_939525968, NTI33554449);
    }
    else {
    if ((subLen_939525972 == 1)) {
    F.line = 2187;
    var c_939525973 = sub_939525969[chckIndx(0, 0, (sub_939525969).length - 1)];
    F.line = 2188;
    var last_939525974 = (s_939525968).length - 1;
    F.line = 2189;
    var i_939525975 = 0;
    Label1: {
      F.line = 2190;
        Label2: while (true) {
        if (!true) break Label2;
          F.line = 2191;
          var j_939525976 = nsuFindChar(s_939525968, c_939525973, chckRange(i_939525975, 0, 2147483647), last_939525974);
          if ((j_939525976 < 0)) {
          F.line = 2192;
          break Label1;
          }
          
          F.line = 2193;
          result_939525971.push.apply(result_939525971, substr_33558079(s_939525968, i_939525975, subInt(j_939525976, 1)));;
          F.line = 2194;
          result_939525971.push.apply(result_939525971, by_939525970);;
          F.line = 2195;
          i_939525975 = addInt(j_939525976, subLen_939525972);
        }
    };
    F.line = 2197;
    result_939525971.push.apply(result_939525971, substr_33558091(s_939525968, i_939525975));;
    }
    else {
      F.line = 2199;
      var a_939525977 = nsuInitNewSkipTable(sub_939525969);
      F.line = 2200;
      var last_939525978 = (s_939525968).length - 1;
      F.line = 2201;
      var i_939525979 = 0;
      Label3: {
        F.line = 2202;
          Label4: while (true) {
          if (!true) break Label4;
            F.line = 2203;
            var j_939525980 = nsuFindStrA(a_939525977, s_939525968, sub_939525969, chckRange(i_939525979, 0, 2147483647), last_939525978);
            if ((j_939525980 < 0)) {
            F.line = 2204;
            break Label3;
            }
            
            F.line = 2205;
            result_939525971.push.apply(result_939525971, substr_33558079(s_939525968, i_939525979, subInt(j_939525980, 1)));;
            F.line = 2206;
            result_939525971.push.apply(result_939525971, by_939525970);;
            F.line = 2207;
            i_939525979 = addInt(j_939525980, subLen_939525972);
          }
      };
      F.line = 2209;
      result_939525971.push.apply(result_939525971, substr_33558091(s_939525968, i_939525979));;
    }
    }
  framePtr = F.prev;

  return result_939525971;

}

function removeUnusedChars_1191182388(s_1191182389) {
  var result_1191182390 = [];

  var F = {procname: "types.removeUnusedChars", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/types.nim", line: 0};
  framePtr = F;
    F.line = 33;
    F.filename = "types.nim";
    result_1191182390 = nimCopy(null, nsuReplaceStr(nsuReplaceStr(s_1191182389, [44], []), [39], []), NTI33554449);
  framePtr = F.prev;

  return result_1191182390;

}

function normalize_1191182391(self_1191182392) {
  var result_1191182393 = ({name: [], fields: [], isRef: false, isNilType: false, isPublic: false, isNormalized: false, isBackquoted: false, primitiveType: [], isSeq: false});

  var F = {procname: "types.normalize", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/types.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 38;
    F.filename = "types.nim";
    result_1191182393 = nimCopy(result_1191182393, self_1191182392, NTI1191182339);
    if (self_1191182392.isNormalized) {
    F.line = 40;
    break BeforeRet;
    }
    
    F.line = 42;
    result_1191182393.isNormalized = true;
    F.line = 43;
    result_1191182393.name = nimCopy(null, removeUnusedChars_1191182388(result_1191182393.name), NTI33554449);
  };
  framePtr = F.prev;

  return result_1191182393;

}

function find_1191182488(a_1191182491, item_1191182492) {
  var result_1191182493 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1665;
    F.filename = "system.nim";
    result_1191182493 = 0;
    Label1: {
      F.line = 1666;
      var i_1191182497 = 0;
      F.line = 23;
      F.filename = "iterators.nim";
      var i_536871055 = 0;
      Label2: {
        F.line = 24;
          Label3: while (true) {
          if (!(i_536871055 < (a_1191182491).length)) break Label3;
            F.line = 1666;
            F.filename = "system.nim";
            i_1191182497 = a_1191182491[chckIndx(i_536871055, 0, (a_1191182491).length - 1)];
            if ((i_1191182497 == item_1191182492)) {
            F.line = 1667;
            break BeforeRet;
            }
            
            F.line = 1666;
            result_1191182493 = addInt(result_1191182493, 1);
            F.line = 26;
            F.filename = "iterators.nim";
            i_536871055 = addInt(i_536871055, 1);
          }
      };
    };
    F.line = 1669;
    F.filename = "system.nim";
    result_1191182493 = (-1);
  };
  framePtr = F.prev;

  return result_1191182493;

}

function contains_1191182483(a_1191182485, item_1191182486) {
  var result_1191182487 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1683;
    F.filename = "system.nim";
    result_1191182487 = (0 <= find_1191182488(a_1191182485, item_1191182486));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1191182487;

}

function backquote_1191182421(s_1191182422, force_1191182423) {
  var result_1191182424 = [];

  var F = {procname: "types.backquote", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/types.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 85;
    F.filename = "types.nim";
    Label1: {
      F.line = 85;
      var fmtRes_1191182434 = [mnewString(0)];
      F.line = 85;
      fmtRes_1191182434[0].push.apply(fmtRes_1191182434[0], [96]);;
      F.line = 85;
      formatValue_1207959723(fmtRes_1191182434, 0, s_1191182422, []);
      F.line = 85;
      fmtRes_1191182434[0].push.apply(fmtRes_1191182434[0], [96]);;
    };
    result_1191182424 = nimCopy(null, fmtRes_1191182434[0], NTI33554449);
    if (force_1191182423) {
    F.line = 87;
    break BeforeRet;
    }
    
    Label2: {
      F.line = 88;
      var ch_1191182482 = 0;
      F.line = 38;
      F.filename = "iterators.nim";
      var i_536871047 = 0;
      Label3: {
        F.line = 39;
          Label4: while (true) {
          if (!true) break Label4;
            F.line = 88;
            F.filename = "types.nim";
            ch_1191182482 = needQuoteChars_1191182425[chckIndx(i_536871047, 0, (needQuoteChars_1191182425).length - 1)];
            if (contains_1191182483(s_1191182422, ch_1191182482)) {
            F.line = 90;
            break BeforeRet;
            }
            
            if ((4 <= i_536871047)) {
            F.line = 41;
            F.filename = "iterators.nim";
            break Label3;
            }
            
            F.line = 42;
            i_536871047 = addInt(i_536871047, 1);
          }
      };
    };
    Label5: {
      F.line = 91;
      F.filename = "types.nim";
      var keyword_1191182545 = [];
      F.line = 38;
      F.filename = "iterators.nim";
      var i_536871051 = 0;
      Label6: {
        F.line = 39;
          Label7: while (true) {
          if (!true) break Label7;
            F.line = 91;
            F.filename = "types.nim";
            keyword_1191182545 = reservedKeyword_1191182426[chckIndx(i_536871051, 0, (reservedKeyword_1191182426).length - 1)];
            if (eqStrings(s_1191182422, keyword_1191182545)) {
            F.line = 93;
            break BeforeRet;
            }
            
            if ((5 <= i_536871051)) {
            F.line = 41;
            F.filename = "iterators.nim";
            break Label6;
            }
            
            F.line = 42;
            i_536871051 = addInt(i_536871051, 1);
          }
      };
    };
    F.line = 94;
    F.filename = "types.nim";
    result_1191182424 = nimCopy(null, s_1191182422, NTI33554449);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1191182424;

}

function backquote_1191182578(self_1191182579, force_1191182580) {
  var result_1191182581 = ({name: [], fields: [], isRef: false, isNilType: false, isPublic: false, isNormalized: false, isBackquoted: false, primitiveType: [], isSeq: false});

  var F = {procname: "types.backquote", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/types.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 97;
    F.filename = "types.nim";
    result_1191182581 = nimCopy(result_1191182581, self_1191182579, NTI1191182339);
    if (self_1191182579.isBackquoted) {
    F.line = 99;
    break BeforeRet;
    }
    
    F.line = 101;
    result_1191182581.isBackquoted = true;
    F.line = 102;
    result_1191182581.name = nimCopy(null, backquote_1191182421(result_1191182581.name, force_1191182580), NTI33554449);
  };
  framePtr = F.prev;

  return result_1191182581;

}

function newObjectDefinition_1191182586(name_1191182587, isNilType_1191182588, isPublic_1191182589, forceBackquote_1191182590, primitiveType_1191182591, isSeq_1191182592) {
  var result_1191182593 = ({name: [], fields: [], isRef: false, isNilType: false, isPublic: false, isNormalized: false, isBackquoted: false, primitiveType: [], isSeq: false});

  var F = {procname: "types.newObjectDefinition", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/types.nim", line: 0};
  framePtr = F;
    F.line = 117;
    F.filename = "types.nim";
    result_1191182593.name = nimCopy(null, name_1191182587, NTI33554449);
    F.line = 118;
    result_1191182593.isRef = true;
    F.line = 119;
    result_1191182593.isNilType = isNilType_1191182588;
    F.line = 120;
    result_1191182593.isPublic = isPublic_1191182589;
    F.line = 121;
    result_1191182593.primitiveType = nimCopy(null, primitiveType_1191182591, NTI33554449);
    F.line = 122;
    result_1191182593.isSeq = isSeq_1191182592;
    F.line = 123;
    result_1191182593 = nimCopy(result_1191182593, normalize_1191182391(result_1191182593), NTI1191182339);
    F.line = 124;
    result_1191182593 = nimCopy(result_1191182593, backquote_1191182578(result_1191182593, forceBackquote_1191182590), NTI1191182339);
  framePtr = F.prev;

  return result_1191182593;

}

function nsuToUpperAsciiChar(c_939524200) {
  var result_939524201 = 0;

  var F = {procname: "strutils.toUpperAscii", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    if ((ConstSet11[c_939524200] != undefined)) {
    F.line = 255;
    F.filename = "strutils.nim";
    result_939524201 = (c_939524200 ^ 32);
    }
    else {
      F.line = 257;
      result_939524201 = c_939524200;
    }
    
  framePtr = F.prev;

  return result_939524201;

}

function headUpper_1241513986(str_1241513987) {
  var result_1241513988 = [];

  var F = {procname: "utils.headUpper", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/utils.nim", line: 0};
  framePtr = F;
    F.line = 4;
    F.filename = "utils.nim";
    result_1241513988 = nimCopy(null, [nsuToUpperAsciiChar(str_1241513987[chckIndx(0, 0, (str_1241513987).length - 1)])].concat(HEX5BHEX5D_939525403(str_1241513987, HEX2EHEX2E_973078632(1, 1)) || []), NTI33554449);
  framePtr = F.prev;

  return result_1241513988;

}

function len_1258291501(t_1258291504) {
  var result_1258291505 = 0;

  var F = {procname: "len.len", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 1513;
    F.filename = "tables.nim";
    result_1258291505 = t_1258291504.counter;
  framePtr = F.prev;

  return result_1258291505;

}

function find_973078582(a_973078585, item_973078586) {
  var result_973078587 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1665;
    F.filename = "system.nim";
    result_973078587 = 0;
    Label1: {
      F.line = 1666;
      var i_973078591 = [];
      F.line = 13;
      F.filename = "iterators.nim";
      var i_536871059 = 0;
      Label2: {
        F.line = 14;
          Label3: while (true) {
          if (!(i_536871059 < (a_973078585).length)) break Label3;
            F.line = 1666;
            F.filename = "system.nim";
            i_973078591 = a_973078585[chckIndx(i_536871059, 0, (a_973078585).length - 1)];
            if (eqStrings(i_973078591, item_973078586)) {
            F.line = 1667;
            break BeforeRet;
            }
            
            F.line = 1666;
            result_973078587 = addInt(result_973078587, 1);
            F.line = 16;
            F.filename = "iterators.nim";
            i_536871059 = addInt(i_536871059, 1);
          }
      };
    };
    F.line = 1669;
    F.filename = "system.nim";
    result_973078587 = (-1);
  };
  framePtr = F.prev;

  return result_973078587;

}

function contains_973078577(a_973078579, item_973078580) {
  var result_973078581 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1683;
    F.filename = "system.nim";
    result_973078581 = (0 <= find_973078582(a_973078579, item_973078580));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_973078581;

}

function hasRef_1258291363(prop_1258291364) {
  var result_1258291365 = false;

  var F = {procname: "json_schema_parser.hasRef", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/json_schema_parser.nim", line: 0};
  framePtr = F;
    F.line = 62;
    F.filename = "json_schema_parser.nim";
    result_1258291365 = !(eqStrings(prop_1258291364.$ref, []));
  framePtr = F.prev;

  return result_1258291365;

}

function getRefTypeName_1258291414(prop_1258291415, propName_1258291416) {
    var Temporary1;

  var result_1258291417 = [];

  var F = {procname: "json_schema_parser.getRefTypeName", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/json_schema_parser.nim", line: 0};
  framePtr = F;
    F.line = 81;
    F.filename = "json_schema_parser.nim";
    var s_1258291418 = nimCopy(null, prop_1258291415.$ref, NTI33554449);
    F.line = 83;
    if (eqStrings(s_1258291418, [35])) {
    Temporary1 = headUpper_1241513986(propName_1258291416);
    }
    else {
    if (nsuStartsWith(s_1258291418, [35,47,36,100,101,102,115,47])) {
    Temporary1 = HEX5BHEX5D_939525403(s_1258291418, HEX2EHEX2E_973078632(8, 1));
    }
    else {
      Label2: {
        F.line = 86;
        var fmtRes_1258291440 = [mnewString(0)];
        F.line = 86;
        fmtRes_1258291440[0].push.apply(fmtRes_1258291440[0], [110,105,109,106,115,111,110,32,115,117,112,112,111,114,116,115,32,111,110,108,121,32,108,111,99,97,108,32,114,101,102,32,39,35,47,36,100,101,102,115,47,60,110,97,109,101,62,39,46,32,36,114,101,102,32,61,32]);;
        F.line = 86;
        formatValue_1207959723(fmtRes_1258291440, 0, s_1258291418, []);
      };
      F.line = 85;
      raiseException({message: nimCopy(null, fmtRes_1258291440[0], NTI33554449), parent: null, m_type: NTI1191182342, name: null, trace: [], up: null}, "UnsupportedRefError");
    }
    }
    result_1258291417 = nimCopy(null, Temporary1, NTI33554449);
    F.line = 87;
    result_1258291417 = nimCopy(null, headUpper_1241513986(result_1258291417), NTI33554449);
  framePtr = F.prev;

  return result_1258291417;

}

function typeToNimTypeName_1258291366(typ_1258291367) {
    var Temporary1;

  var result_1258291368 = [];

  var F = {procname: "json_schema_parser.typeToNimTypeName", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/json_schema_parser.nim", line: 0};
  framePtr = F;
    F.line = 65;
    F.filename = "json_schema_parser.nim";
    F.line = 66;
    switch (toJSStr(typ_1258291367)) {
    case "string":
      Temporary1 = [115,116,114,105,110,103];
      break;
    case "integer":
      Temporary1 = [105,110,116,54,52];
      break;
    case "number":
      Temporary1 = [102,108,111,97,116,54,52];
      break;
    case "boolean":
      Temporary1 = [98,111,111,108];
      break;
    case "null":
      Temporary1 = [78,105,108,84,121,112,101];
      break;
    default: 
      Label2: {
        F.line = 73;
        var fmtRes_1258291372 = [mnewString(0)];
        F.line = 73;
        formatValue_1207959723(fmtRes_1258291372, 0, typ_1258291367, []);
        F.line = 73;
        fmtRes_1258291372[0].push.apply(fmtRes_1258291372[0], makeNimstrLit(" is not supported type. type must be string, integer, number, boolean, or null."));;
      };
      F.line = 72;
      raiseException({message: nimCopy(null, fmtRes_1258291372[0], NTI33554449), parent: null, m_type: NTI1191182341, name: null, trace: [], up: null}, "UnsupportedTypeError");
      break;
    }
    result_1258291368 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_1258291368;

}

function getPropertyType_1258291410(prop_1258291411, propName_1258291412) {
    var Temporary1;

  var result_1258291413 = [];

  var F = {procname: "json_schema_parser.getPropertyType", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/json_schema_parser.nim", line: 0};
  framePtr = F;
    F.line = 76;
    F.filename = "json_schema_parser.nim";
    if (isTypeObject_1258291357(prop_1258291411)) {
    Temporary1 = headUpper_1241513986(propName_1258291412);
    }
    else {
    if (isTypeArray_1258291360(prop_1258291411)) {
    Temporary1 = prop_1258291411.items.type;
    }
    else {
    Temporary1 = typeToNimTypeName_1258291366(prop_1258291411.type);
    }
    }
    result_1258291413 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_1258291413;

}

function normalize_1191182418(self_1191182419) {
  var result_1191182420 = ({name: [], typ: [], isPublic: false, isNormalized: false, isBackquoted: false, isSeq: false, isOption: false});

  var F = {procname: "types.normalize", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/types.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 47;
    F.filename = "types.nim";
    result_1191182420 = nimCopy(result_1191182420, self_1191182419, NTI1191182340);
    if (self_1191182419.isNormalized) {
    F.line = 49;
    break BeforeRet;
    }
    
    F.line = 51;
    result_1191182420.isNormalized = true;
    F.line = 52;
    result_1191182420.name = nimCopy(null, removeUnusedChars_1191182388(result_1191182420.name), NTI33554449);
    F.line = 53;
    result_1191182420.typ = nimCopy(null, removeUnusedChars_1191182388(result_1191182420.typ), NTI33554449);
  };
  framePtr = F.prev;

  return result_1191182420;

}

function backquote_1191182582(self_1191182583, force_1191182584) {
  var result_1191182585 = ({name: [], typ: [], isPublic: false, isNormalized: false, isBackquoted: false, isSeq: false, isOption: false});

  var F = {procname: "types.backquote", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/types.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 107;
    F.filename = "types.nim";
    result_1191182585 = nimCopy(result_1191182585, self_1191182583, NTI1191182340);
    if (self_1191182583.isBackquoted) {
    F.line = 109;
    break BeforeRet;
    }
    
    F.line = 111;
    result_1191182585.isBackquoted = true;
    F.line = 112;
    result_1191182585.name = nimCopy(null, backquote_1191182421(result_1191182585.name, force_1191182584), NTI33554449);
    F.line = 113;
    result_1191182585.typ = nimCopy(null, backquote_1191182421(result_1191182585.typ, force_1191182584), NTI33554449);
  };
  framePtr = F.prev;

  return result_1191182585;

}

function newFieldDefinition_1191182598(name_1191182599, typ_1191182600, isPublic_1191182601, forceBackquote_1191182602, isSeq_1191182603, isOption_1191182604) {
  var result_1191182605 = ({name: [], typ: [], isPublic: false, isNormalized: false, isBackquoted: false, isSeq: false, isOption: false});

  var F = {procname: "types.newFieldDefinition", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/types.nim", line: 0};
  framePtr = F;
    F.line = 132;
    F.filename = "types.nim";
    result_1191182605.name = nimCopy(null, name_1191182599, NTI33554449);
    F.line = 133;
    result_1191182605.typ = nimCopy(null, typ_1191182600, NTI33554449);
    F.line = 134;
    result_1191182605.isPublic = isPublic_1191182601;
    F.line = 135;
    result_1191182605.isSeq = isSeq_1191182603;
    F.line = 136;
    result_1191182605.isOption = isOption_1191182604;
    F.line = 137;
    result_1191182605 = nimCopy(result_1191182605, normalize_1191182418(result_1191182605), NTI1191182340);
    F.line = 138;
    result_1191182605 = nimCopy(result_1191182605, backquote_1191182582(result_1191182605, forceBackquote_1191182602), NTI1191182340);
  framePtr = F.prev;

  return result_1191182605;

}

function addFieldDefinition_1191182359(self_1191182360, fieldDef_1191182361) {
  var F = {procname: "types.addFieldDefinition", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/types.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "types.nim";
    var Temporary1 = nimCopy(null, fieldDef_1191182361, NTI1191182340);
    self_1191182360.fields.push(Temporary1);;
  framePtr = F.prev;

  
}

function parse_1258291442(parser_1258291443, property_1258291444, objectName_1258291445) {
    var Temporary1;
            var Temporary6;

  var F = {procname: "json_schema_parser.parse", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/json_schema_parser.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(isTypeObject_1258291357(property_1258291444))) {
    F.line = 92;
    F.filename = "json_schema_parser.nim";
    if (isTypeArray_1258291360(property_1258291444)) {
    Temporary1 = property_1258291444.items.type;
    }
    else {
    Temporary1 = property_1258291444.type;
    }
    
    var typ_1258291446 = nimCopy(null, Temporary1, NTI33554449);
    F.line = 95;
    var objDef_1258291447 = newObjectDefinition_1191182586(headUpper_1241513986(objectName_1258291445), false, parser_1258291443.isPublic, parser_1258291443.forceBackquote, typ_1258291446, isTypeArray_1258291360(property_1258291444));
    F.line = 97;
    var Temporary2 = nimCopy(null, objDef_1258291447, NTI1191182339);
    parser_1258291443.defs.push(Temporary2);;
    F.line = 98;
    break BeforeRet;
    }
    
    F.line = 100;
    var objDef_1258291452 = [newObjectDefinition_1191182586(headUpper_1241513986(objectName_1258291445), false, parser_1258291443.isPublic, parser_1258291443.forceBackquote, [], false)];
    Label3: {
      F.line = 102;
      var propName_1258291791 = [];
      F.line = 102;
      var prop_1258291792 = null;
      F.line = 1721;
      F.filename = "tables.nim";
      var L_536871019 = len_1258291501(property_1258291444.properties);
      if ((0 < property_1258291444.properties.counter)) {
      F.line = 1303;
      var h_536871020 = property_1258291444.properties.first;
      Label4: {
        F.line = 1304;
          Label5: while (true) {
          if (!(0 <= h_536871020)) break Label5;
            F.line = 1305;
            var nxt_536871022 = property_1258291444.properties.data[chckIndx(h_536871020, 0, (property_1258291444.properties.data).length - 1)].Field1;
            if (isFilled_754974751(property_1258291444.properties.data[chckIndx(h_536871020, 0, (property_1258291444.properties.data).length - 1)].Field0)) {
            F.line = 102;
            F.filename = "json_schema_parser.nim";
            propName_1258291791 = property_1258291444.properties.data[chckIndx(h_536871020, 0, (property_1258291444.properties.data).length - 1)].Field2;
            F.line = 102;
            prop_1258291792 = property_1258291444.properties.data[chckIndx(h_536871020, 0, (property_1258291444.properties.data).length - 1)].Field3;
            F.line = 103;
            var isOption_1258291797 = (!(parser_1258291443.disableOptionType) && !(contains_973078577(property_1258291444.required, propName_1258291791)));
            F.line = 105;
            if (hasRef_1258291363(prop_1258291792)) {
            Temporary6 = getRefTypeName_1258291414(prop_1258291792, propName_1258291791);
            }
            else {
            Temporary6 = getPropertyType_1258291410(prop_1258291792, propName_1258291791);
            }
            
            var typ_1258291798 = nimCopy(null, Temporary6, NTI33554449);
            F.line = 108;
            var fDef_1258291799 = newFieldDefinition_1191182598(propName_1258291791, typ_1258291798, parser_1258291443.isPublic, parser_1258291443.forceBackquote, isTypeArray_1258291360(prop_1258291792), isOption_1258291797);
            F.line = 102;
            addFieldDefinition_1191182359(objDef_1258291452[0], fDef_1258291799);
            if (isTypeObject_1258291357(prop_1258291792)) {
            F.line = 112;
            var p_1258291800 = newProperty_1258291289(prop_1258291792.description, prop_1258291792.type, prop_1258291792.required, prop_1258291792.properties, prop_1258291792.$ref);
            F.line = 119;
            parse_1258291442(parser_1258291443, p_1258291800, typ_1258291798);
            }
            
            if (!((len_1258291501(property_1258291444.properties) == L_536871019))) {
            F.line = 1724;
            F.filename = "tables.nim";
            failedAssertImpl_268435541(makeNimstrLit("/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim(1724, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            F.line = 1308;
            h_536871020 = nxt_536871022;
          }
      };
      }
      
    };
    F.line = 120;
    F.filename = "json_schema_parser.nim";
    var Temporary7 = nimCopy(null, objDef_1258291452[0], NTI1191182339);
    parser_1258291443.defs.push(Temporary7);;
  };
  framePtr = F.prev;

  
}

function add_1191182746(x_1191182748, x_1191182748_Idx, y_1191182749) {
    var Temporary1;

  var F = {procname: "add.add", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1204;
    F.filename = "system.nim";
    var xl_1191182753 = (x_1191182748[x_1191182748_Idx]).length;
    F.line = 1205;
    if (x_1191182748[x_1191182748_Idx].length < (Temporary1 = chckRange(addInt(xl_1191182753, (y_1191182749).length), 0, 2147483647), Temporary1)) { for (var i = x_1191182748[x_1191182748_Idx].length ; i < Temporary1 ; ++i) x_1191182748[x_1191182748_Idx].push([]); }
               else { x_1191182748[x_1191182748_Idx].length = Temporary1; };
    Label2: {
      F.line = 1206;
      var i_1191182768 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536871069 = 0;
      F.line = 1206;
      F.filename = "system.nim";
      colontmp__536871069 = (y_1191182749).length - 1;
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536871070 = 0;
      Label3: {
        F.line = 91;
          Label4: while (true) {
          if (!(res_536871070 <= colontmp__536871069)) break Label4;
            F.line = 1206;
            F.filename = "system.nim";
            i_1191182768 = res_536871070;
            F.line = 1206;
            x_1191182748[x_1191182748_Idx][chckIndx(addInt(xl_1191182753, i_1191182768), 0, (x_1191182748[x_1191182748_Idx]).length - 1)] = nimCopy(null, y_1191182749[chckIndx(i_1191182768, 0, (y_1191182749).length - 1)], NTI33554449);
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536871070 = addInt(res_536871070, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function toPublicMark_1191182606(enable_1191182607) {
    var Temporary1;

  var result_1191182608 = [];

  var F = {procname: "types.toPublicMark", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/types.nim", line: 0};
  framePtr = F;
    F.line = 141;
    F.filename = "types.nim";
    if (enable_1191182607) {
    Temporary1 = [42];
    }
    else {
    Temporary1 = [];
    }
    
    result_1191182608 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_1191182608;

}

function toDefinitionStringLines_1191182609(self_1191182610) {
    var Temporary1;
            var Temporary11;

  var result_1191182611 = [];

  var F = {procname: "types.toDefinitionStringLines", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/types.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 145;
    F.filename = "types.nim";
    var publicMark_1191182612 = toPublicMark_1191182606(self_1191182610.isPublic);
    F.line = 146;
    if (self_1191182610.isRef) {
    Temporary1 = [114,101,102];
    }
    else {
    Temporary1 = [];
    }
    
    var refStr_1191182613 = nimCopy(null, Temporary1, NTI33554449);
    if (self_1191182610.isNilType) {
    F.line = 151;
    Label2: {
      F.line = 151;
      var fmtRes_1191182617 = [mnewString(0)];
      F.line = 151;
      fmtRes_1191182617[0].push.apply(fmtRes_1191182617[0], [32,32,78,105,108,84,121,112,101]);;
      F.line = 151;
      formatValue_1207959723(fmtRes_1191182617, 0, publicMark_1191182612, []);
      F.line = 151;
      fmtRes_1191182617[0].push.apply(fmtRes_1191182617[0], [32,61,32]);;
      F.line = 151;
      formatValue_1207959723(fmtRes_1191182617, 0, refStr_1191182613, []);
      F.line = 151;
      fmtRes_1191182617[0].push.apply(fmtRes_1191182617[0], [32,111,98,106,101,99,116]);;
    };
    result_1191182611 = nimCopy(null, [nimCopy(null, fmtRes_1191182617[0], NTI33554449)], NTI1191182490);
    break BeforeRet;
    }
    
    if (!(eqStrings(self_1191182610.primitiveType, []))) {
    F.line = 154;
    var objectName_1191182622 = nimCopy(null, self_1191182610.name, NTI33554449);
    F.line = 155;
    var typ_1191182623 = nimCopy(null, self_1191182610.primitiveType, NTI33554449);
    if (self_1191182610.isSeq) {
    F.line = 157;
    Label3: {
      F.line = 157;
      var fmtRes_1191182627 = [mnewString(0)];
      F.line = 157;
      fmtRes_1191182627[0].push.apply(fmtRes_1191182627[0], [115,101,113,91]);;
      F.line = 157;
      formatValue_1207959723(fmtRes_1191182627, 0, typ_1191182623, []);
      F.line = 157;
      fmtRes_1191182627[0].push.apply(fmtRes_1191182627[0], [93]);;
    };
    typ_1191182623 = nimCopy(null, fmtRes_1191182627[0], NTI33554449);
    }
    
    F.line = 158;
    Label4: {
      F.line = 158;
      var fmtRes_1191182631 = [mnewString(0)];
      F.line = 158;
      fmtRes_1191182631[0].push.apply(fmtRes_1191182631[0], [32,32]);;
      F.line = 158;
      formatValue_1207959723(fmtRes_1191182631, 0, objectName_1191182622, []);
      F.line = 158;
      formatValue_1207959723(fmtRes_1191182631, 0, publicMark_1191182612, []);
      F.line = 158;
      fmtRes_1191182631[0].push.apply(fmtRes_1191182631[0], [32,61,32]);;
      F.line = 158;
      formatValue_1207959723(fmtRes_1191182631, 0, typ_1191182623, []);
    };
    result_1191182611 = nimCopy(null, [nimCopy(null, fmtRes_1191182631[0], NTI33554449)], NTI1191182490);
    break BeforeRet;
    }
    
    Label5: {
      F.line = 161;
      var objectName_1191182636 = nimCopy(null, self_1191182610.name, NTI33554449);
      F.line = 162;
      Label6: {
        F.line = 162;
        var fmtRes_1191182640 = [mnewString(0)];
        F.line = 162;
        fmtRes_1191182640[0].push.apply(fmtRes_1191182640[0], [32,32]);;
        F.line = 162;
        formatValue_1207959723(fmtRes_1191182640, 0, objectName_1191182636, []);
        F.line = 162;
        formatValue_1207959723(fmtRes_1191182640, 0, publicMark_1191182612, []);
        F.line = 162;
        fmtRes_1191182640[0].push.apply(fmtRes_1191182640[0], [32,61,32]);;
        F.line = 162;
        formatValue_1207959723(fmtRes_1191182640, 0, refStr_1191182613, []);
        F.line = 162;
        fmtRes_1191182640[0].push.apply(fmtRes_1191182640[0], [32,111,98,106,101,99,116]);;
      };
      var Temporary7 = nimCopy(null, fmtRes_1191182640[0], NTI33554449);
      result_1191182611.push(Temporary7);;
    };
    Label8: {
      F.line = 164;
      var field_1191182667 = ({name: [], typ: [], isPublic: false, isNormalized: false, isBackquoted: false, isSeq: false, isOption: false});
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536871082 = 0;
      F.line = 242;
      var L_536871083 = (self_1191182610.fields).length;
      Label9: {
        F.line = 243;
          Label10: while (true) {
          if (!(i_536871082 < L_536871083)) break Label10;
            F.line = 164;
            F.filename = "types.nim";
            field_1191182667 = self_1191182610.fields[chckIndx(i_536871082, 0, (self_1191182610.fields).length - 1)];
            F.line = 165;
            var fieldName_1191182668 = nimCopy(null, field_1191182667.name, NTI33554449);
            F.line = 166;
            var publicMark_1191182669 = toPublicMark_1191182606(field_1191182667.isPublic);
            F.line = 167;
            if (field_1191182667.isSeq) {
            Label12: {
              F.line = 168;
              var fmtRes_1191182673 = [mnewString(0)];
              F.line = 168;
              fmtRes_1191182673[0].push.apply(fmtRes_1191182673[0], [115,101,113,91]);;
              F.line = 168;
              formatValue_1207959723(fmtRes_1191182673, 0, field_1191182667.typ, []);
              F.line = 168;
              fmtRes_1191182673[0].push.apply(fmtRes_1191182673[0], [93]);;
            };
            Temporary11 = fmtRes_1191182673[0];
            }
            else {
            Temporary11 = field_1191182667.typ;
            }
            
            var typeName_1191182674 = nimCopy(null, Temporary11, NTI33554449);
            if (field_1191182667.isOption) {
            F.line = 171;
            Label13: {
              F.line = 171;
              var fmtRes_1191182678 = [mnewString(0)];
              F.line = 171;
              fmtRes_1191182678[0].push.apply(fmtRes_1191182678[0], [79,112,116,105,111,110,91]);;
              F.line = 171;
              formatValue_1207959723(fmtRes_1191182678, 0, typeName_1191182674, []);
              F.line = 171;
              fmtRes_1191182678[0].push.apply(fmtRes_1191182678[0], [93]);;
            };
            typeName_1191182674 = nimCopy(null, fmtRes_1191182678[0], NTI33554449);
            }
            
            F.line = 164;
            Label14: {
              F.line = 172;
              var fmtRes_1191182682 = [mnewString(0)];
              F.line = 172;
              fmtRes_1191182682[0].push.apply(fmtRes_1191182682[0], [32,32,32,32]);;
              F.line = 172;
              formatValue_1207959723(fmtRes_1191182682, 0, fieldName_1191182668, []);
              F.line = 172;
              formatValue_1207959723(fmtRes_1191182682, 0, publicMark_1191182669, []);
              F.line = 172;
              fmtRes_1191182682[0].push.apply(fmtRes_1191182682[0], [58,32]);;
              F.line = 172;
              formatValue_1207959723(fmtRes_1191182682, 0, typeName_1191182674, []);
            };
            var Temporary15 = nimCopy(null, fmtRes_1191182682[0], NTI33554449);
            result_1191182611.push(Temporary15);;
            F.line = 245;
            F.filename = "iterators.nim";
            i_536871082 = addInt(i_536871082, 1);
            if (!(((self_1191182610.fields).length == L_536871083))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };
  framePtr = F.prev;

  return result_1191182611;

}

function nsuJoinSep(a_939525675, sep_939525676) {
  var result_939525677 = [];

  var F = {procname: "strutils.join", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    if ((0 < (a_939525675).length)) {
    F.line = 1845;
    F.filename = "strutils.nim";
    var L_939525684 = mulInt((sep_939525676).length, subInt((a_939525675).length, 1));
    Label1: {
      F.line = 1846;
      var i_939525692 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536871086 = 0;
      F.line = 1846;
      F.filename = "strutils.nim";
      colontmp__536871086 = (a_939525675).length - 1;
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536871087 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_536871087 <= colontmp__536871086)) break Label3;
            F.line = 1846;
            F.filename = "strutils.nim";
            i_939525692 = res_536871087;
            F.line = 1846;
            L_939525684 = addInt(L_939525684, (a_939525675[chckIndx(i_939525692, 0, (a_939525675).length - 1)]).length);
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536871087 = addInt(res_536871087, 1);
          }
      };
    };
    F.line = 1847;
    F.filename = "strutils.nim";
    result_939525677 = nimCopy(null, mnewString(0), NTI33554449);
    F.line = 1848;
    result_939525677.push.apply(result_939525677, a_939525675[chckIndx(0, 0, (a_939525675).length - 1)]);;
    Label4: {
      F.line = 1849;
      var i_939525705 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536871090 = 0;
      F.line = 1849;
      F.filename = "strutils.nim";
      colontmp__536871090 = (a_939525675).length - 1;
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536871091 = 1;
      Label5: {
        F.line = 91;
          Label6: while (true) {
          if (!(res_536871091 <= colontmp__536871090)) break Label6;
            F.line = 1849;
            F.filename = "strutils.nim";
            i_939525705 = res_536871091;
            F.line = 1849;
            result_939525677.push.apply(result_939525677, sep_939525676);;
            F.line = 1849;
            result_939525677.push.apply(result_939525677, a_939525675[chckIndx(i_939525705, 0, (a_939525675).length - 1)]);;
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536871091 = addInt(res_536871091, 1);
          }
      };
    };
    }
    else {
      F.line = 1853;
      F.filename = "strutils.nim";
      result_939525677 = nimCopy(null, [], NTI33554449);
    }
    
  framePtr = F.prev;

  return result_939525677;

}

function toDefinitionString_1191182719(self_1191182720) {
  var result_1191182721 = [];

  var F = {procname: "types.toDefinitionString", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/types.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 175;
    F.filename = "types.nim";
    var lines_1191182722 = [[]];
    Label1: {
      F.line = 177;
      var objDef_1191182745 = ({name: [], fields: [], isRef: false, isNilType: false, isPublic: false, isNormalized: false, isBackquoted: false, primitiveType: [], isSeq: false});
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536871065 = 0;
      F.line = 242;
      var L_536871066 = (self_1191182720).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536871065 < L_536871066)) break Label3;
            F.line = 177;
            F.filename = "types.nim";
            objDef_1191182745 = self_1191182720[chckIndx(i_536871065, 0, (self_1191182720).length - 1)];
            F.line = 177;
            add_1191182746(lines_1191182722, 0, toDefinitionStringLines_1191182609(objDef_1191182745));
            F.line = 245;
            F.filename = "iterators.nim";
            i_536871065 = addInt(i_536871065, 1);
            if (!(((self_1191182720).length == L_536871066))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 180;
    F.filename = "types.nim";
    result_1191182721 = nimCopy(null, nsuJoinSep(lines_1191182722[0], [10]), NTI33554449);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1191182721;

}

function parseAndGetString_1258291805(s_1258291806, objectName_1258291807, isPublic_1258291808, forceBackquote_1258291809, disableOptionType_1258291810) {
  var result_1258291811 = [];

  var F = {procname: "json_schema_parser.parseAndGetString", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/json_schema_parser.nim", line: 0};
  framePtr = F;
    F.line = 124;
    F.filename = "json_schema_parser.nim";
    var parser_1258291812 = [{isPublic: isPublic_1258291808, forceBackquote: forceBackquote_1258291809, disableOptionType: disableOptionType_1258291810, defs: []}];
    F.line = 130;
    var schema_1258294112 = fromJson_1258291813(s_1258291806);
    F.line = 131;
    var property_1258294113 = newProperty_1258291289(schema_1258294112.description, schema_1258294112.type, schema_1258294112.required, schema_1258294112.properties, []);
    F.line = 138;
    parse_1258291442(parser_1258291812[0], property_1258294113, objectName_1258291807);
    Label1: {
      F.line = 140;
      var propName_1258294118 = [];
      F.line = 140;
      var prop_1258294119 = null;
      F.line = 1721;
      F.filename = "tables.nim";
      var L_536870921 = len_1258291501(schema_1258294112.$defs);
      if ((0 < schema_1258294112.$defs.counter)) {
      F.line = 1303;
      var h_536870922 = schema_1258294112.$defs.first;
      Label2: {
        F.line = 1304;
          Label3: while (true) {
          if (!(0 <= h_536870922)) break Label3;
            F.line = 1305;
            var nxt_536870924 = schema_1258294112.$defs.data[chckIndx(h_536870922, 0, (schema_1258294112.$defs.data).length - 1)].Field1;
            if (isFilled_754974751(schema_1258294112.$defs.data[chckIndx(h_536870922, 0, (schema_1258294112.$defs.data).length - 1)].Field0)) {
            F.line = 140;
            F.filename = "json_schema_parser.nim";
            propName_1258294118 = schema_1258294112.$defs.data[chckIndx(h_536870922, 0, (schema_1258294112.$defs.data).length - 1)].Field2;
            F.line = 140;
            prop_1258294119 = schema_1258294112.$defs.data[chckIndx(h_536870922, 0, (schema_1258294112.$defs.data).length - 1)].Field3;
            F.line = 140;
            parse_1258291442(parser_1258291812[0], prop_1258294119, propName_1258294118);
            if (!((len_1258291501(schema_1258294112.$defs) == L_536870921))) {
            F.line = 1724;
            F.filename = "tables.nim";
            failedAssertImpl_268435541(makeNimstrLit("/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim(1724, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            F.line = 1308;
            h_536870922 = nxt_536870924;
          }
      };
      }
      
    };
    F.line = 143;
    F.filename = "json_schema_parser.nim";
    result_1258291811.push.apply(result_1258291811, [116,121,112,101,10]);;
    F.line = 144;
    result_1258291811.push.apply(result_1258291811, toDefinitionString_1191182719(parser_1258291812[0].defs));;
  framePtr = F.prev;

  return result_1258291811;

}

function initTable_1174406675(initialSize_1174406678) {
  var result_1174406679 = ({data: [], counter: 0});

  var F = {procname: "initTable.initTable", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym14_1174406681 = slotsNeeded_754974762(chckRange(initialSize_1174406678, 0, 2147483647));
    F.line = 169;
    result_1174406679.counter = 0;
    F.line = 170;
    result_1174406679.data = new Array(chckRange(correctSizeHEX60gensym14_1174406681, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym14_1174406681, 0, 2147483647) ; ++i) { result_1174406679.data[i] = {Field0: 0, Field1: [], Field2: false}; }  framePtr = F.prev;

  return result_1174406679;

}

function reprEnum(e_33557576, typ_33557577) {
  var result_33557578 = [];

  var F = {procname: "system.reprEnum", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system/reprjs.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "reprjs.nim";
    var tmp_33557579 = false;
    F.line = 31;
    var item_33557580 = typ_33557577.node.sons[e_33557576];
    F.line = 32;
    tmp_33557579 = item_33557580 !== undefined
    if (tmp_33557579) {
    F.line = 34;
    result_33557578 = nimCopy(null, makeNimstrLit(item_33557580.name), NTI33554449);
    }
    else {
      F.line = 36;
      result_33557578 = nimCopy(null, (HEX24_369098760(e_33557576) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    
  framePtr = F.prev;

  return result_33557578;

}

function len_687868116(t_687868119) {
  var result_687868120 = 0;

  var F = {procname: "len.len", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 1513;
    F.filename = "tables.nim";
    result_687868120 = t_687868119.counter;
  framePtr = F.prev;

  return result_687868120;

}

function rawGet_1174405186(t_1174405189, key_1174405190, hc_1174405191, hc_1174405191_Idx) {
  var result_1174405192 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 59;
    F.filename = "hashcommon.nim";
    hc_1174405191[hc_1174405191_Idx] = hash_704643567(key_1174405190);
    if ((hc_1174405191[hc_1174405191_Idx] == 0)) {
    F.line = 61;
    hc_1174405191[hc_1174405191_Idx] = 314159265;
    }
    
    if (((t_1174405189.data).length == 0)) {
    F.line = 43;
    result_1174405192 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_1174405244 = (hc_1174405191[hc_1174405191_Idx] & (t_1174405189.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_754974751(t_1174405189.data[chckIndx(h_1174405244, 0, (t_1174405189.data).length - 1)].Field0)) break Label2;
          if (((t_1174405189.data[chckIndx(h_1174405244, 0, (t_1174405189.data).length - 1)].Field0 == hc_1174405191[hc_1174405191_Idx]) && eqStrings(t_1174405189.data[chckIndx(h_1174405244, 0, (t_1174405189.data).length - 1)].Field1, key_1174405190))) {
          F.line = 51;
          result_1174405192 = h_1174405244;
          break BeforeRet;
          }
          
          F.line = 52;
          h_1174405244 = nextTry_754974754(h_1174405244, (t_1174405189.data).length - 1);
        }
    };
    F.line = 53;
    result_1174405192 = subInt((-1), h_1174405244);
  };
  framePtr = F.prev;

  return result_1174405192;

}

function hasKey_1174405179(t_1174405182, key_1174405183) {
  var result_1174405184 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 372;
    F.filename = "tables.nim";
    var hc_1174405185 = [0];
    F.line = 373;
    result_1174405184 = (0 <= rawGet_1174405186(t_1174405182, key_1174405183, hc_1174405185, 0));
  framePtr = F.prev;

  return result_1174405184;

}

function mustRehash_1174405651(t_1174405653) {
  var result_1174405654 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_1174405653.counter < (t_1174405653.data).length))) {
    F.line = 34;
    F.filename = "hashcommon.nim";
    failedAssertImpl_268435541(makeNimstrLit("/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 35;
    result_1174405654 = ((mulInt((t_1174405653.data).length, 2) < mulInt(t_1174405653.counter, 3)) || (subInt((t_1174405653.data).length, t_1174405653.counter) < 4));
  framePtr = F.prev;

  return result_1174405654;

}

function rawInsert_1174406100(t_1174406104, data_1174406105, data_1174406105_Idx, key_1174406106, val_1174406107, hc_1174406108, h_1174406109) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "tableimpl.nim";
    data_1174406105[data_1174406105_Idx][chckIndx(h_1174406109, 0, (data_1174406105[data_1174406105_Idx]).length - 1)].Field1 = nimCopy(null, key_1174406106, NTI33554449);
    F.line = 26;
    data_1174406105[data_1174406105_Idx][chckIndx(h_1174406109, 0, (data_1174406105[data_1174406105_Idx]).length - 1)].Field2 = val_1174406107;
    F.line = 27;
    data_1174406105[data_1174406105_Idx][chckIndx(h_1174406109, 0, (data_1174406105[data_1174406105_Idx]).length - 1)].Field0 = hc_1174406108;
  framePtr = F.prev;

  
}

function enlarge_1174405806(t_1174405809) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 250;
    F.filename = "tables.nim";
    var n_1174405812 = [];
    F.line = 251;
    n_1174405812 = new Array(chckRange(mulInt((t_1174405809.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1174405809.data).length, 2), 0, 2147483647) ; ++i) { n_1174405812[i] = {Field0: 0, Field1: [], Field2: false}; }    F.line = 252;
    var Temporary1 = t_1174405809.data; t_1174405809.data = n_1174405812; n_1174405812 = Temporary1;    Label2: {
      F.line = 253;
      var i_1174405876 = 0;
      F.line = 43;
      F.filename = "iterators_1.nim";
      var colontmp__536871104 = 0;
      F.line = 253;
      F.filename = "tables.nim";
      colontmp__536871104 = (n_1174405812).length - 1;
      F.line = 65;
      F.filename = "iterators_1.nim";
      var res_536871106 = 0;
      Label3: {
        F.line = 66;
          Label4: while (true) {
          if (!(res_536871106 <= colontmp__536871104)) break Label4;
            F.line = 253;
            F.filename = "tables.nim";
            i_1174405876 = res_536871106;
            F.line = 254;
            var eh_1174405930 = n_1174405812[chckIndx(i_1174405876, 0, (n_1174405812).length - 1)].Field0;
            if (isFilled_754974751(eh_1174405930)) {
            F.line = 256;
            var j_1174405934 = (eh_1174405930 & (t_1174405809.data).length - 1);
            Label5: {
              F.line = 257;
                Label6: while (true) {
                if (!isFilled_754974751(t_1174405809.data[chckIndx(j_1174405934, 0, (t_1174405809.data).length - 1)].Field0)) break Label6;
                  F.line = 258;
                  j_1174405934 = nextTry_754974754(j_1174405934, (t_1174405809.data).length - 1);
                }
            };
            F.line = 260;
            rawInsert_1174406100(t_1174405809, t_1174405809, "data", n_1174405812[chckIndx(i_1174405876, 0, (n_1174405812).length - 1)].Field1, n_1174405812[chckIndx(i_1174405876, 0, (n_1174405812).length - 1)].Field2, eh_1174405930, j_1174405934);
            }
            
            F.line = 68;
            F.filename = "iterators_1.nim";
            res_536871106 = addInt(res_536871106, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function rawGetKnownHC_1174406285(t_1174406288, key_1174406289, hc_1174406290) {
  var result_1174406291 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((t_1174406288.data).length == 0)) {
    F.line = 43;
    F.filename = "hashcommon.nim";
    result_1174406291 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_1174406342 = (hc_1174406290 & (t_1174406288.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_754974751(t_1174406288.data[chckIndx(h_1174406342, 0, (t_1174406288.data).length - 1)].Field0)) break Label2;
          if (((t_1174406288.data[chckIndx(h_1174406342, 0, (t_1174406288.data).length - 1)].Field0 == hc_1174406290) && eqStrings(t_1174406288.data[chckIndx(h_1174406342, 0, (t_1174406288.data).length - 1)].Field1, key_1174406289))) {
          F.line = 51;
          result_1174406291 = h_1174406342;
          break BeforeRet;
          }
          
          F.line = 52;
          h_1174406342 = nextTry_754974754(h_1174406342, (t_1174406288.data).length - 1);
        }
    };
    F.line = 53;
    result_1174406291 = subInt((-1), h_1174406342);
  };
  framePtr = F.prev;

  return result_1174406291;

}

function HEX5BHEX5DHEX3D_1174405478(t_1174405481, key_1174405482, val_1174405483) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_1174405481.data).length == 0)) {
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym3_1174405532 = slotsNeeded_754974762(32);
    F.line = 169;
    t_1174405481.counter = 0;
    F.line = 170;
    t_1174405481.data = new Array(chckRange(correctSizeHEX60gensym3_1174405532, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_1174405532, 0, 2147483647) ; ++i) { t_1174405481.data[i] = {Field0: 0, Field1: [], Field2: false}; }    }
    
    F.line = 59;
    var hc_1174405537 = [0];
    F.line = 60;
    var index_1174405544 = rawGet_1174405186(t_1174405481, key_1174405482, hc_1174405537, 0);
    if ((0 <= index_1174405544)) {
    F.line = 61;
    t_1174405481.data[chckIndx(index_1174405544, 0, (t_1174405481.data).length - 1)].Field2 = val_1174405483;
    }
    else {
      if (((t_1174405481.data).length == 0)) {
      F.line = 165;
      var correctSizeHEX60gensym6_1174405646 = slotsNeeded_754974762(32);
      F.line = 169;
      t_1174405481.counter = 0;
      F.line = 170;
      t_1174405481.data = new Array(chckRange(correctSizeHEX60gensym6_1174405646, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym6_1174405646, 0, 2147483647) ; ++i) { t_1174405481.data[i] = {Field0: 0, Field1: [], Field2: false}; }      }
      
      if (mustRehash_1174405651(t_1174405481)) {
      F.line = 51;
      enlarge_1174405806(t_1174405481);
      F.line = 52;
      index_1174405544 = rawGetKnownHC_1174406285(t_1174405481, key_1174405482, hc_1174405537[0]);
      }
      
      F.line = 53;
      index_1174405544 = subInt((-1), index_1174405544);
      F.line = 54;
      rawInsert_1174406100(t_1174405481, t_1174405481, "data", key_1174405482, val_1174405483, hc_1174405537[0], index_1174405544);
      F.line = 62;
      t_1174405481.counter = addInt(t_1174405481.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function originalOrNumberedTypeName_1174405128(typeNamebuffer_1174405136, typeName_1174405137) {
  var result_1174405138 = [];

  var F = {procname: "parser.originalOrNumberedTypeName", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(hasKey_1174405179(typeNamebuffer_1174405136, typeName_1174405137))) {
    F.line = 20;
    F.filename = "parser.nim";
    HEX5BHEX5DHEX3D_1174405478(typeNamebuffer_1174405136, typeName_1174405137, true);
    F.line = 21;
    result_1174405138 = nimCopy(null, typeName_1174405137, NTI33554449);
    break BeforeRet;
    }
    
    F.line = 22;
    var i_1174406523 = 2;
    F.line = 23;
    result_1174405138 = nimCopy(null, (typeName_1174405137 || []).concat(HEX24_369098760(i_1174406523) || []), NTI33554449);
    Label1: {
      F.line = 24;
        Label2: while (true) {
        if (!hasKey_1174405179(typeNamebuffer_1174405136, result_1174405138)) break Label2;
          F.line = 25;
          i_1174406523 = addInt(i_1174406523, 1);
          F.line = 26;
          result_1174405138 = nimCopy(null, (typeName_1174405137 || []).concat(HEX24_369098760(i_1174406523) || []), NTI33554449);
        }
    };
    F.line = 27;
    HEX5BHEX5DHEX3D_1174405478(typeNamebuffer_1174405136, result_1174405138, true);
  };
  framePtr = F.prev;

  return result_1174405138;

}

function kind2str_1174405125(kind_1174405126) {
    var Temporary1;

  var result_1174405127 = [];

  var F = {procname: "parser.kind2str", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/parser.nim", line: 0};
  framePtr = F;
    F.line = 8;
    F.filename = "parser.nim";
    F.line = 8;
    switch (kind_1174405126) {
    case 4:
      Temporary1 = [115,116,114,105,110,103];
      break;
    case 2:
      Temporary1 = [105,110,116,54,52];
      break;
    case 3:
      Temporary1 = [102,108,111,97,116,54,52];
      break;
    case 1:
      Temporary1 = [98,111,111,108];
      break;
    case 0:
      Temporary1 = [78,105,108,84,121,112,101];
      break;
    default: 
      Temporary1 = [];
      break;
    }
    result_1174405127 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_1174405127;

}

function parse_1174406620(jsonNode_1174406621, defs_1174406622, defs_1174406622_Idx, defIndex_1174406623, objectName_1174406624, isPublic_1174406625, forceBackquote_1174406626, isSeq_1174406627, typeNameBuffer_1174406630) {
        var Temporary2;
                  var Temporary5;
                  var Temporary6;
                    var Temporary7;
                    var Temporary8;
        var Temporary9;
      var Temporary10;
      var Temporary11;

  var F = {procname: "parser.parse", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/parser.nim", line: 0};
  framePtr = F;
    F.line = 34;
    F.filename = "parser.nim";
    switch (jsonNode_1174406621.kind) {
    case 5:
      F.line = 36;
      var defIndex_1174406634 = (defs_1174406622[defs_1174406622_Idx]).length;
      F.line = 37;
      defs_1174406622[defs_1174406622_Idx].push(newObjectDefinition_1191182586(headUpper_1241513986(objectName_1174406624), false, isPublic_1174406625, forceBackquote_1174406626, [], false));;
      Label1: {
        F.line = 39;
        var name_1174406643 = [];
        F.line = 39;
        var node_1174406644 = null;
        F.line = 1695;
        F.filename = "tables.nim";
        var colontmp__536871094 = ({data: [], counter: 0, first: 0, last: 0});
        F.line = 39;
        F.filename = "parser.nim";
        var Temporary2 = jsonNode_1174406621;
        if (ConstSet12[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI687865859)); }
        colontmp__536871094 = nimCopy(colontmp__536871094, Temporary2.fields, NTI687865870);
        F.line = 1721;
        F.filename = "tables.nim";
        var L_536871096 = len_687868116(colontmp__536871094);
        if ((0 < colontmp__536871094.counter)) {
        F.line = 1303;
        var h_536871097 = colontmp__536871094.first;
        Label3: {
          F.line = 1304;
            Label4: while (true) {
            if (!(0 <= h_536871097)) break Label4;
              F.line = 1305;
              var nxt_536871099 = colontmp__536871094.data[chckIndx(h_536871097, 0, (colontmp__536871094.data).length - 1)].Field1;
              if (isFilled_754974751(colontmp__536871094.data[chckIndx(h_536871097, 0, (colontmp__536871094.data).length - 1)].Field0)) {
              F.line = 39;
              F.filename = "parser.nim";
              name_1174406643 = colontmp__536871094.data[chckIndx(h_536871097, 0, (colontmp__536871094.data).length - 1)].Field2;
              F.line = 39;
              node_1174406644 = colontmp__536871094.data[chckIndx(h_536871097, 0, (colontmp__536871094.data).length - 1)].Field3;
              F.line = 40;
              var name_1174406645 = nimCopy(null, name_1174406643, NTI33554449);
              F.line = 39;
              switch (node_1174406644.kind) {
              case 5:
                F.line = 43;
                var srcName_1174406646 = nimCopy(null, name_1174406645, NTI33554449);
                F.line = 44;
                name_1174406645 = nimCopy(null, originalOrNumberedTypeName_1174405128(typeNameBuffer_1174406630, name_1174406645), NTI33554449);
                F.line = 45;
                var typ_1174406647 = headUpper_1241513986(name_1174406645);
                F.line = 46;
                var fieldDef_1174406648 = newFieldDefinition_1191182598(srcName_1174406646, typ_1174406647, isPublic_1174406625, forceBackquote_1174406626, false, false);
                F.line = 48;
                addFieldDefinition_1191182359(defs_1174406622[defs_1174406622_Idx][chckIndx(defIndex_1174406634, 0, (defs_1174406622[defs_1174406622_Idx]).length - 1)], fieldDef_1174406648);
                break;
              case 6:
                  var Temporary6 = node_1174406644;
                  if (ConstSet13[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI687865859)); }
                  if (!(0 < (Temporary6.elems).length)) Temporary5 = false; else {                    var Temporary7 = node_1174406644;
                    if (ConstSet14[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI687865859)); }
                    Temporary5 = ((Temporary8 = Temporary7.elems, Temporary8)[chckIndx(0, 0, (Temporary8).length - 1)].kind == 5);                  }                if (Temporary5) {
                F.line = 51;
                var srcName_1174406656 = nimCopy(null, name_1174406645, NTI33554449);
                F.line = 52;
                name_1174406645 = nimCopy(null, originalOrNumberedTypeName_1174405128(typeNameBuffer_1174406630, name_1174406645), NTI33554449);
                F.line = 53;
                var typ_1174406657 = headUpper_1241513986(name_1174406645);
                F.line = 54;
                var fieldDef_1174406658 = newFieldDefinition_1191182598(srcName_1174406656, typ_1174406657, isPublic_1174406625, forceBackquote_1174406626, true, false);
                F.line = 56;
                addFieldDefinition_1191182359(defs_1174406622[defs_1174406622_Idx][chckIndx(defIndex_1174406634, 0, (defs_1174406622[defs_1174406622_Idx]).length - 1)], fieldDef_1174406658);
                }
                
                break;
              default: 
                break;
              }
              F.line = 39;
              parse_1174406620(node_1174406644, defs_1174406622, defs_1174406622_Idx, defIndex_1174406634, name_1174406645, isPublic_1174406625, forceBackquote_1174406626, false, typeNameBuffer_1174406630);
              if (!((len_687868116(colontmp__536871094) == L_536871096))) {
              F.line = 1724;
              F.filename = "tables.nim";
              failedAssertImpl_268435541(makeNimstrLit("/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim(1724, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 1308;
              h_536871097 = nxt_536871099;
            }
        };
        }
        
      };
      break;
    case 6:
        var Temporary9 = jsonNode_1174406621;
        if (ConstSet15[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI687865859)); }
      if ((0 < (Temporary9.elems).length)) {
      F.line = 62;
      F.filename = "parser.nim";
      var Temporary10 = jsonNode_1174406621;
      if (ConstSet16[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI687865859)); }
      var child_1174406662 = (Temporary11 = Temporary10.elems, Temporary11)[chckIndx(0, 0, (Temporary11).length - 1)];
      F.line = 63;
      parse_1174406620(child_1174406662, defs_1174406622, defs_1174406622_Idx, defIndex_1174406623, objectName_1174406624, isPublic_1174406625, forceBackquote_1174406626, true, typeNameBuffer_1174406630);
      }
      else {
        F.line = 65;
        var typ_1174406663 = [78,105,108,84,121,112,101];
        F.line = 66;
        var fieldDef_1174406664 = newFieldDefinition_1191182598(objectName_1174406624, typ_1174406663, isPublic_1174406625, forceBackquote_1174406626, true, false);
        F.line = 68;
        addFieldDefinition_1191182359(defs_1174406622[defs_1174406622_Idx][chckIndx(defIndex_1174406623, 0, (defs_1174406622[defs_1174406622_Idx]).length - 1)], fieldDef_1174406664);
      }
      
      break;
    case 4:
    case 2:
    case 3:
    case 1:
    case 0:
      F.line = 70;
      var typ_1174406665 = kind2str_1174405125(jsonNode_1174406621.kind);
      F.line = 71;
      var fieldDef_1174406666 = newFieldDefinition_1191182598(objectName_1174406624, typ_1174406665, isPublic_1174406625, forceBackquote_1174406626, isSeq_1174406627, false);
      F.line = 72;
      addFieldDefinition_1191182359(defs_1174406622[defs_1174406622_Idx][chckIndx(defIndex_1174406623, 0, (defs_1174406622[defs_1174406622_Idx]).length - 1)], fieldDef_1174406666);
      break;
    }
  framePtr = F.prev;

  
}

function parse_1174406667(jsonNode_1174406668, defs_1174406669, defs_1174406669_Idx, defIndex_1174406670, objectName_1174406671, isPublic_1174406672, forceBackquote_1174406673, isSeq_1174406674) {
  var F = {procname: "parser.parse", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/parser.nim", line: 0};
  framePtr = F;
    F.line = 78;
    F.filename = "parser.nim";
    var typeNameBuffer_1174406686 = [initTable_1174406675(32)];
    F.line = 79;
    parse_1174406620(jsonNode_1174406668, defs_1174406669, defs_1174406669_Idx, defIndex_1174406670, objectName_1174406671, isPublic_1174406672, forceBackquote_1174406673, isSeq_1174406674, typeNameBuffer_1174406686[0]);
  framePtr = F.prev;

  
}

function newNilTypeObjectDefinition_1191182594(isPublic_1191182595, forceBackquote_1191182596) {
  var result_1191182597 = ({name: [], fields: [], isRef: false, isNilType: false, isPublic: false, isNormalized: false, isBackquoted: false, primitiveType: [], isSeq: false});

  var F = {procname: "types.newNilTypeObjectDefinition", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/types.nim", line: 0};
  framePtr = F;
    F.line = 128;
    F.filename = "types.nim";
    result_1191182597 = nimCopy(result_1191182597, newObjectDefinition_1191182586([78,105,108,84,121,112,101], true, isPublic_1191182595, forceBackquote_1191182596, [], false), NTI1191182339);
  framePtr = F.prev;

  return result_1191182597;

}

function add_1174406716(x_1174406718, x_1174406718_Idx, y_1174406719) {
    var Temporary1;

  var F = {procname: "add.add", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1204;
    F.filename = "system.nim";
    var xl_1174406723 = (x_1174406718[x_1174406718_Idx]).length;
    F.line = 1205;
    if (x_1174406718[x_1174406718_Idx].length < (Temporary1 = chckRange(addInt(xl_1174406723, (y_1174406719).length), 0, 2147483647), Temporary1)) { for (var i = x_1174406718[x_1174406718_Idx].length ; i < Temporary1 ; ++i) x_1174406718[x_1174406718_Idx].push(({name: [], fields: [], isRef: false, isNilType: false, isPublic: false, isNormalized: false, isBackquoted: false, primitiveType: [], isSeq: false})); }
               else { x_1174406718[x_1174406718_Idx].length = Temporary1; };
    Label2: {
      F.line = 1206;
      var i_1174406739 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536871110 = 0;
      F.line = 1206;
      F.filename = "system.nim";
      colontmp__536871110 = (y_1174406719).length - 1;
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536871111 = 0;
      Label3: {
        F.line = 91;
          Label4: while (true) {
          if (!(res_536871111 <= colontmp__536871110)) break Label4;
            F.line = 1206;
            F.filename = "system.nim";
            i_1174406739 = res_536871111;
            F.line = 1206;
            x_1174406718[x_1174406718_Idx][chckIndx(addInt(xl_1174406723, i_1174406739), 0, (x_1174406718[x_1174406718_Idx]).length - 1)] = nimCopy(x_1174406718[x_1174406718_Idx][chckIndx(addInt(xl_1174406723, i_1174406739), 0, (x_1174406718[x_1174406718_Idx]).length - 1)], y_1174406719[chckIndx(i_1174406739, 0, (y_1174406719).length - 1)], NTI1191182339);
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536871111 = addInt(res_536871111, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function parseAndGetString_1174406704(jsonNode_1174406705, objectName_1174406706, isPublic_1174406707, forceBackquote_1174406708) {
  var result_1174406709 = [];

  var F = {procname: "parser.parseAndGetString", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjsonpkg/parser.nim", line: 0};
  framePtr = F;
    F.line = 83;
    F.filename = "parser.nim";
    var defs_1174406710 = [[]];
    F.line = 84;
    parse_1174406667(jsonNode_1174406705, defs_1174406710, 0, 0, objectName_1174406706, isPublic_1174406707, forceBackquote_1174406708, false);
    F.line = 88;
    var resultDefs_1174406711 = [[]];
    F.line = 89;
    resultDefs_1174406711[0].push(newNilTypeObjectDefinition_1191182594(isPublic_1174406707, forceBackquote_1174406708));;
    F.line = 90;
    add_1174406716(resultDefs_1174406711, 0, defs_1174406710[0]);
    F.line = 92;
    result_1174406709.push.apply(result_1174406709, [116,121,112,101,10]);;
    F.line = 93;
    result_1174406709.push.apply(result_1174406709, toDefinitionString_1191182719(resultDefs_1174406711[0]));;
  framePtr = F.prev;

  return result_1174406709;

}

function toTypeString_671088644(self_671088645, objName_671088646, publicField_671088647, quoteField_671088648) {
  var result_671088649 = [];

  var F = {procname: "nimjson.toTypeString", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjson.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 40;
    F.filename = "nimjson.nim";
    result_671088649 = nimCopy(null, parseAndGetString_1174406704(self_671088645, objName_671088646, publicField_671088647, quoteField_671088648), NTI33554449);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_671088649;

}

function getVarType_687871360(x_687871361, isRawNumber_687871362, isRawNumber_687871362_Idx) {
        var Temporary1;

  var result_687871363 = 0;

  var F = {procname: "json.getVarType", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 969;
    F.filename = "json.nim";
    result_687871363 = 0;
    F.line = 970;
    switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_687871361)))) {
    case "[object Array]":
      F.line = 971;
      result_687871363 = 6;
      break BeforeRet;
      break;
    case "[object Object]":
      F.line = 972;
      result_687871363 = 5;
      break BeforeRet;
      break;
    case "[object Number]":
        if (!Number.isInteger(x_687871361)) Temporary1 = false; else {          Temporary1 = !(((1.0 / x_687871361) == -Infinity));        }      if (Temporary1) {
      if (Number.isSafeInteger(x_687871361)) {
      F.line = 976;
      result_687871363 = 2;
      break BeforeRet;
      }
      else {
        F.line = 978;
        isRawNumber_687871362[isRawNumber_687871362_Idx] = true;
        F.line = 979;
        result_687871363 = 4;
        break BeforeRet;
      }
      
      }
      else {
        F.line = 981;
        result_687871363 = 3;
        break BeforeRet;
      }
      
      break;
    case "[object Boolean]":
      F.line = 982;
      result_687871363 = 1;
      break BeforeRet;
      break;
    case "[object Null]":
      F.line = 983;
      result_687871363 = 0;
      break BeforeRet;
      break;
    case "[object String]":
      F.line = 984;
      result_687871363 = 4;
      break BeforeRet;
      break;
    default: 
      if (true) {
      F.line = 985;
      failedAssertImpl_268435541(makeNimstrLit("/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim(985, 11) `false` "));
      }
      
      break;
    }
  };
  framePtr = F.prev;

  return result_687871363;

}

function newJArray_687866034() {
  var result_687866035 = null;

  var F = {procname: "json.newJArray", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
  framePtr = F;
    F.line = 243;
    F.filename = "json.nim";
    result_687866035 = {kind: 6, elems: [], isUnquoted: false, str: [], num: 0n, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0})};
  framePtr = F.prev;

  return result_687866035;

}

function len_687871381(x_687871382) {
  var result_687871383 = 0;

  var F = {procname: "json.len", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
  framePtr = F;
    F.line = 988;
    F.filename = "json.nim";
          result_687871383 = x_687871382.length;
    
  framePtr = F.prev;

  return result_687871383;

}

function add_687866156(father_687866157, child_687866158) {
    var Temporary1;

  var F = {procname: "json.add", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
  framePtr = F;
    if (!((father_687866157.kind == 6))) {
    F.line = 301;
    F.filename = "json.nim";
    failedAssertImpl_268435541(makeNimstrLit("/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim(301, 3) `father.kind == JArray` "));
    }
    
    F.line = 302;
    var Temporary1 = father_687866157;
    if (ConstSet17[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI687865859)); }
    Temporary1.elems.push(child_687866158);;
  framePtr = F.prev;

  
}

function initOrderedTable_687865988(initialSize_687865991) {
  var result_687865992 = ({data: [], counter: 0, first: 0, last: 0});

  var F = {procname: "initOrderedTable.initOrderedTable", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym0_687865994 = slotsNeeded_754974762(chckRange(initialSize_687865991, 0, 2147483647));
    F.line = 169;
    result_687865992.counter = 0;
    F.line = 170;
    result_687865992.data = new Array(chckRange(correctSizeHEX60gensym0_687865994, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_687865994, 0, 2147483647) ; ++i) { result_687865992.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    F.line = 172;
    result_687865992.first = (-1);
    F.line = 173;
    result_687865992.last = (-1);
  framePtr = F.prev;

  return result_687865992;

}

function newJObject_687865986() {
  var result_687865987 = null;

  var F = {procname: "json.newJObject", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
  framePtr = F;
    F.line = 239;
    F.filename = "json.nim";
    result_687865987 = {kind: 5, fields: initOrderedTable_687865988(2), isUnquoted: false, str: [], num: 0n, fnum: 0.0, bval: false, elems: []};
  framePtr = F.prev;

  return result_687865987;

}

function rawGet_687866294(t_687866297, key_687866298, hc_687866299, hc_687866299_Idx) {
  var result_687866300 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 59;
    F.filename = "hashcommon.nim";
    hc_687866299[hc_687866299_Idx] = hash_704643567(key_687866298);
    if ((hc_687866299[hc_687866299_Idx] == 0)) {
    F.line = 61;
    hc_687866299[hc_687866299_Idx] = 314159265;
    }
    
    if (((t_687866297.data).length == 0)) {
    F.line = 43;
    result_687866300 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_687866351 = (hc_687866299[hc_687866299_Idx] & (t_687866297.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_754974751(t_687866297.data[chckIndx(h_687866351, 0, (t_687866297.data).length - 1)].Field0)) break Label2;
          if (((t_687866297.data[chckIndx(h_687866351, 0, (t_687866297.data).length - 1)].Field0 == hc_687866299[hc_687866299_Idx]) && eqStrings(t_687866297.data[chckIndx(h_687866351, 0, (t_687866297.data).length - 1)].Field2, key_687866298))) {
          F.line = 51;
          result_687866300 = h_687866351;
          break BeforeRet;
          }
          
          F.line = 52;
          h_687866351 = nextTry_754974754(h_687866351, (t_687866297.data).length - 1);
        }
    };
    F.line = 53;
    result_687866300 = subInt((-1), h_687866351);
  };
  framePtr = F.prev;

  return result_687866300;

}

function mustRehash_687866636(t_687866638) {
  var result_687866639 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_687866638.counter < (t_687866638.data).length))) {
    F.line = 34;
    F.filename = "hashcommon.nim";
    failedAssertImpl_268435541(makeNimstrLit("/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 35;
    result_687866639 = ((mulInt((t_687866638.data).length, 2) < mulInt(t_687866638.counter, 3)) || (subInt((t_687866638.data).length, t_687866638.counter) < 4));
  framePtr = F.prev;

  return result_687866639;

}

function rawInsert_687867214(t_687867217, data_687867218, data_687867218_Idx, key_687867219, val_687867220, hc_687867221, h_687867222) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "tableimpl.nim";
    data_687867218[data_687867218_Idx][chckIndx(h_687867222, 0, (data_687867218[data_687867218_Idx]).length - 1)].Field2 = nimCopy(null, key_687867219, NTI33554449);
    F.line = 26;
    data_687867218[data_687867218_Idx][chckIndx(h_687867222, 0, (data_687867218[data_687867218_Idx]).length - 1)].Field3 = val_687867220;
    F.line = 27;
    data_687867218[data_687867218_Idx][chckIndx(h_687867222, 0, (data_687867218[data_687867218_Idx]).length - 1)].Field0 = hc_687867221;
    F.line = 1279;
    F.filename = "tables.nim";
    data_687867218[data_687867218_Idx][chckIndx(h_687867222, 0, (data_687867218[data_687867218_Idx]).length - 1)].Field1 = (-1);
    if ((t_687867217.first < 0)) {
    F.line = 1280;
    t_687867217.first = h_687867222;
    }
    
    if ((0 <= t_687867217.last)) {
    F.line = 1281;
    data_687867218[data_687867218_Idx][chckIndx(t_687867217.last, 0, (data_687867218[data_687867218_Idx]).length - 1)].Field1 = h_687867222;
    }
    
    F.line = 1282;
    t_687867217.last = h_687867222;
  framePtr = F.prev;

  
}

function enlarge_687866799(t_687866802) {
          var Temporary6;
          var Temporary7;

  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 1285;
    F.filename = "tables.nim";
    var n_687866805 = [];
    F.line = 1286;
    n_687866805 = new Array(chckRange(mulInt((t_687866802.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_687866802.data).length, 2), 0, 2147483647) ; ++i) { n_687866805[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    F.line = 1287;
    var h_687866857 = t_687866802.first;
    F.line = 1288;
    t_687866802.first = (-1);
    F.line = 1289;
    t_687866802.last = (-1);
    F.line = 1290;
    var Temporary1 = t_687866802.data; t_687866802.data = n_687866805; n_687866805 = Temporary1;    Label2: {
      F.line = 1291;
        Label3: while (true) {
        if (!(0 <= h_687866857)) break Label3;
          F.line = 1292;
          var nxt_687866915 = n_687866805[chckIndx(h_687866857, 0, (n_687866805).length - 1)].Field1;
          F.line = 1293;
          var eh_687866969 = n_687866805[chckIndx(h_687866857, 0, (n_687866805).length - 1)].Field0;
          if (isFilled_754974751(eh_687866969)) {
          F.line = 1295;
          var j_687866973 = (eh_687866969 & (t_687866802.data).length - 1);
          Label4: {
            F.line = 1296;
              Label5: while (true) {
              if (!isFilled_754974751(t_687866802.data[chckIndx(j_687866973, 0, (t_687866802.data).length - 1)].Field0)) break Label5;
                F.line = 1297;
                j_687866973 = nextTry_754974754(j_687866973, (t_687866802.data).length - 1);
              }
          };
          F.line = 1298;
          Temporary6 = n_687866805[chckIndx(h_687866857, 0, (n_687866805).length - 1)].Field2;
          n_687866805[chckIndx(h_687866857, 0, (n_687866805).length - 1)].Field2 = genericReset(n_687866805[chckIndx(h_687866857, 0, (n_687866805).length - 1)].Field2, NTI33554449);
          Temporary7 = n_687866805[chckIndx(h_687866857, 0, (n_687866805).length - 1)].Field3;
          n_687866805[chckIndx(h_687866857, 0, (n_687866805).length - 1)].Field3 = genericReset(n_687866805[chckIndx(h_687866857, 0, (n_687866805).length - 1)].Field3, NTI687865860);
          rawInsert_687867214(t_687866802, t_687866802, "data", Temporary6, Temporary7, n_687866805[chckIndx(h_687866857, 0, (n_687866805).length - 1)].Field0, j_687866973);
          }
          
          F.line = 1299;
          h_687866857 = nxt_687866915;
        }
    };
  framePtr = F.prev;

  
}

function rawGetKnownHC_687867496(t_687867499, key_687867500, hc_687867501) {
  var result_687867502 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((t_687867499.data).length == 0)) {
    F.line = 43;
    F.filename = "hashcommon.nim";
    result_687867502 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_687867553 = (hc_687867501 & (t_687867499.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_754974751(t_687867499.data[chckIndx(h_687867553, 0, (t_687867499.data).length - 1)].Field0)) break Label2;
          if (((t_687867499.data[chckIndx(h_687867553, 0, (t_687867499.data).length - 1)].Field0 == hc_687867501) && eqStrings(t_687867499.data[chckIndx(h_687867553, 0, (t_687867499.data).length - 1)].Field2, key_687867500))) {
          F.line = 51;
          result_687867502 = h_687867553;
          break BeforeRet;
          }
          
          F.line = 52;
          h_687867553 = nextTry_754974754(h_687867553, (t_687867499.data).length - 1);
        }
    };
    F.line = 53;
    result_687867502 = subInt((-1), h_687867553);
  };
  framePtr = F.prev;

  return result_687867502;

}

function HEX5BHEX5DHEX3D_687866225(t_687866228, key_687866229, val_687866230) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_687866228.data).length == 0)) {
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym13_687866280 = slotsNeeded_754974762(32);
    F.line = 169;
    t_687866228.counter = 0;
    F.line = 170;
    t_687866228.data = new Array(chckRange(correctSizeHEX60gensym13_687866280, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_687866280, 0, 2147483647) ; ++i) { t_687866228.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    F.line = 172;
    t_687866228.first = (-1);
    F.line = 173;
    t_687866228.last = (-1);
    }
    
    F.line = 59;
    var hc_687866285 = [0];
    F.line = 60;
    var index_687866529 = rawGet_687866294(t_687866228, key_687866229, hc_687866285, 0);
    if ((0 <= index_687866529)) {
    F.line = 61;
    t_687866228.data[chckIndx(index_687866529, 0, (t_687866228.data).length - 1)].Field3 = val_687866230;
    }
    else {
      if (((t_687866228.data).length == 0)) {
      F.line = 165;
      var correctSizeHEX60gensym18_687866631 = slotsNeeded_754974762(32);
      F.line = 169;
      t_687866228.counter = 0;
      F.line = 170;
      t_687866228.data = new Array(chckRange(correctSizeHEX60gensym18_687866631, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_687866631, 0, 2147483647) ; ++i) { t_687866228.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }      F.line = 172;
      t_687866228.first = (-1);
      F.line = 173;
      t_687866228.last = (-1);
      }
      
      if (mustRehash_687866636(t_687866228)) {
      F.line = 51;
      enlarge_687866799(t_687866228);
      F.line = 52;
      index_687866529 = rawGetKnownHC_687867496(t_687866228, key_687866229, hc_687866285[0]);
      }
      
      F.line = 53;
      index_687866529 = subInt((-1), index_687866529);
      F.line = 54;
      rawInsert_687867214(t_687866228, t_687866228, "data", key_687866229, val_687866230, hc_687866285[0], index_687866529);
      F.line = 62;
      t_687866228.counter = addInt(t_687866228.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function HEX5BHEX5DHEX3D_687867889(obj_687867890, key_687867891, val_687867892) {
    var Temporary1;

  var F = {procname: "json.[]=", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
  framePtr = F;
    if (!((obj_687867890.kind == 5))) {
    F.line = 390;
    F.filename = "json.nim";
    failedAssertImpl_268435541(makeNimstrLit("/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim(390, 9) `obj.kind == JObject` "));
    }
    
    F.line = 391;
    var Temporary1 = obj_687867890;
    if (ConstSet18[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI687865859)); }
    HEX5BHEX5DHEX3D_687866225(Temporary1.fields, key_687867891, val_687867892);
  framePtr = F.prev;

  
}

function newJInt_687865975(n_687865976) {
  var result_687865977 = null;

  var F = {procname: "json.newJInt", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
  framePtr = F;
    F.line = 223;
    F.filename = "json.nim";
    result_687865977 = {kind: 2, num: n_687865976, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
  framePtr = F.prev;

  return result_687865977;

}

function newJFloat_687865978(n_687865979) {
  var result_687865980 = null;

  var F = {procname: "json.newJFloat", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
  framePtr = F;
    F.line = 227;
    F.filename = "json.nim";
    result_687865980 = {kind: 3, fnum: n_687865979, isUnquoted: false, str: [], num: 0n, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
  framePtr = F.prev;

  return result_687865980;

}

function newJRawNumber_687865972(s_687865973) {
  var result_687865974 = null;

  var F = {procname: "json.newJRawNumber", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
  framePtr = F;
    F.line = 219;
    F.filename = "json.nim";
    result_687865974 = {kind: 4, str: nimCopy(null, s_687865973, NTI33554449), isUnquoted: true, num: 0n, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
  framePtr = F.prev;

  return result_687865974;

}

function newJString_687865898(s_687865899) {
  var result_687865900 = null;

  var F = {procname: "json.newJString", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
  framePtr = F;
    F.line = 212;
    F.filename = "json.nim";
    result_687865900 = {kind: 4, str: nimCopy(null, s_687865899, NTI33554449), isUnquoted: false, num: 0n, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
  framePtr = F.prev;

  return result_687865900;

}

function newJBool_687865981(b_687865982) {
  var result_687865983 = null;

  var F = {procname: "json.newJBool", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
  framePtr = F;
    F.line = 231;
    F.filename = "json.nim";
    result_687865983 = {kind: 1, bval: b_687865982, isUnquoted: false, str: [], num: 0n, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
  framePtr = F.prev;

  return result_687865983;

}

function newJNull_687865984() {
  var result_687865985 = null;

  var F = {procname: "json.newJNull", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
  framePtr = F;
    F.line = 235;
    F.filename = "json.nim";
    result_687865985 = {kind: 0, isUnquoted: false, str: [], num: 0n, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
  framePtr = F.prev;

  return result_687865985;

}

function convertObject_687871384(x_687871385) {
  var result_687871386 = null;

  var F = {procname: "json.convertObject", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
  framePtr = F;
    F.line = 993;
    F.filename = "json.nim";
    var isRawNumber_687871387 = [false];
    F.line = 994;
    switch (getVarType_687871360(x_687871385, isRawNumber_687871387, 0)) {
    case 6:
      F.line = 996;
      result_687871386 = newJArray_687866034();
      Label1: {
        F.line = 997;
        var i_687871392 = 0;
        F.line = 117;
        F.filename = "iterators_1.nim";
        var colontmp__536871114 = 0;
        F.line = 997;
        F.filename = "json.nim";
        colontmp__536871114 = len_687871381(x_687871385);
        F.line = 119;
        F.filename = "iterators_1.nim";
        var i_536871115 = 0;
        Label2: {
          F.line = 120;
            Label3: while (true) {
            if (!(i_536871115 < colontmp__536871114)) break Label3;
              F.line = 997;
              F.filename = "json.nim";
              i_687871392 = i_536871115;
              F.line = 997;
              add_687866156(result_687871386, convertObject_687871384(x_687871385[i_687871392]));
              F.line = 122;
              F.filename = "iterators_1.nim";
              i_536871115 = addInt(i_536871115, 1);
            }
        };
      };
      break;
    case 5:
      F.line = 1000;
      F.filename = "json.nim";
      result_687871386 = newJObject_687865986();
      F.line = 1001;
      for (var property in x_687871385) {
        if (x_687871385.hasOwnProperty(property)) {
      
      F.line = 1004;
      var nimProperty_687871393 = null;
      F.line = 1005;
      var nimValue_687871394 = null;
      F.line = 1006;
      nimProperty_687871393 = property; nimValue_687871394 = x_687871385[property];
      F.line = 1007;
      HEX5BHEX5DHEX3D_687867889(result_687871386, cstrToNimstr(nimProperty_687871393), convertObject_687871384(nimValue_687871394));
      F.line = 1008;
      }}
      break;
    case 2:
      F.line = 1010;
      result_687871386 = newJInt_687865975(BigInt((x_687871385)));
      break;
    case 3:
      F.line = 1012;
      result_687871386 = newJFloat_687865978((x_687871385));
      break;
    case 4:
      if (isRawNumber_687871387[0]) {
      F.line = 1016;
      var value_687871403 = null;
      F.line = 1017;
      value_687871403 = x_687871385.toString();
      F.line = 1018;
      result_687871386 = newJRawNumber_687865972(cstrToNimstr(value_687871403));
      }
      else {
        F.line = 1020;
        result_687871386 = newJString_687865898(cstrToNimstr((x_687871385)));
      }
      
      break;
    case 1:
      F.line = 1022;
      result_687871386 = newJBool_687865981((x_687871385));
      break;
    case 0:
      F.line = 1024;
      result_687871386 = newJNull_687865984();
      break;
    }
  framePtr = F.prev;

  return result_687871386;

}

function parseJson_687871412(buffer_687871413) {
  var result_687871414 = null;

  var F = {procname: "json.parseJson", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.0/lib/pure/json.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1030;
    F.filename = "json.nim";
    result_687871414 = convertObject_687871384(JSON.parse(toJSStr(buffer_687871413)));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_687871414;

}

function toTypeString_671088650(jsonString_671088651, objName_671088652, publicField_671088653, quoteField_671088654, jsonSchema_671088655, disableOptionType_671088656) {
  var result_671088657 = [];

  var F = {procname: "nimjson.toTypeString", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/src/nimjson.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (jsonSchema_671088655) {
    F.line = 121;
    F.filename = "nimjson.nim";
    result_671088657 = nimCopy(null, parseAndGetString_1258291805(jsonString_671088651, objName_671088652, publicField_671088653, quoteField_671088654, disableOptionType_671088656), NTI33554449);
    break BeforeRet;
    }
    
    F.line = 123;
    result_671088657 = nimCopy(null, toTypeString_671088644(parseJson_687871412(jsonString_671088651), objName_671088652, publicField_671088653, quoteField_671088654), NTI33554449);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_671088657;

}

function generateNimDefinitions(str_536870915, publicField_536870916, jsonSchema_536870917) {
  var result_536870918 = null;

  var F = {procname: "nimjson_js.generateNimDefinitions", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/js/nimjson_js.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 5;
    F.filename = "nimjson_js.nim";
    result_536870918 = toJSStr(toTypeString_671088650(cstrToNimstr(str_536870915), [79,98,106,101,99,116], publicField_536870916, false, jsonSchema_536870917, false));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536870918;

}
var F = {procname: "module nimjson_js", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/js/nimjson_js.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimjson_js", prev: framePtr, filename: "/home/runner/work/nimjson/nimjson/js/nimjson_js.nim", line: 0};
framePtr = F;
framePtr = F.prev;
